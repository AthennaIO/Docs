"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[1029],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),h=l(r),m=a,u=h["".concat(s,".").concat(m)]||h[m]||p[m]||n;return r?i.createElement(u,o(o({ref:t},c),{},{components:r})):i.createElement(u,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,o=new Array(n);o[0]=h;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var l=2;l<n;l++)o[l]=r[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6435:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return c}});var i=r(7462),a=r(3366),n=(r(7294),r(3905)),o=["components"],d={sidebar_position:3,id:"structure",title:"Directory Structure",hide_title:!0,hide_table_of_contents:!0,tags:["Getting Started","Architecture Concepts"]},s=void 0,l={unversionedId:"getting-started/structure",id:"getting-started/structure",title:"Directory Structure",description:"\ud83c\udfe0",source:"@site/docs/getting-started/structure.mdx",sourceDirName:"getting-started",slug:"/getting-started/structure",permalink:"/docs/getting-started/structure",editUrl:"https://github.com/AthennaIO/Docs/docs/getting-started/structure.mdx",tags:[{label:"Getting Started",permalink:"/docs/tags/getting-started"},{label:"Architecture Concepts",permalink:"/docs/tags/architecture-concepts"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"structure",title:"Directory Structure",hide_title:!0,hide_table_of_contents:!0,tags:["Getting Started","Architecture Concepts"]},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/getting-started/configuration"},next:{title:"Application Lifecycle",permalink:"/docs/architecture-concepts/lifecycle"}},c=[{value:"Introduction",id:"id-introduction",children:[],level:2},{value:"The root directory",id:"id-the-root-directory",children:[{value:"The app directory",id:"id-the-app-directory",children:[],level:3},{value:"The bootstrap directory",id:"id-the-bootstrap-directory",children:[],level:3},{value:"The config directory",id:"id-the-config-directory",children:[],level:3},{value:"The database directory",id:"id-the-resources-directory",children:[],level:3},{value:"The providers directory",id:"id-the-providers-directory",children:[],level:3},{value:"The routes directory",id:"id-the-routes-directory",children:[],level:3},{value:"The storage directory",id:"id-the-storage-directory",children:[],level:3},{value:"The tests directory",id:"id-the-tests-directory",children:[],level:3}],level:2},{value:"The app directory",id:"id-the-main-app-directory",children:[{value:"The Console directory",id:"id-the-Console-directory",children:[],level:3},{value:"The Http directory",id:"id-the-Http-directory",children:[],level:3},{value:"The Models directory",id:"id-the-Models-directory",children:[],level:3},{value:"The Repositories directory",id:"id-the-Repositories-directory",children:[],level:3},{value:"The Resources directory",id:"id-the-Resources-directory",children:[],level:3},{value:"The Services directory",id:"id-the-Services-directory",children:[],level:3}],level:2}],p={toc:c};function h(e){var t=e.components,r=(0,a.Z)(e,o);return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("nav",{"aria-label":"breadcrumbs"},(0,n.kt)("ul",{class:"breadcrumbs"},(0,n.kt)("li",{class:"breadcrumbs__item"},(0,n.kt)("a",{class:"breadcrumbs__link",href:"/"},"\ud83c\udfe0")),(0,n.kt)("li",{class:"breadcrumbs__item"},(0,n.kt)("a",{class:"breadcrumbs__link"},"Getting Started")),(0,n.kt)("li",{class:"breadcrumbs__item"},(0,n.kt)("a",{class:"breadcrumbs__link",href:"/docs/getting-started/structure"},"Directory Structure")))),(0,n.kt)("span",{class:"badge badge--secondary margin-top-bot"},"version 1.0.0"),(0,n.kt)("h1",{id:"directory-structure"},"Directory Structure"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"introduction"},(0,n.kt)("a",{parentName:"h4",href:"#id-introduction"},"Introduction"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-root-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-root-directory"},"The root directory")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-app-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-app-directory"},"The app directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-bootstrap-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-bootstrap-directory"},"The bootstrap directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-config-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-config-directory"},"The config directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-database-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-database-directory"},"The database directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-providers-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-providers-directory"},"The providers directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-routes-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-routes-directory"},"The routes directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-storage-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-storage-directory"},"The storage directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-tests-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-tests-directory"},"The tests directory"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-app-directory-1"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-main-app-directory"},"The app directory")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-console-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Console-directory"},"The Console directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-http-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Http-directory"},"The Http directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-models-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Models-directory"},"The Models directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-repositories-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Repositories-directory"},"The Repositories directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-resources-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Resources-directory"},"The Resources directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h4",{parentName:"li",id:"the-services-directory"},(0,n.kt)("a",{parentName:"h4",href:"#id-the-Services-directory"},"The Services directory")))))),(0,n.kt)("h2",{id:"id-introduction"},"Introduction"),(0,n.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"We highly recommend using the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make")," command to generate the files of your application. If using the Artisan,\nit will automatically generate the file and register it wherever is needed. Take as an example the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:command"),"\ncommand. First it will generate the file and then will register the command inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"commands")," array property of\n",(0,n.kt)("inlineCode",{parentName:"p"},"app/Console/Kernel.js")," file."))),(0,n.kt)("h2",{id:"id-the-root-directory"},"The root directory"),(0,n.kt)("h3",{id:"id-the-app-directory"},"The app directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory contains the core code of your application. We'll explore this directory in more detail soon. Almost\nall the classes in your application will be in this directory."),(0,n.kt)("h3",{id:"id-the-bootstrap-directory"},"The bootstrap directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"bootstrap")," directory, contains all of your application's bootstrap files. It's here that Athenna holds the ",(0,n.kt)("inlineCode",{parentName:"p"},"main"),"\nfile that bootstrap the application using the ",(0,n.kt)("inlineCode",{parentName:"p"},"Ignite")," class."),(0,n.kt)("h3",{id:"id-the-config-directory"},"The config directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"config")," directory, contains all of your application's configuration files. It's a great idea to read through all\nof these files and familiarize yourself with all the options available to you."),(0,n.kt)("h3",{id:"id-the-resources-directory"},"The database directory"),(0,n.kt)("p",null,"This directory does not exist by default, but will be created for you if you execute the ",(0,n.kt)("inlineCode",{parentName:"p"},"athenna install:database")," command.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"database")," directory contains your database migrations, model factories, and seeds. If you wish, you may also use\nthis directory to hold an SQLite database."),(0,n.kt)("h3",{id:"id-the-providers-directory"},"The providers directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"providers")," directory contains all the service providers for your application. Service providers bootstrap your\napplication by binding services in the service container, registering events, or performing any other tasks to\nprepare your application to run."),(0,n.kt)("p",null,"Inside this directory we also have the ",(0,n.kt)("inlineCode",{parentName:"p"},"Container")," file. This file is just a type that defines the type that exists\ninside the container. Very useful to use inside other providers' constructor such as ",(0,n.kt)("inlineCode",{parentName:"p"},"Services"),". See the example above:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"export class UserService {\n  /**\n   * @type {import('#app/Services/MyAppService').MyAppService}\n   */\n  #myAppService\n\n  /**\n   * Create a new controller instance.\n   *\n   * @param {any} myAppService\n   */\n  constructor(myAppService) {\n    this.#myAppService = myAppService\n  }\n\n  /**\n   * Find one user by id.\n   *\n   * @param {string} id\n   */\n  async findOne(id) {\n    return this.#myAppService.findOne(id)\n  }\n}\n")),(0,n.kt)("h3",{id:"id-the-routes-directory"},"The routes directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"routes")," directory contains all the route definitions for your application. By default, several route files are\nincluded with Athenna: ",(0,n.kt)("inlineCode",{parentName:"p"},"http"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"console"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"http")," file is where you will define the entrypoint of your api using the ",(0,n.kt)("inlineCode",{parentName:"p"},"Route")," facade that is provided by the\n",(0,n.kt)("inlineCode",{parentName:"p"},"HttpRouteProvider"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"console")," file is where you will define the entrypoint of your commands using the ",(0,n.kt)("inlineCode",{parentName:"p"},"Artisan")," facade that is provided\nby the ",(0,n.kt)("inlineCode",{parentName:"p"},"ArtisanProvider"),"."),(0,n.kt)("h3",{id:"id-the-storage-directory"},"The storage directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"storage")," directory contains your logs, file caches, files uploaded locally and other files generated by the\nframework. This directory is segregated into ",(0,n.kt)("inlineCode",{parentName:"p"},"app"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"framework"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"logs")," directories. The ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory\nmay be used to store any files generated by your application. The ",(0,n.kt)("inlineCode",{parentName:"p"},"framework")," directory is used to store framework\ngenerated files and caches and the ",(0,n.kt)("inlineCode",{parentName:"p"},"logs")," directory contains your application's log files."),(0,n.kt)("h3",{id:"id-the-tests-directory"},"The tests directory"),(0,n.kt)("p",null,"You can create a test executing the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:test")," command. The ",(0,n.kt)("inlineCode",{parentName:"p"},"tests")," directory contains your unitary and E2E\ntests. ",(0,n.kt)("a",{parentName:"p",href:"https://japa.dev/"},"Japa")," unit tests and feature tests are provided out of the box. Each test class should be suffixed\nwith the word ",(0,n.kt)("inlineCode",{parentName:"p"},"Test"),". You may run your tests using the ",(0,n.kt)("inlineCode",{parentName:"p"},"npm test")," command."),(0,n.kt)("h2",{id:"id-the-main-app-directory"},"The app directory"),(0,n.kt)("p",null,"The majority of your application is housed in the ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory contains a variety of additional directories such as Http. Think of the ",(0,n.kt)("inlineCode",{parentName:"p"},"Http")," directory as providing\nan API into the core of your application. The HTTP protocol is a mechanism to interact with your application, but do\nnot actually contain application logic. In other words, it's a way of issuing commands to your application. The ",(0,n.kt)("inlineCode",{parentName:"p"},"Http"),"\ndirectory contains your controllers, middleware, and requests."),(0,n.kt)("p",null,"A variety of other directories will be generated inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory as you use the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make")," commands\nto generate classes. So, for example, you can generate a new model inside ",(0,n.kt)("inlineCode",{parentName:"p"},"App/Models")," directory executing the\n",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:model")," command to generate a model class."),(0,n.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"Many of the classes in the ",(0,n.kt)("inlineCode",{parentName:"p"},"app")," directory can be generated via ",(0,n.kt)("inlineCode",{parentName:"p"},"artisan make")," commands. To review the available commands,\nrun the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan list make")," command in your terminal."))),(0,n.kt)("h3",{id:"id-the-Console-directory"},"The Console directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Console")," directory contains all the custom Artisan commands for your application. These commands may be generated\nusing the ",(0,n.kt)("inlineCode",{parentName:"p"},"make:command")," command. This directory also houses your console kernel, which is where your custom Artisan\ncommands are registered."),(0,n.kt)("h3",{id:"id-the-Http-directory"},"The Http directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Http")," directory contains your controllers and middlewares. Almost all the logic to handle http requests entering your\napplication will be placed in this directory."),(0,n.kt)("h3",{id:"id-the-Models-directory"},"The Models directory"),(0,n.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Models")," directory will not come installed with the framework and the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:model")," will not work until you\nrun ",(0,n.kt)("inlineCode",{parentName:"p"},"athenna install:database")," command to set up ",(0,n.kt)("inlineCode",{parentName:"p"},"@athenna/database")," package in your project."))),(0,n.kt)("p",null,"This directory does not exist by default, but will be created for you if you execute the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:model")," command.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"Models"),' directory contains all of your ORM model classes. The ORM included with Athenna provides beautiful and\nsimple methods for working with your database. Each database table has a corresponding "Model" which is used to interact\nwith that table. Models allow you to query for data in your tables, as well as insert new records into the table.'),(0,n.kt)("h3",{id:"id-the-Repositories-directory"},"The Repositories directory"),(0,n.kt)("p",null,"This directory does not exist by default, but will be created for you if you execute the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:repository")," command.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"Repositories")," directory contains all the classes that retrieve data from somewhere. It can be a SQL, NoSQL Database\nor an ElasticSearch. Usually you are going to use the ORM with these classes to get your data and treat it before returning"),(0,n.kt)("h3",{id:"id-the-Resources-directory"},"The Resources directory"),(0,n.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Resources")," directory will not come installed with the framework and the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:resource")," will not work until you\nrun ",(0,n.kt)("inlineCode",{parentName:"p"},"athenna install:database")," command to set up ",(0,n.kt)("inlineCode",{parentName:"p"},"@athenna/database")," package in your project."))),(0,n.kt)("p",null,"This directory does not exist by default, but will be created for you if you execute the ",(0,n.kt)("inlineCode",{parentName:"p"},"node artisan make:resource")," command.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"Resources")," directory contains all the classes that will be responsible to transform your ORM models to a simple Object.\nFor example, you may wish to display certain attributes for a subset of users and not for others."),(0,n.kt)("h3",{id:"id-the-Services-directory"},"The Services directory"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Services")," directory contains the business logic of your application. The entrypoint of your application should have\nonly the logic responsible to receive the request, delegate to your service and return what service return. Every file in\n",(0,n.kt)("inlineCode",{parentName:"p"},"Services")," will be registered inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"Ioc container")," by the ",(0,n.kt)("inlineCode",{parentName:"p"},"ServiceProvider")," class. This way you can easily use this\nservices inside your entrypoint classes like controllers using the ",(0,n.kt)("inlineCode",{parentName:"p"},"constructor")," method in camelCase format, example: the\nclass name is ",(0,n.kt)("inlineCode",{parentName:"p"},"UserService")," but in the ",(0,n.kt)("inlineCode",{parentName:"p"},"constructor")," you call the ",(0,n.kt)("inlineCode",{parentName:"p"},"userService"),". You can explore the container in more detail in the\n",(0,n.kt)("a",{parentName:"p",href:"/docs/architecture-concepts/container"},"container architecture concepts section"),"."))}h.isMDXComponent=!0}}]);