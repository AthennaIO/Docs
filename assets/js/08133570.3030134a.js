"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[3582],{3323:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"digging-deeper/mail","title":"Mail","description":"See how to send emails in Athenna.","source":"@site/docs/digging-deeper/mail.mdx","sourceDirName":"digging-deeper","slug":"/digging-deeper/mail","permalink":"/docs/digging-deeper/mail","draft":false,"unlisted":false,"editUrl":"https://github.com/AthennaIO/Docs/tree/main/docs/digging-deeper/mail.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Mail","sidebar_position":4,"description":"See how to send emails in Athenna."},"sidebar":"tutorialSidebar","previous":{"title":"Collections","permalink":"/docs/digging-deeper/collections"},"next":{"title":"Library Development","permalink":"/docs/digging-deeper/library-development"}}');var t=i(4848),s=i(8453),r=i(7049);const o={title:"Mail",sidebar_position:4,description:"See how to send emails in Athenna."},l="Mail",c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Available mail drivers",id:"available-mail-drivers",level:3},{value:"Sending mail",id:"sending-mail",level:2},{value:"Sending mail via a specific mailer",id:"sending-mail-via-a-specific-mailer",level:3},{value:"Sending Text and Markdown as content",id:"sending-text-and-markdown-as-content",level:3},{value:"Using view template as content",id:"using-view-template-as-content",level:3},{value:"Previewing mail templates in the browser",id:"previewing-mail-templates-in-the-browser",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"mail",children:"Mail"})}),"\n",(0,t.jsx)(n.p,{children:"See how to send emails in Athenna."}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["Sending email doesn't have to be complicated. Athenna provides a\nclean, simple email API powered by the popular ",(0,t.jsx)(n.a,{href:"https://nodemailer.com/",children:"nodemailer"}),"\npackage.  Right now Athenna provide drivers for sending email via\nSMTP only, but in the future we will add support for Mailgun,\nMailtrap, Amazon SES, and sendmail."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["First of all you need to install ",(0,t.jsx)(n.code,{children:"@athenna/mail"})," package\nand configure it. Artisan provides a very simple command to\ninstall and configure the mail library in your project.\nSimply run the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"node artisan install @athenna/mail\n"})}),"\n",(0,t.jsx)(n.p,{children:"The mail configurer will do the following operations in\nyour project:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create the ",(0,t.jsx)(n.code,{children:"mail.ts"})," configuration file."]}),"\n",(0,t.jsxs)(n.li,{children:["Add all mail providers in your ",(0,t.jsx)(n.code,{children:".athennarc.json"})," file."]}),"\n",(0,t.jsxs)(n.li,{children:["Add mail environment variables to ",(0,t.jsx)(n.code,{children:".env"}),", ",(0,t.jsx)(n.code,{children:".env.test"})," and ",(0,t.jsx)(n.code,{children:".env.example"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Athenna's email services may be configured via your application's\n",(0,t.jsx)(r.A,{father:"config",child:"mail.ts"}),'  configuration file. Each mailer configured\nwithin this file may have its own unique configuration and even\nits own unique "transport", allowing your application to use different\nemail services to send certain email messages.']}),"\n",(0,t.jsx)(n.h3,{id:"available-mail-drivers",children:"Available mail drivers"}),"\n",(0,t.jsxs)(n.p,{children:['Each mailer is powered by a "driver". The driver determines how\nthe mail will be transported. The following mail drivers are\navailable in every Athenna application. An entry for most of\nthese drivers is already present in your application\'s\n',(0,t.jsx)(r.A,{father:"config",child:"mail.ts"})," configuration file, so be sure to\nreview this file to become familiar with its contents:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Driver name"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Website"}),(0,t.jsx)(n.th,{style:{textAlign:"right"},children:"Built with"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"smtp"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.a,{href:"https://nodemailer.com/smtp/",children:"https://nodemailer.com/smtp/"})}),(0,t.jsx)(n.td,{style:{textAlign:"right"},children:(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/nodemailer",children:"nodemailer"})})]})})]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Athenna has another driver called ",(0,t.jsx)(n.code,{children:"fake"})," that is very helpful when running tests.\nThe ",(0,t.jsx)(n.code,{children:"fake"})," driver got the same signature of all other drivers, but it don't execute\nany operation when calling executors methods like ",(0,t.jsx)(n.code,{children:"send()"}),", which is perfect to use\nwithin the ",(0,t.jsx)(n.a,{href:"/docs/testing/mocking",children:(0,t.jsx)(n.code,{children:"Mock"})})," class. For more information\nabout the ",(0,t.jsx)(n.code,{children:"FakeDriver"}),", take a look at the\n",(0,t.jsx)(n.a,{href:"/docs/testing/mocking#mocking-mail",children:"mocking mail documentation section."})]})}),"\n",(0,t.jsx)(n.h2,{id:"sending-mail",children:"Sending mail"}),"\n",(0,t.jsx)(n.p,{children:"Let's see the simplest way to send a mail using Mail facade:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Mail } from '@athenna/mail'\n\nawait Mail.from('support@athenna.io')\n  .to('user@gmail.com')\n  .content('<h1>Mail content</h1>')\n  .send()\n"})}),"\n",(0,t.jsx)(n.p,{children:'You can add "to", "cc" and "bcc" recipientes by chaining\ntheir respective method together:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await Mail.from('support@athenna.io')\n  .to('user@gmail.com')\n  .cc('txsoura@athenna.io')\n  .bcc('support@athenna.io')\n  .content('<h1>Mail content</h1>')\n  .send()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"sending-mail-via-a-specific-mailer",children:"Sending mail via a specific mailer"}),"\n",(0,t.jsxs)(n.p,{children:["By default, Athenna will send email using the mailer configured\nas the ",(0,t.jsx)(n.code,{children:"default"})," mailer in your application's ",(0,t.jsx)(n.code,{children:"mail"})," configuration\nfile. However, you may use the ",(0,t.jsx)(n.code,{children:"mailer()"})," method to send a message\nusing a specific mailer configuration:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await Mail.mailer('my-mailer') \ud83d\udc48\n  .from('support@athenna.io')\n  .to('lenon@athenna.io')\n  .content('Mail content')\n  .send()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"sending-text-and-markdown-as-content",children:"Sending Text and Markdown as content"}),"\n",(0,t.jsxs)(n.p,{children:["To send text as the content of the mail, you can set the\n",(0,t.jsx)(n.code,{children:"type"})," property in second argument:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await Mail.mailer('my-mailer')\n  .from('support@athenna.io')\n  .to('lenon@athenna.io')\n  .content('Mail content', { type: 'text' }) \ud83d\udc48\n  .send()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And for markdowns you can use the ",(0,t.jsx)(n.code,{children:"markdown"})," type:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await Mail.mailer('my-mailer')\n  .from('support@athenna.io')\n  .to('lenon@athenna.io')\n  .content('# Mail content', { type: 'markdown' }) \ud83d\udc48\n  .send()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-view-template-as-content",children:"Using view template as content"}),"\n",(0,t.jsxs)(n.p,{children:["The mail component is integrated with the view component to be\nable to render and send a view as the body of the email. To do\nso you can use the ",(0,t.jsx)(n.code,{children:"view()"})," method of the Mail facade:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const userEmail = 'lenon@athenna.io'\n\nawait Mail.from('support@athenna.io')\n  .to(userEmail)\n  .cc('mailer1@athenna.io, mailer2@athenna.io')\n  .bcc('mailer3@athenna.io, mailer4@athenna.io')\n  .content('This is the mail body')\n  .view('mail/welcome', { email: userEmail }) \ud83d\udc48\n  .send()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Any data that you provide using the ",(0,t.jsx)(n.code,{children:"Mail"})," facade will be\navailable to you in your view:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",metastring:"title=\"Path.views('mail/welcome.edge')\"",children:"\x3c!-- Provided by you when using Mail facade methods --\x3e\n<h1>{{ to }}</h1>\n<h1>{{ cc }}</h1>\n<h1>{{ bcc }}</h1>\n<h1>{{ from }}</h1>\n<h1>{{ content }}</h1>\n\n\x3c!-- Provided by you second argument --\x3e\n<h1>{{ email }}</h1>\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["You can overwrite data set by ",(0,t.jsx)(n.code,{children:"Mail"})," facade by defining it\nin the second argument object:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const userEmail = 'lenon@athenna.io'\n\nawait Mail.from('support@athenna.io')\n  .to(userEmail)\n  .cc('mailer1@athenna.io, mailer2@athenna.io')\n  .bcc('mailer3@athenna.io, mailer4@athenna.io')\n  .content('This is the mail body')\n  .view('mail/welcome', { \n    email: userEmail, \n    to: 'txsoura@athenna.io' \ud83d\udc48\n  })\n  .send()\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"previewing-mail-templates-in-the-browser",children:"Previewing mail templates in the browser"}),"\n",(0,t.jsxs)(n.p,{children:["When designing a mailable's template, it is convenient to quickly\npreview the rendered mailable in your browser like a typical\nEdge template. For this reason, Athenna allows you to return any\nmailable directly from a route using the ",(0,t.jsx)(n.code,{children:"Route.view()"})," method,\nallowing you to quickly preview its  design without needing to\nsend it to an actual email address:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"title=\"Path.routes('http.ts')\"",children:"Route.view('/mailable', 'mail/welcome', { email: 'lenon@athenna.io' })\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},7049:(e,n,i)=>{i.d(n,{A:()=>s});i(6540);const a={hoverCardContainer:"hoverCardContainer_jqUQ",hoverCardLink:"hoverCardLink_oDZU",hoverCard:"hoverCard_qTDS"};var t=i(4848);function s(e){let n=e.father;switch(e.father){case"resources":n="src/resources";break;case"storage":n="src/storage";break;case"logs":n="src/storage/logs";break;case"views":n="src/resources/views";break;case"locales":n="src/resources/locales";break;case"static":n="src/resources/static";break;case"config":n="src/config";break;case"database":n="src/database";break;case"seeders":n="src/database/seeders";break;case"migrations":n="src/database/migrations";break;case"console":n="src/console";break;case"commands":n="src/console/commands";break;case"cron":n="src/cron";break;case"schedulers":n="src/cron/schedulers";break;case"models":n="src/models";break;case"services":n="src/services";break;case"repositories":n="src/repositories";break;case"http":n="src/http";break;case"controllers":n="src/http/controllers";break;case"middlewares":n="src/http/middlewares";break;case"interceptors":n="src/http/interceptors";break;case"terminators":n="src/http/terminators";break;case"stubs":n="tests/stubs";break;case"fixtures":n="tests/fixtures";break;case"providers":n="src/providers";break;case"facades":n="src/facades";break;case"routes":n="src/routes";break;case"validators":n="src/validators"}return(0,t.jsxs)("div",{className:a.hoverCardContainer,children:[(0,t.jsx)("a",{className:a.hoverCardLink,href:`/docs/the-basics/helpers#path${e.father}`,children:(0,t.jsxs)("code",{children:["Path.",e.father,"(",e.child?`'${e.child}'`:"",")"]})}),(0,t.jsx)("div",{className:a.hoverCard,children:(0,t.jsxs)("p",{style:{margin:0},children:["./",n,e.child?`/${e.child}`:""]})})]})}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var a=i(6540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);