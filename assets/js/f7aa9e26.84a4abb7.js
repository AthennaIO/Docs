"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[6606],{9621:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rest-api-application/web-application","title":"Web Application","description":"See how to create web applications using Vite for asset bundling.","source":"@site/docs/rest-api-application/web-application.mdx","sourceDirName":"rest-api-application","slug":"/rest-api-application/web-application","permalink":"/docs/rest-api-application/web-application","draft":false,"unlisted":false,"editUrl":"https://github.com/AthennaIO/Docs/tree/main/docs/rest-api-application/web-application.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"title":"Web Application","sidebar_position":13,"description":"See how to create web applications using Vite for asset bundling."},"sidebar":"tutorialSidebar","previous":{"title":"Static Files","permalink":"/docs/rest-api-application/static-files"},"next":{"title":"Commands","permalink":"/docs/cli-application/commands"}}');var s=t(4848),r=t(8453),o=t(7049);const a={title:"Web Application",sidebar_position:13,description:"See how to create web applications using Vite for asset bundling."},l="Web Application",c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Installing",id:"installing",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Vite configuration file",id:"vite-configuration-file",level:3},{value:"entrypoints",id:"entrypoints",level:4},{value:"assetsUrl",id:"assetsurl",level:4},{value:"buildDirectory",id:"builddirectory",level:4},{value:"reload",id:"reload",level:4},{value:"Vite backend configuration",id:"vite-backend-configuration",level:3},{value:"dev",id:"dev",level:4},{value:"assetsUrl",id:"assetsurl-1",level:4},{value:"buildDirectory",id:"builddirectory-1",level:4},{value:"ssrEntrypoint",id:"ssrentrypoint",level:4},{value:"ssrBuildDirectory",id:"ssrbuilddirectory",level:4},{value:"scriptAttributes",id:"scriptattributes",level:4},{value:"styleAttributes",id:"styleattributes",level:4},{value:"Starting the dev server",id:"starting-the-dev-server",level:2},{value:"Including entrypoints in Edge templates",id:"including-entrypoints-in-edge-templates",level:2},{value:"Referencing assets inside Edge templates",id:"referencing-assets-inside-edge-templates",level:2},{value:"Processing additional assets with Vite",id:"processing-additional-assets-with-vite",level:2},{value:"Enabling HMR with React",id:"enabling-hmr-with-react",level:2},{value:"Deploying assets to a CDN",id:"deploying-assets-to-a-cdn",level:2},{value:"Server Side Rendering (SSR)",id:"server-side-rendering-ssr",level:2},{value:"Configurations",id:"configurations",level:3},{value:"Hydrate part",id:"hydrate-part",level:3},{value:"Rendering React components",id:"rendering-react-components",level:3},{value:"Importing other components",id:"importing-other-components",level:4},{value:"Manifest file",id:"manifest-file",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"web-application",children:"Web Application"})}),"\n",(0,s.jsx)(n.p,{children:"See how to create web applications using Vite for asset bundling."}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://vite.dev/",children:"Vite"})," is a modern frontend build tool that provides\nan extremely fast development environment and bundles your code\nfor production. When building applications with Athenna, you will\ntypically use Vite to bundle your application's CSS and JavaScript\nfiles into production ready assets."]}),"\n",(0,s.jsxs)(n.p,{children:["Athenna integrates seamlessly with Vite by providing an official\nplugin and ",(0,s.jsx)(n.a,{href:"https://edgejs.dev/docs/introduction",children:"Edge.js"})," directive\nto load your assets for development and production. This tool facilitates\nthe development of full-stack web applications using Athenna as the backend\nframework."]}),"\n",(0,s.jsx)(n.h2,{id:"installing",children:"Installing"}),"\n",(0,s.jsx)(n.p,{children:"We recommend to start a new Athenna project to setup all the\nconfigurations needed to get Athenna + Vite working together:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"athenna new my-web-app\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Don't forget to select ",(0,s.jsx)(n.code,{children:"WEB EDGE"}),", ",(0,s.jsx)(n.code,{children:"WEB REACT"})," or ",(0,s.jsx)(n.code,{children:"WEB REACT SSR"})," when\nprompted about the application type."]})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The web application adds the ",(0,s.jsx)(n.code,{children:"vite.config.ts"})," file that is used to\nconfigure the Vite bundler, and a new plugin to\n",(0,s.jsx)(o.A,{father:"config",child:"http.ts"})," named ",(0,s.jsx)(n.code,{children:"vite"})," that is used\nby Athenna on the backend."]}),"\n",(0,s.jsx)(n.h3,{id:"vite-configuration-file",children:"Vite configuration file"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"vite.config.ts"})," file is a regular configuration\nfile used by Vite. Per your project requirements, you can install and register\nadditional Vite plugins inside this file. By default, Vite file will use the\nAthenna plugin, which accepts the following options:"]}),"\n",(0,s.jsx)(n.h4,{id:"entrypoints",children:"entrypoints"}),"\n",(0,s.jsx)(n.p,{children:"The entrypoints refers to the entry point file of your frontend codebase.\nUsually, it will be a JavaScript or a TypeScript file with additional\nimports. Each entry point will result in a separate output bundle."}),"\n",(0,s.jsx)(n.p,{children:"Also, if needed, you can define multiple entrypoints. For example, an\nentry point for your user-facing app and another for the admin panel."}),"\n",(0,s.jsx)(n.h4,{id:"assetsurl",children:"assetsUrl"}),"\n",(0,s.jsx)(n.p,{children:"It contains the URL to prefix when generating links for assets in\nproduction. If you upload the Vite output to a CDN, then the value\nof this property should be the CDN server URL."}),"\n",(0,s.jsxs)(n.p,{children:["Ensure you update the backend configuration to use the same ",(0,s.jsx)(n.code,{children:"assetsUrl"}),"\nvalue."]}),"\n",(0,s.jsx)(n.h4,{id:"builddirectory",children:"buildDirectory"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"buildDirectory"})," option defines a relative path to the output\ndirectory. The option value is supplied to Vite as the ",(0,s.jsx)(n.code,{children:"build.outDir"})," option."]}),"\n",(0,s.jsxs)(n.p,{children:["If you decide to change the default value, make sure also to update the\n",(0,s.jsx)(n.code,{children:"buildDirectory"})," path in the ",(0,s.jsx)(n.code,{children:"vite"})," object inside ",(0,s.jsx)(o.A,{father:"config",child:"http.ts"}),"\nconfiguration file."]}),"\n",(0,s.jsxs)(n.p,{children:["Default: ",(0,s.jsx)(n.code,{children:"Path.public('assets')"})]}),"\n",(0,s.jsx)(n.h4,{id:"reload",children:"reload"}),"\n",(0,s.jsxs)(n.p,{children:["It contains an array of glob patterns to watch and reload the browser\non file change. By default, we watch for Edge templates in ",(0,s.jsx)(n.code,{children:"WEB EDGE"}),"\napplication and ",(0,s.jsx)(n.code,{children:".tsx"})," files on ",(0,s.jsx)(n.code,{children:"WEB REACT"}),". However, you can\nconfigure additional patterns as well."]}),"\n",(0,s.jsx)(n.h3,{id:"vite-backend-configuration",children:"Vite backend configuration"}),"\n",(0,s.jsx)(n.h4,{id:"dev",children:"dev"}),"\n",(0,s.jsxs)(n.p,{children:["Tell Athenna if should create vite development server or not.\nBy default, this is controlled by the ",(0,s.jsx)(n.code,{children:"Config.get('app.environment')"}),"\nconfiguration which points to the ",(0,s.jsx)(n.code,{children:"APP_ENV"})," environment variable\ndefined in your ",(0,s.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,s.jsx)(n.h4,{id:"assetsurl-1",children:"assetsUrl"}),"\n",(0,s.jsx)(n.p,{children:"The URL to prefix when generating links for assets in production.\nIf you upload the Vite output to a CDN, then the value of this\nproperty should be the CDN server URL."}),"\n",(0,s.jsx)(n.h4,{id:"builddirectory-1",children:"buildDirectory"}),"\n",(0,s.jsxs)(n.p,{children:["It contains the path to the Vite's build output directory.\nYou must also update this backend config if you change the\ndefault value inside the ",(0,s.jsx)(n.code,{children:"vite.config.ts"})," file."]}),"\n",(0,s.jsx)(n.h4,{id:"ssrentrypoint",children:"ssrEntrypoint"}),"\n",(0,s.jsx)(n.p,{children:"With this option set, SSR will be turn on into your application.\nThis defines where Vite needs to look when compiling your server\nentrypoint files."}),"\n",(0,s.jsxs)(n.p,{children:["Default: ",(0,s.jsx)(n.code,{children:"src/resources/app/app.tsx"})]}),"\n",(0,s.jsx)(n.h4,{id:"ssrbuilddirectory",children:"ssrBuildDirectory"}),"\n",(0,s.jsx)(n.p,{children:"It contains the path to the Vite's SSR build output directory, which\nneeds to export the components so the server could import and serve it."}),"\n",(0,s.jsxs)(n.p,{children:["Default: ",(0,s.jsx)(n.code,{children:"Path.public('assets/server')"})]}),"\n",(0,s.jsx)(n.h4,{id:"scriptattributes",children:"scriptAttributes"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"scriptAttributes"})," property to set attributes\non the script tags generated using the ",(0,s.jsx)(n.code,{children:"@vite"})," tag. The attributes\nare a collection of key-value pairs."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",children:"export default {\n  vite: {\n    scriptAttributes: {\n      defer: true,\n      async: true\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"styleattributes",children:"styleAttributes"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"styleAttributes"})," property to set attributes on\nthe link tags generated using the ",(0,s.jsx)(n.code,{children:"@vite"})," tag. The attributes\nare a collection of key-value pairs."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",children:"export default {\n  vite: {\n    styleAttributes: {\n      'data-turbo-track': 'reload'\n    }\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can also apply the attributes conditionally by assigning a\nfunction to the ",(0,s.jsx)(n.code,{children:"styleAttributes"})," option."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",children:"export default {\n  vite: {\n    styleAttributes: ({ src, url }) => {\n      if (src === 'src/resources/css/admin.css') {\n        return {\n          'data-turbo-track': 'reload'\n        }\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"starting-the-dev-server",children:"Starting the dev server"}),"\n",(0,s.jsxs)(n.p,{children:["You can start your application as usual, and Athenna will automatically\nproxy the needed requests to Vite if the ",(0,s.jsx)(n.code,{children:"dev"})," option is ",(0,s.jsx)(n.code,{children:"true"})," in your\nbackend vite configuration:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"node artisan serve\n"})}),"\n",(0,s.jsx)(n.h2,{id:"including-entrypoints-in-edge-templates",children:"Including entrypoints in Edge templates"}),"\n",(0,s.jsxs)(n.p,{children:["You can render the script and the style tags for the entrypoints defined\ninside the ",(0,s.jsx)(n.code,{children:"vite.config.ts"})," file using the ",(0,s.jsx)(n.code,{children:"@vite"})," Edge tag. The tag\naccepts an array of entrypoints and returns the script and the link tags."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    @vite([\'src/resources/js/app.ts\'])\n</head>\n<body>\n    \n</body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"We recommend importing CSS files inside your TypeScript files and not\nregistering them separately as an entry point. For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 css\n        \u2514\u2500\u2500 app.css\n    \u2514\u2500\u2500 js\n        \u2514\u2500\u2500 app.ts\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Path.resources("js/app.ts")"',children:"import '../css/app.css'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"referencing-assets-inside-edge-templates",children:"Referencing assets inside Edge templates"}),"\n",(0,s.jsx)(n.p,{children:"Vite creates a dependency graph of files imported by the entrypoints\nand auto-updates their paths per the bundled output. However, Vite\nis unaware of Edge templates and cannot detect their referenced assets."}),"\n",(0,s.jsx)(n.p,{children:"Therefore, we provide an Edge helper you can use to create URLs for\nfiles processed by Vite. In the following example:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"asset"})," helper will return a URL pointing to the Vite dev server\nduring development."]}),"\n",(0,s.jsx)(n.li,{children:"Return a URL pointing to the output filename during production."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<link rel="stylesheet" href="{{ asset(\'src/resources/css/app.css\') }}">\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",metastring:'title="Output in development"',children:'<link rel="stylesheet" href="http://localhost:5173/src/resources/css/app.css">\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",metastring:'title="Output in production"',children:'<link rel="stylesheet" href="/public/assets/app-3bc29777.css">\n'})}),"\n",(0,s.jsx)(n.h2,{id:"processing-additional-assets-with-vite",children:"Processing additional assets with Vite"}),"\n",(0,s.jsx)(n.p,{children:"Vite ignores static assets not imported by the frontend code. It could\nbe static images, fonts, or SVG icons only referenced inside the Edge templates."}),"\n",(0,s.jsxs)(n.p,{children:["Therefore, you will have to notify Vite about the existence of these\nassets using its ",(0,s.jsx)(n.a,{href:"https://vite.dev/guide/features.html#glob-import",children:"Glob imports"})," API."]}),"\n",(0,s.jsxs)(n.p,{children:["In the following example, we ask Vite to process all the files within the\n",(0,s.jsx)(n.code,{children:"src/resources/img"})," directory. This code should be written within an entry point file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import.meta.glob(['../img/**'])\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now you can reference the images within your Edge templates as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<img src=\"{{ asset('src/resources/img/hero.jpg') }}\" />\n"})}),"\n",(0,s.jsx)(n.h2,{id:"enabling-hmr-with-react",children:"Enabling HMR with React"}),"\n",(0,s.jsxs)(n.p,{children:["To enable ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/react-refresh",children:"react-refresh"})," during\ndevelopment, you must use the ",(0,s.jsx)(n.code,{children:"@viteReactRefresh"})," Edge tag. It should be\nwritten before you include the entrypoints using the ",(0,s.jsx)(n.code,{children:"@vite"})," tag."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    @viteReactRefresh()\n    @vite([\'src/resources/js/app.ts\'])\n</head>\n<body>\n    \n</body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Once done, you can configure the React plugin as usual in a regular Vite project."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { defineConfig } from 'vite'\n\nimport react from '@vitejs/plugin-react'\nimport athenna from '@athenna/vite/plugins/client'\n\nexport default defineConfig({\n  plugins: [\n    athenna({\n      entrypoints: [\"src/resources/js/app.ts\"],\n    }),\n    react() \ud83d\udc48\n  ]\n})\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["We highly recommend you to bootstrap a new project using Athenna CLI\nto select ",(0,s.jsx)(n.code,{children:"WEB REACT"})," application type. Will be easier if you start\nthis new project with everything configured then to try to do it manually,\njust run the following and select ",(0,s.jsx)(n.code,{children:"WEB REACT"})," when prompted:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"athenna new my-react-app\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"deploying-assets-to-a-cdn",children:"Deploying assets to a CDN"}),"\n",(0,s.jsx)(n.p,{children:"After you create the production build using Vite, you can upload\nthe bundled output to a CDN server to serve the files."}),"\n",(0,s.jsxs)(n.p,{children:["However, before you do that, you must register the URL of your\nCDN server with both Vite and Athenna so that the output URLs\ninside the ",(0,s.jsx)(n.code,{children:"manifest.json"})," file or lazy loaded chunks should\npoint to your CDN server."]}),"\n",(0,s.jsxs)(n.p,{children:["You must define the ",(0,s.jsx)(n.code,{children:"assetsUrl"})," inside the ",(0,s.jsx)(n.code,{children:"vite.config.ts"}),"\nfile and in ",(0,s.jsx)(n.code,{children:"vite"})," object of ",(0,s.jsx)(o.A,{father:"config",child:"http.ts"}),"\nfile."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="vite.config.ts"',children:"import { defineConfig } from 'vite'\nimport athenna from '@athenna/vite/plugins/client'\n\nexport default defineConfig({\n  plugins: [\n    athenna({\n      entrypoints: ['src/resources/js/app.ts'],\n      reloads: ['src/resources/views/**/*.edge'],\n      assetsUrl: 'https://cdn.example.com/',\n    }),\n  ]\n})\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Path.config("http.ts")"',children:"export default {\n  vite: {\n    buildDirectory: 'public/assets',\n    assetsUrl: 'https://cdn.example.com/'\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"server-side-rendering-ssr",children:"Server Side Rendering (SSR)"}),"\n",(0,s.jsx)(n.p,{children:"Server Side Rendering is a technique in web development where the webpage's\ncontent is rendered on the server instead of the client's browser. The\nprimary advantage of SSR lies in its ability to significantly enhance user\nexperience by facilitating faster page transitions and quick loading times."}),"\n",(0,s.jsxs)(n.p,{children:["If you use ",(0,s.jsx)(n.code,{children:"WEB EDGE"})," application type you will be already using\nSSR by default, but you can't use nice frameworks like React without some heavy\nconfiguration."]}),"\n",(0,s.jsxs)(n.p,{children:["That's why Athenna exposes the ",(0,s.jsx)(n.code,{children:"WEB REACT SSR"})," application type that will come\nwith everything configured for you to start building your application. The key\ndifference from ",(0,s.jsx)(n.code,{children:"WEB REACT"})," and ",(0,s.jsx)(n.code,{children:"WEB REACT SSR"})," is that instead of letting the\nclient create and load React root, we do that on the server and just hydrate the\nroot in the client, which is way less expensive for the client machine."]}),"\n",(0,s.jsx)(n.h3,{id:"configurations",children:"Configurations"}),"\n",(0,s.jsxs)(n.p,{children:["The configurations in your ",(0,s.jsx)(n.code,{children:"vite"})," object of ",(0,s.jsx)(o.A,{father:"config",child:"http.ts"}),"\nthat make your application understand you want to use some framework\nwith SSR are the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export default {\n  vite: {\n    // ...\n\n    ssrEntrypoint: 'src/resources/app/app.tsx',\n    ssrBuildDirectory: Path.public('assets/server')\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ssrEntrypoint"})," will map your server entrypoint for serving your\ncomponent."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ssrBuildDirectory"})," will map where the server entrypoint compiled\ncode should be stored. This property also defines where the manifest\nfile of your server code will stored, in this case our manifest file\nwould be stored inside ",(0,s.jsx)(o.A,{father:"public",child:"assets/server/.vite/manifest.json"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Vite never will compile your backend code, this will still be done by\n",(0,s.jsx)(n.code,{children:"tsc"}),". The ",(0,s.jsx)(n.code,{children:"ssrEntrypoint"})," file is the entrypoint of your backend\ncode to the client code, Vite compiles your entrypoint in runtime\n(in development) so we avoid adding features to ",(0,s.jsx)(n.code,{children:"tsc"})," to load files\nlike CSS, JSX, SASS and etc."]})}),"\n",(0,s.jsx)(n.h3,{id:"hydrate-part",children:"Hydrate part"}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(o.A,{father:"resources",child:"app/root.tsx"})," we are\nhydrating the root element using React API:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { App } from '#app/app'\nimport { hydrateRoot } from 'react-dom/client'\n\nhydrateRoot(document.getElementById('root'), <App />)\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["For now Athenna has integration only with React for SSR. If you want\nsupport for other frameworks, please ",(0,s.jsx)(n.a,{href:"https://github.com/orgs/AthennaIO/discussions",children:"open a discussion"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"rendering-react-components",children:"Rendering React components"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"@athenna/vite"})," package exposes the ",(0,s.jsx)(n.code,{children:"React"})," helper which you\ncan use to load and render components inside your backend routes.\nThe following example is the default example that comes with the\n",(0,s.jsx)(n.code,{children:"WEB REACT SSR"})," application type:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { React } from '@athenna/vite'\nimport { Controller, type Context } from '@athenna/http'\n\n@Controller()\nexport class AppController {\n  public async index({ request, response }: Context) {\n    const { createApp } = await React.loadEntrypoint()\n\n    const element = await React.renderComponent(createApp(request.baseUrl))\n\n    return response.view('index', { element })\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["First we use the ",(0,s.jsx)(n.code,{children:"loadEntrypoint()"})," method that internally will\nuse Vite to compile (or search in manifest file) the content of your\n",(0,s.jsx)(n.code,{children:"ssrEntrypoint"})," file. After that the module is imported and you can\nuse all the resources from the file."]}),"\n",(0,s.jsxs)(n.li,{children:["After importing the ",(0,s.jsx)(n.code,{children:"createApp()"})," function from our entrypoint,\nwe call the function to create our ",(0,s.jsx)(n.code,{children:"<App/>"})," component and send as\nparameter to the ",(0,s.jsx)(n.code,{children:"renderComponent()"})," method which will use ",(0,s.jsx)(n.code,{children:"react-dom/server"}),"\nto transform the component to an HTML string."]}),"\n",(0,s.jsxs)(n.li,{children:["Now is simple, we just need to send our element to ",(0,s.jsx)(n.code,{children:"index.edge"}),"\nview which will render all the elements."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"importing-other-components",children:"Importing other components"}),"\n",(0,s.jsxs)(n.p,{children:["In case you want to import other components beside the entrypoint\nyou can use the ",(0,s.jsx)(n.code,{children:"loadComponent()"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const { createApp } = await React.loadComponent('src/resources/app/app.tsx')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"manifest-file",children:"Manifest file"}),"\n",(0,s.jsx)(n.p,{children:"Vite generates the manifest file alongside the production build\nof your assets."}),"\n",(0,s.jsxs)(n.p,{children:["The manifest file contains the URLs to the assets processed by Vite,\nand Athenna uses this file to create URLs for assets referenced\ninside the Edge templates either using the ",(0,s.jsx)(n.code,{children:"asset"})," helper or the ",(0,s.jsx)(n.code,{children:"@vite"}),"\ntag."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7049:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);const i={hoverCardContainer:"hoverCardContainer_jqUQ",hoverCardLink:"hoverCardLink_oDZU",hoverCard:"hoverCard_qTDS"};var s=t(4848);function r(e){let n=e.father;switch(e.father){case"resources":n="src/resources";break;case"storage":n="src/storage";break;case"logs":n="src/storage/logs";break;case"views":n="src/resources/views";break;case"locales":n="src/resources/locales";break;case"static":n="src/resources/static";break;case"config":n="src/config";break;case"database":n="src/database";break;case"seeders":n="src/database/seeders";break;case"migrations":n="src/database/migrations";break;case"console":n="src/console";break;case"commands":n="src/console/commands";break;case"cron":n="src/cron";break;case"schedulers":n="src/cron/schedulers";break;case"models":n="src/models";break;case"services":n="src/services";break;case"repositories":n="src/repositories";break;case"http":n="src/http";break;case"controllers":n="src/http/controllers";break;case"middlewares":n="src/http/middlewares";break;case"interceptors":n="src/http/interceptors";break;case"terminators":n="src/http/terminators";break;case"stubs":n="tests/stubs";break;case"fixtures":n="tests/fixtures";break;case"providers":n="src/providers";break;case"facades":n="src/facades";break;case"routes":n="src/routes";break;case"validators":n="src/validators"}return(0,s.jsxs)("div",{className:i.hoverCardContainer,children:[(0,s.jsx)("a",{className:i.hoverCardLink,href:`/docs/the-basics/helpers#path${e.father}`,children:(0,s.jsxs)("code",{children:["Path.",e.father,"(",e.child?`'${e.child}'`:"",")"]})}),(0,s.jsx)("div",{className:i.hoverCard,children:(0,s.jsxs)("p",{style:{margin:0},children:["./",n,e.child?`/${e.child}`:""]})})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);