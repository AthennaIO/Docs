"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[2419],{9420:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=t(5893),o=t(1151);const s={title:"Helpers",sidebar_position:3,description:"Understand how to use all the Athenna Helpers from @athenna/common and other packages."},i="Helpers",l={id:"the-basics/helpers",title:"Helpers",description:"Understand how to use all the Athenna Helpers from @athenna/common and other packages.",source:"@site/docs/the-basics/helpers.mdx",sourceDirName:"the-basics",slug:"/the-basics/helpers",permalink:"/docs/the-basics/helpers",draft:!1,unlisted:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/the-basics/helpers.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Helpers",sidebar_position:3,description:"Understand how to use all the Athenna Helpers from @athenna/common and other packages."},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/docs/the-basics/views"},next:{title:"Compilation",permalink:"/docs/the-basics/compilation"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Available helpers",id:"available-helpers",level:2},{value:"Clean",id:"clean",level:3},{value:"<code>Clean::cleanArray()</code>",id:"cleancleanarray",level:4},{value:"<code>Clean::cleanObject()</code>",id:"cleancleanobject",level:4},{value:"Color",id:"color",level:3},{value:"<code>Color::apply()</code>",id:"colorapply",level:4},{value:"<code>Color::remove()</code>",id:"colorremove",level:4},{value:"<code>Color::httpMethod()</code>",id:"colorhttpmethod",level:4},{value:"Exception",id:"exception",level:3},{value:"<code>Exception.toJSON()</code>",id:"exceptiontojson",level:4},{value:"<code>Exception.prettify()</code>",id:"exceptionprettify",level:4},{value:"Exec",id:"exec",level:3},{value:"<code>Exec::sleep()</code>",id:"execsleep",level:4},{value:"<code>Exec::concurrently()</code>",id:"execconcurrently",level:4},{value:"<code>Exec::command()</code>",id:"execcommand",level:4},{value:"<code>Exec::shell()</code>",id:"execshell",level:4},{value:"<code>Exec::node()</code>",id:"execnode",level:4},{value:"<code>Exec::artisan()</code>",id:"execartisan",level:4},{value:"<code>Exec::download()</code>",id:"execdownload",level:4},{value:"<code>Exec::pagination()</code>",id:"execpagination",level:4},{value:"FakeApi",id:"fakeapi",level:3},{value:"<code>FakeApi::start()</code>",id:"fakeapistart",level:4},{value:"<code>FakeApi::stop()</code>",id:"fakeapistop",level:4},{value:"<code>FakeApi::isRunning()</code>",id:"fakeapiisrunning",level:4},{value:"<code>FakeApi::listRoutes()</code>",id:"fakeapilistroutes",level:4},{value:"<code>FakeApi::registerFile()</code>",id:"fakeapiregisterfile",level:4},{value:"<code>FakeApi::registerFolder()</code>",id:"fakeapiregisterfolder",level:4},{value:"<code>FakeApi::build()</code>",id:"fakeapibuild",level:4},{value:"File",id:"file",level:3},{value:"<code>File.load()</code> &amp; <code>File.loadSync()</code>",id:"fileload--fileloadsync",level:4},{value:"<code>File.copy()</code> &amp; <code>File.copySync()</code>",id:"filecopy--filecopysync",level:4},{value:"<code>File.move()</code> &amp; <code>File.moveSync()</code>",id:"filemove--filemovesync",level:4},{value:"<code>File.remove()</code> &amp; <code>File.removeSync()</code>",id:"fileremove--fileremovesync",level:4},{value:"<code>File.setContent()</code> &amp; <code>File.setContentSync()</code>",id:"filesetcontent--filesetcontentsync",level:4},{value:"<code>File.getContent()</code> &amp; <code>File.getContentSync()</code>",id:"filegetcontent--filegetcontentsync",level:4},{value:"<code>File.getContentAsString()</code> &amp; <code>File.getContentAsStringSync()</code>",id:"filegetcontentasstring--filegetcontentasstringsync",level:4},{value:"<code>File.getContentAsJson()</code> &amp; <code>File.getContentAsJsonSync()</code>",id:"filegetcontentasjson--filegetcontentasjsonsync",level:4},{value:"<code>File.getContentAsYaml()</code> &amp; <code>File.getContentAsYamlSync()</code>",id:"filegetcontentasyaml--filegetcontentasyamlsync",level:4},{value:"<code>File.getContentAsBuilder()</code> &amp; <code>File.getContentAsBuilderSync()</code>",id:"filegetcontentasbuilder--filegetcontentasbuildersync",level:4},{value:"<code>File.append()</code> &amp; <code>File.appendSync()</code>",id:"fileappend--fileappendsync",level:4},{value:"<code>File.prepend()</code> &amp; <code>File.prependSync()</code>",id:"fileprepend--fileprependsync",level:4},{value:"<code>File.createReadStream()</code>",id:"filecreatereadstream",level:4},{value:"<code>File.createWriteStream()</code>",id:"filecreatewritestream",level:4},{value:"<code>File.toJSON()</code>",id:"filetojson",level:4},{value:"<code>File.import()</code>",id:"fileimport",level:4},{value:"<code>File.safeImport()</code>",id:"filesafeimport",level:4},{value:"<code>File::safeRemove()</code>",id:"filesaferemove",level:4},{value:"<code>File::exists()</code> &amp; <code>File::existsSync()</code>",id:"fileexists--fileexistssync",level:4},{value:"<code>File::isFile()</code> &amp; <code>File::isFileSync()</code>",id:"fileisfile--fileisfilesync",level:4},{value:"<code>File::createFileOfSize()</code>",id:"filecreatefileofsize",level:4},{value:"Folder",id:"folder",level:3},{value:"<code>Folder.load()</code> &amp; <code>Folder.loadSync()</code>",id:"folderload--folderloadsync",level:4},{value:"<code>Folder.copy()</code> &amp; <code>Folder.copySync()</code>",id:"foldercopy--foldercopysync",level:4},{value:"<code>Folder.move()</code> &amp; <code>Folder.moveSync()</code>",id:"foldermove--foldermovesync",level:4},{value:"<code>Folder.remove()</code> &amp; <code>Folder.removeSync()</code>",id:"folderremove--folderremovesync",level:4},{value:"<code>Folder.toJSON()</code>",id:"foldertojson",level:4},{value:"<code>Folder.getFilesByPattern()</code>",id:"foldergetfilesbypattern",level:4},{value:"<code>Folder.getFoldersByPattern()</code>",id:"foldergetfoldersbypattern",level:4},{value:"<code>Folder::safeRemove()</code>",id:"foldersaferemove",level:4},{value:"<code>Folder::exists()</code> &amp; <code>Folder::existsSync()</code>",id:"folderexists--folderexistssync",level:4},{value:"<code>Folder::isFolder()</code> &amp; <code>Folder::isFolderSync()</code>",id:"folderisfolder--folderisfoldersync",level:4},{value:"<code>Folder::size()</code> &amp; <code>Folder::sizeSync()</code>",id:"foldersize--foldersizesync",level:4},{value:"HttpClient",id:"httpclient",level:3},{value:"<code>HttpClient::get()</code>",id:"httpclientget",level:4},{value:"<code>HttpClient::post()</code>",id:"httpclientpost",level:4},{value:"<code>HttpClient::put()</code>",id:"httpclientput",level:4},{value:"<code>HttpClient::patch()</code>",id:"httpclientpatch",level:4},{value:"<code>HttpClient::delete()</code>",id:"httpclientdelete",level:4},{value:"<code>HttpClient::head()</code>",id:"httpclienthead",level:4},{value:"<code>HttpClient::builder()</code> &amp; <code>HttpClient::setBuilder()</code>",id:"httpclientbuilder--httpclientsetbuilder",level:4},{value:"HttpClientBuilder",id:"httpclientbuilder",level:3},{value:"<code>HttpClientBuilder.setInitHook()</code>",id:"httpclientbuildersetinithook",level:4},{value:"<code>HttpClientBuilder.setBeforeRequestHook()</code>",id:"httpclientbuildersetbeforerequesthook",level:4},{value:"<code>HttpClientBuilder.setBeforeRedirectHook()</code>",id:"httpclientbuildersetbeforeredirecthook",level:4},{value:"<code>HttpClientBuilder.setBeforeErrorHook()</code>",id:"httpclientbuildersetbeforeerrorhook",level:4},{value:"<code>HttpClientBuilder.setBeforeRetryHook()</code>",id:"httpclientbuildersetbeforeretryhook",level:4},{value:"<code>HttpClientBuilder.setAfterResponseHook()</code>",id:"httpclientbuildersetafterresponsehook",level:4},{value:"<code>HttpClientBuilder.agent()</code>",id:"httpclientbuilderagent",level:4},{value:"<code>HttpClientBuilder.http2()</code>",id:"httpclientbuilderhttp2",level:4},{value:"<code>HttpClientBuilder.h2session()</code>",id:"httpclientbuilderh2session",level:4},{value:"<code>HttpClientBuilder.decompress()</code>",id:"httpclientbuilderdecompress",level:4},{value:"<code>HttpClientBuilder.timeout()</code>",id:"httpclientbuildertimeout",level:4},{value:"<code>HttpClientBuilder.body()</code>",id:"httpclientbuilderbody",level:4},{value:"<code>HttpClientBuilder.form()</code>",id:"httpclientbuilderform",level:4},{value:"<code>HttpClientBuilder.header()</code>",id:"httpclientbuilderheader",level:4},{value:"<code>HttpClientBuilder.safeHeader()</code>",id:"httpclientbuildersafeheader",level:4},{value:"<code>HttpClientBuilder.removeHeader()</code>",id:"httpclientbuilderremoveheader",level:4},{value:"<code>HttpClientBuilder.prefixUrl()</code>",id:"httpclientbuilderprefixurl",level:4},{value:"<code>HttpClientBuilder.method()</code>",id:"httpclientbuildermethod",level:4},{value:"<code>HttpClientBuilder.url()</code>",id:"httpclientbuilderurl",level:4},{value:"<code>HttpClientBuilder.cookieJar()</code>",id:"httpclientbuildercookiejar",level:4},{value:"<code>HttpClientBuilder.signal()</code>",id:"httpclientbuildersignal",level:4},{value:"<code>HttpClientBuilder.ignoreInvalidCookies()</code>",id:"httpclientbuilderignoreinvalidcookies",level:4},{value:"<code>HttpClientBuilder.searchParams()</code>",id:"httpclientbuildersearchparams",level:4},{value:"<code>HttpClientBuilder.queryParams()</code>",id:"httpclientbuilderqueryparams",level:4},{value:"<code>HttpClientBuilder.dnsLookup()</code>",id:"httpclientbuilderdnslookup",level:4},{value:"<code>HttpClientBuilder.dnsCache()</code>",id:"httpclientbuilderdnscache",level:4},{value:"<code>HttpClientBuilder.context()</code>",id:"httpclientbuildercontext",level:4},{value:"<code>HttpClientBuilder.hooks()</code>",id:"httpclientbuilderhooks",level:4},{value:"<code>HttpClientBuilder.followRedirect()</code>",id:"httpclientbuilderfollowredirect",level:4},{value:"<code>HttpClientBuilder.followRedirects()</code>",id:"httpclientbuilderfollowredirects",level:4},{value:"<code>HttpClientBuilder.maxRedirects()</code>",id:"httpclientbuildermaxredirects",level:4},{value:"<code>HttpClientBuilder.cacheOptions()</code>",id:"httpclientbuildercacheoptions",level:4},{value:"<code>HttpClientBuilder.cache()</code>",id:"httpclientbuildercache",level:4},{value:"<code>HttpClientBuilder.throwHttpErrors()</code>",id:"httpclientbuilderthrowhttperrors",level:4},{value:"<code>HttpClientBuilder.username()</code>",id:"httpclientbuilderusername",level:4},{value:"<code>HttpClientBuilder.password()</code>",id:"httpclientbuilderpassword",level:4},{value:"<code>HttpClientBuilder.allowGetBody()</code>",id:"httpclientbuilderallowgetbody",level:4},{value:"<code>HttpClientBuilder.methodRewriting()</code>",id:"httpclientbuildermethodrewriting",level:4},{value:"<code>HttpClientBuilder.dnsLookupIpVersion()</code>",id:"httpclientbuilderdnslookupipversion",level:4},{value:"<code>HttpClientBuilder.parseJson()</code>",id:"httpclientbuilderparsejson",level:4},{value:"<code>HttpClientBuilder.stringifyJson()</code>",id:"httpclientbuilderstringifyjson",level:4},{value:"<code>HttpClientBuilder.retry()</code>",id:"httpclientbuilderretry",level:4},{value:"<code>HttpClientBuilder.retryStrategy()</code>",id:"httpclientbuilderretrystrategy",level:4},{value:"<code>HttpClientBuilder.localAddress()</code>",id:"httpclientbuilderlocaladdress",level:4},{value:"<code>HttpClientBuilder.createConnection()</code>",id:"httpclientbuildercreateconnection",level:4},{value:"<code>HttpClientBuilder.https()</code>",id:"httpclientbuilderhttps",level:4},{value:"<code>HttpClientBuilder.encoding()</code>",id:"httpclientbuilderencoding",level:4},{value:"<code>HttpClientBuilder.resolveBodyOnly()</code>",id:"httpclientbuilderresolvebodyonly",level:4},{value:"<code>HttpClientBuilder.responseType()</code>",id:"httpclientbuilderresponsetype",level:4},{value:"<code>HttpClientBuilder.pagination()</code>",id:"httpclientbuilderpagination",level:4},{value:"<code>HttpClientBuilder.setHost()</code>",id:"httpclientbuildersethost",level:4},{value:"<code>HttpClientBuilder.maxHeaderSize()</code>",id:"httpclientbuildermaxheadersize",level:4},{value:"<code>HttpClientBuilder.enableUnixSockets()</code>",id:"httpclientbuilderenableunixsockets",level:4},{value:"<code>HttpClientBuilder.stream()</code>",id:"httpclientbuilderstream",level:4},{value:"<code>HttpClientBuilder.paginate()</code>",id:"httpclientbuilderpaginate",level:4},{value:"<code>HttpClientBuilder.request()</code>",id:"httpclientbuilderrequest",level:4},{value:"<code>HttpClientBuilder.get()</code>",id:"httpclientbuilderget",level:4},{value:"<code>HttpClientBuilder.post()</code>",id:"httpclientbuilderpost",level:4},{value:"<code>HttpClientBuilder.put()</code>",id:"httpclientbuilderput",level:4},{value:"<code>HttpClientBuilder.patch()</code>",id:"httpclientbuilderpatch",level:4},{value:"<code>HttpClientBuilder.delete()</code>",id:"httpclientbuilderdelete",level:4},{value:"<code>HttpClientBuilder.head()</code>",id:"httpclientbuilderhead",level:4},{value:"Is",id:"is",level:3},{value:"<code>Is::kindOf()</code>",id:"iskindof",level:4},{value:"<code>Is::Mac()</code>",id:"ismac",level:4},{value:"<code>Is::Linux()</code>",id:"islinux",level:4},{value:"<code>Is::Windows()</code>",id:"iswindows",level:4},{value:"<code>Is::Module()</code>",id:"ismodule",level:4},{value:"<code>Is::Uuid()</code>",id:"isuuid",level:4},{value:"<code>Is::Defined()</code>",id:"isdefined",level:4},{value:"<code>Is::Json()</code>",id:"isjson",level:4},{value:"<code>Is::Ip()</code>",id:"isip",level:4},{value:"<code>Is::Empty()</code>",id:"isempty",level:4},{value:"<code>Is::Cep()</code>",id:"iscep",level:4},{value:"<code>Is::Cpf()</code>",id:"iscpf",level:4},{value:"<code>Is::Cnpj()</code>",id:"iscnpj",level:4},{value:"<code>Is::Async()</code>",id:"isasync",level:4},{value:"<code>Is::Undefined()</code>",id:"isundefined",level:4},{value:"<code>Is::Null()</code>",id:"isnull",level:4},{value:"<code>Is::Boolean()</code>",id:"isboolean",level:4},{value:"<code>Is::Buffer()</code>",id:"isbuffer",level:4},{value:"<code>Is::Number()</code>",id:"isnumber",level:4},{value:"<code>Is::String()</code>",id:"isstring",level:4},{value:"<code>Is::Object()</code>",id:"isobject",level:4},{value:"<code>Is::Date()</code>",id:"isdate",level:4},{value:"<code>Is::Array()</code>",id:"isarray",level:4},{value:"<code>Is::Regexp()</code>",id:"isregexp",level:4},{value:"<code>Is::Error()</code>",id:"iserror",level:4},{value:"<code>Is::Exception()</code>",id:"isexception",level:4},{value:"<code>Is::Class()</code>",id:"isclass",level:4},{value:"<code>Is::Float()</code>",id:"isfloat",level:4},{value:"<code>Is::ArrayOfObjects()</code>",id:"isarrayofobjects",level:4},{value:"Json",id:"json",level:3},{value:"<code>Json::builder()</code>",id:"jsonbuilder",level:4},{value:"<code>Json::copy()</code>",id:"jsoncopy",level:4},{value:"<code>Json::getJson()</code>",id:"jsongetjson",level:4},{value:"<code>Json::parse()</code>",id:"jsonparse",level:4},{value:"<code>Json::observeChanges()</code>",id:"jsonobservechanges",level:4},{value:"<code>Json::fillable()</code>",id:"jsonfillable",level:4},{value:"<code>Json::get()</code>",id:"jsonget",level:4},{value:"<code>Json::omit()</code>",id:"jsonomit",level:4},{value:"<code>Json::pick()</code>",id:"jsonpick",level:4},{value:"Module",id:"module",level:3},{value:"<code>Module::get()</code>",id:"moduleget",level:4},{value:"<code>Module::getAll()</code>",id:"modulegetall",level:4},{value:"<code>Module::getFrom()</code>",id:"modulegetfrom",level:4},{value:"<code>Module::getAllFrom()</code>",id:"modulegetallfrom",level:4},{value:"<code>Module::getWithAlias()</code>",id:"modulegetwithalias",level:4},{value:"<code>Module::getAllWithAlias()</code>",id:"modulegetallwithalias",level:4},{value:"<code>Module::getFromWithAlias()</code>",id:"modulegetfromwithalias",level:4},{value:"<code>Module::getAllFromWithAlias()</code>",id:"modulegetallfromwithalias",level:4},{value:"<code>Module::getAllJSFilesFrom()</code>",id:"modulegetalljsfilesfrom",level:4},{value:"<code>Module::import()</code>",id:"moduleimport",level:4},{value:"<code>Module::safeImport()</code>",id:"modulesafeimport",level:4},{value:"<code>Module::resolve()</code>",id:"moduleresolve",level:4},{value:"<code>Module::createDirname()</code>",id:"modulecreatedirname",level:4},{value:"<code>Module::createFilename()</code>",id:"modulecreatefilename",level:4},{value:"<code>Module::createRequire()</code>",id:"modulecreaterequire",level:4},{value:"Number",id:"number",level:3},{value:"<code>Number::getHigher()</code>",id:"numbergethigher",level:4},{value:"<code>Number::getKmRadius()</code>",id:"numbergetkmradius",level:4},{value:"<code>Number::getLower()</code>",id:"numbergetlower",level:4},{value:"<code>Number::extractNumber()</code>",id:"numberextractnumber",level:4},{value:"<code>Number::extractNumbers()</code>",id:"numberextractnumbers",level:4},{value:"<code>Number::argsAverage()</code>",id:"numberargsaverage",level:4},{value:"<code>Number::arrayAverage()</code>",id:"numberarrayaverage",level:4},{value:"<code>Number::randomIntFromInterval()</code>",id:"numberrandomintfrominterval",level:4},{value:"ObjectBuilder",id:"objectbuilder",level:3},{value:"<code>new ObjectBuilder()</code>",id:"new-objectbuilder",level:4},{value:"<code>ObjectBuilder.set()</code>",id:"objectbuilderset",level:4},{value:"<code>ObjectBuilder.delete()</code>",id:"objectbuilderdelete",level:4},{value:"<code>ObjectBuilder.get()</code>",id:"objectbuilderget",level:4},{value:"<code>ObjectBuilder.keys()</code>",id:"objectbuilderkeys",level:4},{value:"<code>ObjectBuilder.values()</code>",id:"objectbuildervalues",level:4},{value:"<code>ObjectBuilder.entries()</code>",id:"objectbuilderentries",level:4},{value:"<code>ObjectBuilder.forEachKey()</code>",id:"objectbuilderforeachkey",level:4},{value:"<code>ObjectBuilder.forEachValue()</code>",id:"objectbuilderforeachvalue",level:4},{value:"<code>ObjectBuilder.forEachEntry()</code>",id:"objectbuilderforeachentry",level:4},{value:"<code>ObjectBuilder.is()</code> &amp; <code>ObjectBuilder.isNot()</code>",id:"objectbuilderis--objectbuilderisnot",level:4},{value:"<code>ObjectBuilder.exists()</code> &amp; <code>ObjectBuilder.notExists()</code>",id:"objectbuilderexists--objectbuildernotexists",level:4},{value:"<code>ObjectBuilder.existsAll()</code> &amp; <code>ObjectBuilder.notExistsAll()</code>",id:"objectbuilderexistsall--objectbuildernotexistsall",level:4},{value:"Options",id:"options",level:3},{value:"<code>Options::create()</code>",id:"optionscreate",level:4},{value:"<code>Options::bind()</code>",id:"optionsbind",level:4},{value:"<code>Options.whenDefined()</code>",id:"optionswhendefined",level:4},{value:"Parser",id:"parser",level:3},{value:"<code>Parser::stringToArray()</code>",id:"parserstringtoarray",level:4},{value:"<code>Parser::arrayToString()</code>",id:"parserarraytostring",level:4},{value:"<code>Parser::stringToNumber()</code>",id:"parserstringtonumber",level:4},{value:"<code>Parser::jsonToFormData()</code>",id:"parserjsontoformdata",level:4},{value:"<code>Parser::formDataToJson()</code>",id:"parserformdatatojson",level:4},{value:"<code>Parser::linkToHref()</code>",id:"parserlinktohref",level:4},{value:"<code>Parser::sizeToByte()</code>",id:"parsersizetobyte",level:4},{value:"<code>Parser::byteToSize()</code>",id:"parserbytetosize",level:4},{value:"<code>Parser::timeToMs()</code>",id:"parsertimetoms",level:4},{value:"<code>Parser::msToTime()</code>",id:"parsermstotime",level:4},{value:"<code>Parser::statusCodeToReason()</code>",id:"parserstatuscodetoreason",level:4},{value:"<code>Parser::reasonToStatusCode()</code>",id:"parserreasontostatuscode",level:4},{value:"<code>Parser::dbUrlToConnectionObj()</code>",id:"parserdburltoconnectionobj",level:4},{value:"<code>Parser::connectionObjToDbUrl()</code>",id:"parserconnectionobjtodburl",level:4},{value:"<code>Parser::objectToBuilder()</code>",id:"parserobjecttobuilder",level:4},{value:"<code>Parser::arrayObjectToArrayBuilder()</code>",id:"parserarrayobjecttoarraybuilder",level:4},{value:"<code>Parser::objectToYamlString()</code>",id:"parserobjecttoyamlstring",level:4},{value:"<code>Parser::yamlStringToObject()</code>",id:"parseryamlstringtoobject",level:4},{value:"Path",id:"path",level:3},{value:"<code>Path::dirs</code>",id:"pathdirs",level:4},{value:"<code>Path::mergeDirs()</code>",id:"pathmergedirs",level:4},{value:"<code>Path::ext()</code>",id:"pathext",level:4},{value:"<code>Path::parseExt()</code>",id:"pathparseext",level:4},{value:"<code>Path::toURL()</code>",id:"pathtourl",level:4},{value:"<code>Path::toHref()</code>",id:"pathtohref",level:4},{value:"<code>Path::pwd()</code>",id:"pathpwd",level:4},{value:"<code>Path::src()</code>",id:"pathsrc",level:4},{value:"<code>Path::setSrc()</code>",id:"pathsetsrc",level:4},{value:"<code>Path::bin()</code>",id:"pathbin",level:4},{value:"<code>Path::setBin()</code>",id:"pathsetbin",level:4},{value:"<code>Path::app()</code>",id:"pathapp",level:4},{value:"<code>Path::setApp()</code>",id:"pathsetapp",level:4},{value:"<code>Path::models()</code>",id:"pathmodels",level:4},{value:"<code>Path::setModels()</code>",id:"pathsetmodels",level:4},{value:"<code>Path::boostrap()</code>",id:"pathboostrap",level:4},{value:"<code>Path::setBootstrap()</code>",id:"pathsetbootstrap",level:4},{value:"<code>Path::config()</code>",id:"pathconfig",level:4},{value:"<code>Path::setConfig()</code>",id:"pathsetconfig",level:4},{value:"<code>Path::database()</code>",id:"pathdatabase",level:4},{value:"<code>Path::setDatabase()</code>",id:"pathsetdatabase",level:4},{value:"<code>Path::lang()</code>",id:"pathlang",level:4},{value:"<code>Path::setLang()</code>",id:"pathsetlang",level:4},{value:"<code>Path::nodeModules()</code>",id:"pathnodemodules",level:4},{value:"<code>Path::setNodeModules()</code>",id:"pathsetnodemodules",level:4},{value:"<code>Path::providers()</code>",id:"pathproviders",level:4},{value:"<code>Path::setProviders()</code>",id:"pathsetproviders",level:4},{value:"<code>Path::facades()</code>",id:"pathfacades",level:4},{value:"<code>Path::setFacades()</code>",id:"pathsetfacades",level:4},{value:"<code>Path::public()</code>",id:"pathpublic",level:4},{value:"<code>Path::setPublic()</code>",id:"pathsetpublic",level:4},{value:"<code>Path::resources()</code>",id:"pathresources",level:4},{value:"<code>Path::setResources()</code>",id:"pathsetresources",level:4},{value:"<code>Path::routes()</code>",id:"pathroutes",level:4},{value:"<code>Path::setRoutes()</code>",id:"pathsetroutes",level:4},{value:"<code>Path::storage()</code>",id:"pathstorage",level:4},{value:"<code>Path::setStorage()</code>",id:"pathsetstorage",level:4},{value:"<code>Path::tests()</code>",id:"pathtests",level:4},{value:"<code>Path::setTests()</code>",id:"pathsettests",level:4},{value:"<code>Path::logs()</code>",id:"pathlogs",level:4},{value:"<code>Path::setLogs()</code>",id:"pathsetlogs",level:4},{value:"<code>Path::views()</code>",id:"pathviews",level:4},{value:"<code>Path::setViews()</code>",id:"pathsetviews",level:4},{value:"<code>Path::static()</code>",id:"pathstatic",level:4},{value:"<code>Path::setStatic()</code>",id:"pathsetstatic",level:4},{value:"<code>Path::assets()</code>",id:"pathassets",level:4},{value:"<code>Path::setAssets()</code>",id:"pathsetassets",level:4},{value:"<code>Path::locales()</code>",id:"pathlocales",level:4},{value:"<code>Path::setLocales()</code>",id:"pathsetlocales",level:4},{value:"<code>Path::stubs()</code>",id:"pathstubs",level:4},{value:"<code>Path::setStubs()</code>",id:"pathsetstubs",level:4},{value:"<code>Path::fixtures()</code>",id:"pathfixtures",level:4},{value:"<code>Path::setFixtures()</code>",id:"pathsetfixtures",level:4},{value:"<code>Path::http()</code>",id:"pathhttp",level:4},{value:"<code>Path::setHttp()</code>",id:"pathsethttp",level:4},{value:"<code>Path::console()</code>",id:"pathconsole",level:4},{value:"<code>Path::setConsole()</code>",id:"pathsetconsole",level:4},{value:"<code>Path::services()</code>",id:"pathservices",level:4},{value:"<code>Path::setServices()</code>",id:"pathsetservices",level:4},{value:"<code>Path::repositories()</code>",id:"pathrepositories",level:4},{value:"<code>Path::setRepositories()</code>",id:"pathsetrepositories",level:4},{value:"<code>Path::commands()</code>",id:"pathcommands",level:4},{value:"<code>Path::setCommands()</code>",id:"pathsetcommands",level:4},{value:"<code>Path::controllers()</code>",id:"pathcontrollers",level:4},{value:"<code>Path::setControllers()</code>",id:"pathsetcontrollers",level:4},{value:"<code>Path::exceptions()</code>",id:"pathexceptions",level:4},{value:"<code>Path::setExceptions()</code>",id:"pathsetexceptions",level:4},{value:"<code>Path::middlewares()</code>",id:"pathmiddlewares",level:4},{value:"<code>Path::setMiddlewares()</code>",id:"pathsetmiddlewares",level:4},{value:"<code>Path::interceptors()</code>",id:"pathinterceptors",level:4},{value:"<code>Path::setInterceptors()</code>",id:"pathsetinterceptors",level:4},{value:"<code>Path::terminators()</code>",id:"pathterminators",level:4},{value:"<code>Path::setTerminators()</code>",id:"pathsetterminators",level:4},{value:"<code>Path::migrations()</code>",id:"pathmigrations",level:4},{value:"<code>Path::setMigrations()</code>",id:"pathsetmigrations",level:4},{value:"<code>Path::seeders()</code>",id:"pathseeders",level:4},{value:"<code>Path::setSeeders()</code>",id:"pathsetseeders",level:4},{value:"<code>Path::nodeModulesBin()</code>",id:"pathnodemodulesbin",level:4},{value:"<code>Path::setNodeModulesBin()</code>",id:"pathsetnodemodulesbin",level:4},{value:"<code>Path::vmTmp()</code>",id:"pathvmtmp",level:4},{value:"<code>Path::vmHome()</code>",id:"pathvmhome",level:4},{value:"<code>Path::this()</code>",id:"paththis",level:4},{value:"Route",id:"route",level:3},{value:"<code>Route::getQueryString()</code>",id:"routegetquerystring",level:4},{value:"<code>Route::removeQueryParams()</code>",id:"routeremovequeryparams",level:4},{value:"<code>Route::getQueryParamsValue()</code>",id:"routegetqueryparamsvalue",level:4},{value:"<code>Route::getQueryParamsName()</code>",id:"routegetqueryparamsname",level:4},{value:"<code>Route::getParamsValue()</code>",id:"routegetparamsvalue",level:4},{value:"<code>Route::getParamsName()</code>",id:"routegetparamsname",level:4},{value:"<code>Route::createMatcher()</code>",id:"routecreatematcher",level:4},{value:"String",id:"string",level:3},{value:"<code>String::generateRandom()</code>",id:"stringgeneraterandom",level:4},{value:"<code>String::toCamelCase()</code>",id:"stringtocamelcase",level:4},{value:"<code>String::toSnakeCase()</code>",id:"stringtosnakecase",level:4},{value:"<code>String::toConstantCase()</code>",id:"stringtoconstantcase",level:4},{value:"<code>String::toPascalCase()</code>",id:"stringtopascalcase",level:4},{value:"<code>String::toSentenceCase()</code>",id:"stringtosentencecase",level:4},{value:"<code>String::toDotCase()</code>",id:"stringtodotcase",level:4},{value:"<code>String::toDashCase()</code>",id:"stringtodashcase",level:4},{value:"<code>String::toNoCase()</code>",id:"stringtonocase",level:4},{value:"<code>String::pluralize()</code>",id:"stringpluralize",level:4},{value:"<code>String::singularize()</code>",id:"stringsingularize",level:4},{value:"<code>String::ordinalize()</code>",id:"stringordinalize",level:4},{value:"<code>String::generateRandomColor()</code>",id:"stringgeneraterandomcolor",level:4},{value:"<code>String::normalizeBase64()</code>",id:"stringnormalizebase64",level:4},{value:"Uuid",id:"uuid",level:3},{value:"<code>Uuid::generate()</code>",id:"uuidgenerate",level:4},{value:"<code>Uuid::verify()</code>",id:"uuidverify",level:4},{value:"<code>Uuid::getToken()</code>",id:"uuidgettoken",level:4},{value:"<code>Uuid::getPrefix()</code>",id:"uuidgetprefix",level:4},{value:"<code>Uuid::injectPrefix()</code>",id:"uuidinjectprefix",level:4},{value:"<code>Uuid::changePrefix()</code>",id:"uuidchangeprefix",level:4},{value:"<code>Uuid::changeOrGenerate()</code>",id:"uuidchangeorgenerate",level:4}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"helpers",children:"Helpers"}),"\n",(0,r.jsx)(n.p,{children:"Understand how to use all the Athenna Helpers from @athenna/common and other packages."}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:['Athenna includes a variety of "helpers" classes inside\nthe ',(0,r.jsx)(n.code,{children:"@athenna/common"})," package that comes by default\ninstalled in your application. Many of these classes are\nused by the framework itself; however, you are free to use\nthem in your own applications if you find them convenient."]}),"\n",(0,r.jsx)(n.h2,{id:"available-helpers",children:"Available helpers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#clean",children:(0,r.jsx)(n.code,{children:"Clean"})})," - Remove falsy values\nfrom different data structures."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#color",children:(0,r.jsx)(n.code,{children:"Color"})})," - The UI Kit of Athenna\ncommand line applications."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#exception",children:(0,r.jsx)(n.code,{children:"Exception"})})," - Create errors with\nmore details to handle them easily."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#exec",children:(0,r.jsx)(n.code,{children:"Exec"})})," - Simple helpers that executes\nsome operation, like executing a command in a child process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#fakeapi",children:(0,r.jsx)(n.code,{children:"FakeApi"})})," - Create a fake REST API\nusing ",(0,r.jsx)(n.code,{children:"json"})," files to map the routes and their returns (similiar to ",(0,r.jsx)(n.a,{href:"https://wiremock.org/",children:"WireMock"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#file",children:(0,r.jsx)(n.code,{children:"File"})})," - Create, copy, move,\ndelete and get information about files."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#folder",children:(0,r.jsx)(n.code,{children:"Folder"})})," - Create, copy, move,\ndelete and get information about folders."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#httpclient",children:(0,r.jsx)(n.code,{children:"HttpClient"})})," - Make HTTP requests for\nother servers with a human-friendly and powerful API."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#httpclientbuilder",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder"})})," - Build requests\nusing ",(0,r.jsx)(n.a,{href:"https://refactoring.guru/design-patterns/builder",children:"builder pattern"})," instead of\ncreating options as objects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#is",children:(0,r.jsx)(n.code,{children:"Is"})})," - Validate if your data ",(0,r.jsx)(n.strong,{children:"is"}),"\nequals to some type or pattern."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#json",children:(0,r.jsx)(n.code,{children:"Json"})})," - Simple helpers to manipulate JSON."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#module",children:(0,r.jsx)(n.code,{children:"Module"})})," - Simple helpers to manipulate\nNode.js modules."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#number",children:(0,r.jsx)(n.code,{children:"Number"})})," - Simple helpers to manipulate\nnumbers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#object-builder",children:(0,r.jsx)(n.code,{children:"ObjectBuilder"})})," - Build objects removing\n",(0,r.jsx)(n.code,{children:"undefined"})," and ",(0,r.jsx)(n.code,{children:"null"})," values and without memory reference."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#options",children:(0,r.jsx)(n.code,{children:"Options"})})," - Simple helpers to develop\nAPI's (functions and methods) with good options and configurations for\ndevelopers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#parser",children:(0,r.jsx)(n.code,{children:"Parser"})})," - Parse data from X to Y and Y to X."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#path",children:(0,r.jsx)(n.code,{children:"Path"})})," - Get the full path to some file or\nfolder starting from your application\n",(0,r.jsx)(n.a,{href:"https://www.computerhope.com/jargon/p/pwd.htm",children:"PWD"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#route",children:(0,r.jsx)(n.code,{children:"Route"})})," - Simple helpers to manipulate\nroute params, query params and more."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#string",children:(0,r.jsx)(n.code,{children:"String"})})," - Simple helpers to manipulate\nstrings."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#uuid",children:(0,r.jsx)(n.code,{children:"Uuid"})})," - Create customized UUID v4 and\nvalidate if they are valid."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"clean",children:"Clean"}),"\n",(0,r.jsx)(n.h4,{id:"cleancleanarray",children:(0,r.jsx)(n.code,{children:"Clean::cleanArray()"})}),"\n",(0,r.jsx)(n.p,{children:"Clean falsy and empty values from an array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Clean } from '@athenna/common'\n\nconst array = [\n  '',\n  1,\n  null,\n  undefined, \n  { joao: 'joao', lenon: null }, \n  {}\n]\n\nconst cleanedArray = Clean.cleanArray(array)\n\nconsole.log(cleanedArray)\n\n/**\n * [\n *  1,\n *  { joao: 'joao', lenon: null }, \n *  {}\n * ]\n */\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"cleanArray()"})," method supports two options, ",(0,r.jsx)(n.code,{children:"removeEmpty"})," to remove empty\nvalues like ",(0,r.jsx)(n.code,{children:"{}"})," and ",(0,r.jsx)(n.code,{children:"[]"})," and ",(0,r.jsx)(n.code,{children:"recursive"})," to recursivelly remove data\nfrom objects and arrays:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const cleanedArray = Clean.cleanArray(array, {\n  removeEmpty: true,\n  recursive: true\n})\n\nconsole.log(cleanedArray)\n\n/**\n * [\n *  1, { joao: 'joao' }\n * ]\n */\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cleancleanobject",children:(0,r.jsx)(n.code,{children:"Clean::cleanObject()"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const object = {\n  key: 'value',\n  emptyArray: [],\n  emptyObject: {},\n  object: { joao: 'joao' },\n  nullValue: null,\n  undefinedValue: undefined,\n  arrayWithSubs: [null, 1, { joao: 'joao', lenon: null }, {}],\n}\n\nconst cleanedObject = Clean.cleanObject(object)\n\nconsole.log(cleanedObject) \n/**\n * {\n *  key: 'value',\n *  emptyArray: [],\n *  emptyObject: {},\n *  object: { joao: 'joao' },\n *  arrayWithSubs: [null, 1, { joao: 'joao', lenon: null }, {}],\n * }\n */\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"cleanObject()"})," method supports two options, ",(0,r.jsx)(n.code,{children:"removeEmpty"})," to remove empty\nvalues like ",(0,r.jsx)(n.code,{children:"{}"})," and ",(0,r.jsx)(n.code,{children:"[]"})," and ",(0,r.jsx)(n.code,{children:"recursive"})," to recursivelly remove data\nfrom objects and arrays:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const cleanedObject = Clean.cleanObject(object, {\n  removeEmpty: true,\n  recursive: true,\n})\n\nconsole.log(cleanedObject) \n/**\n * {\n *  key: 'value',\n *  object: { joao: 'joao' },\n *  arrayWithSubs: [1, { joao: 'joao' }],\n * }\n */\n"})}),"\n",(0,r.jsx)(n.h3,{id:"color",children:"Color"}),"\n",(0,r.jsxs)(n.p,{children:["This helper uses ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/chalk",children:"chalk"}),"\nlibrary under the hood to create unique colors for Athenna\nCLI applications. In this documentation we are going to focus\nonly in helpers that ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Color"})})," provides different from ",(0,r.jsx)(n.strong,{children:"chalk"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"colorapply",children:(0,r.jsx)(n.code,{children:"Color::apply()"})}),"\n",(0,r.jsxs)(n.p,{children:["Apply the color engine of Athenna to some string. The color\nengine execute ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/chalk",children:"chalk"}),"\nmethods under the hood. In the example bellow we are executing\n",(0,r.jsx)(n.code,{children:"yellow()"})," and ",(0,r.jsx)(n.code,{children:"bold()"})," method of\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/chalk",children:"chalk"})," in the word\n",(0,r.jsx)(n.code,{children:"World"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Color } from '@athenna/common'\n\nconst colorizedString = Color.apply('Hello ({yellow, bold} World)!')\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The color of ",(0,r.jsx)(n.code,{children:"World"})," word will be yellow with bold format."]})}),"\n",(0,r.jsx)(n.h4,{id:"colorremove",children:(0,r.jsx)(n.code,{children:"Color::remove()"})}),"\n",(0,r.jsx)(n.p,{children:"Remove all the formats and colors of your string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Color } from '@athenna/common'\n\nconst noColorString = Color.remove(Color.yellow('Davi Mezencio'))\n"})}),"\n",(0,r.jsx)(n.h4,{id:"colorhttpmethod",children:(0,r.jsx)(n.code,{children:"Color::httpMethod()"})}),"\n",(0,r.jsx)(n.p,{children:"Get an instance of chalk with a determined color for each type\nof http method:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Color } from '@athenna/common'\n\nColor.httpMethod('GET').bold('Request Received')\nColor.httpMethod('HEAD').bold('Request Received')\nColor.httpMethod('POST').bold('Request Received')\nColor.httpMethod('PUT').bold('Request Received')\nColor.httpMethod('PATCH').bold('Request Received')\nColor.httpMethod('DELETE').bold('Request Received')\nColor.httpMethod('OPTIONS').bold('Request Received')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exception",children:"Exception"}),"\n",(0,r.jsxs)(n.p,{children:["In this documentation section we are going to cover only the\nhelpers of the ",(0,r.jsx)(n.code,{children:"Exception"})," class. You can learn more about\nexceptions when handling errors in your application. Those are\nthe available documentation for error handling by application:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/rest-api-application/error-handling",children:"REST API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/cli-application/error-handling",children:"CLI"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"exceptiontojson",children:(0,r.jsx)(n.code,{children:"Exception.toJSON()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the informations of the exception as JSON:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exception } from '@athenna/common'\n\nconst exception = new Exception({\n  status: 500,\n  details: [],\n  otherInfos: {},\n  name: 'ErrorName',\n  code: 'ERROR_CODE',\n  message: 'Some exception has ocurred.',\n  help: 'Try restarting your computer, should work.'\n})\n\nconst json = exception.toJSON() // { status: 500, name: 'ErrorName', ... }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"exceptionprettify",children:(0,r.jsx)(n.code,{children:"Exception.prettify()"})}),"\n",(0,r.jsx)(n.p,{children:"Transform the exception to a human redable format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exception } from '@athenna/common'\n\nconst exception = new Exception({\n  status: 500,\n  details: [],\n  otherInfos: {},\n  name: 'ErrorName',\n  code: 'ERROR_CODE',\n  message: 'Some exception has ocurred.',\n  help: 'Try restarting your computer, should work.'\n})\n\nLogger.error(await exception.prettify())\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exec",children:"Exec"}),"\n",(0,r.jsx)(n.h4,{id:"execsleep",children:(0,r.jsx)(n.code,{children:"Exec::sleep()"})}),"\n",(0,r.jsx)(n.p,{children:"Put the code to sleep for a determined amount of MS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\nawait Exec.sleep(3000) // 3 seconds\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execconcurrently",children:(0,r.jsx)(n.code,{children:"Exec::concurrently()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute some callback concurrently for each value of\nthe array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\nconst array = [1, 2, 3]\n\nconst newArray = await Exec.concurrently(array, async (number) => {\n  // Some sync operation just to simulate\n  await Exec.sleep(1000)\n\n  return number++\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execcommand",children:(0,r.jsx)(n.code,{children:"Exec::command()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute some command of your OS in a child process:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\nconst { stdout, stderr } = await Exec.command('ls -la')\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can add as second parameter an object with some options:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec, type CommandInput } from '@athenna/common'\n\nconst options: CommandInput = {}\n\nconst { stdout, stderr } = await Exec.command('ls -la', options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execshell",children:(0,r.jsx)(n.code,{children:"Exec::shell()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.code,{children:"Exec::command()"})," method, but works only for shell consoles:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\nconst { stdout, stderr } = await Exec.shell('ls -la')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execnode",children:(0,r.jsx)(n.code,{children:"Exec::node()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute some Node.js script in a child process:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"#!/usr/bin/env node\n\nimport { Exec } from '@athenna/common'\n\nExec.artisan('./index.ts', {\n  nodeOptions: ['--import=@athenna/tsconfig']\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execartisan",children:(0,r.jsx)(n.code,{children:"Exec::artisan()"})}),"\n",(0,r.jsxs)(n.p,{children:["This method was created specially to execute ",(0,r.jsx)(n.code,{children:"artisan"})," scripts\nin child processes. Under the hood it calls ",(0,r.jsx)(n.code,{children:"Exec::node()"})," method\nbut with predefined options:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"#!/usr/bin/env node\n\nimport { Exec } from '@athenna/common'\n\nExec.artisan('./bootstrap/artisan.js', {\n  nodeOptions: ['--enable-source-maps', '--import=@athenna/tsconfig']\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execdownload",children:(0,r.jsx)(n.code,{children:"Exec::download()"})}),"\n",(0,r.jsxs)(n.p,{children:["Download some file from some URL and get the ",(0,r.jsx)(n.code,{children:"File"})," instance:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\n// File helper class instance\nconst file = await Exec.download(Path.storage('file.txt'), 'https://athenna.io/file.txt')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execpagination",children:(0,r.jsx)(n.code,{children:"Exec::pagination()"})}),"\n",(0,r.jsx)(n.p,{children:"Create a pagination object for your API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Exec } from '@athenna/common'\n\nconst data = [{...}, {...}]\n\nconst paginateObject = await Exec.pagination(data, data.length, {\n  page: 0,\n  limit: 10,\n  resourceUrl: Config.get('app.url')\n})\n\nconsole.log(paginateObject)\n/**\n * {\n *  data: [{...}, {...}],\n *  meta: {\n *    itemCount: 2,\n *    totalItems: 2,\n *    totalPages: 1,\n *    currentPage: 0,\n *    itemsPerPage: 10,\n *  },\n *  links: {\n *    first: 'http://localhost:3000?limit=10',\n *    previous: 'http://localhost:3000?page=0&limit=10',\n *    next: 'http://localhost:3000?page=1&limit=10',\n *    last: 'http://localhost:3000?page=0&limit=10',\n *  } \n * }\n */\n"})}),"\n",(0,r.jsx)(n.h3,{id:"fakeapi",children:"FakeApi"}),"\n",(0,r.jsx)(n.h4,{id:"fakeapistart",children:(0,r.jsx)(n.code,{children:"FakeApi::start()"})}),"\n",(0,r.jsxs)(n.p,{children:["Start the fake server on port ",(0,r.jsx)(n.code,{children:"8989"})," and loading the path\n",(0,r.jsx)(n.code,{children:"Path.resources('fake-api')"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nawait FakeApi.start()\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["You can change the server port and the path to read the\n",(0,r.jsx)(n.code,{children:"json"})," files:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nawait FakeApi.start(8989, Path.resources('path'))\n"})})]}),"\n",(0,r.jsx)(n.h4,{id:"fakeapistop",children:(0,r.jsx)(n.code,{children:"FakeApi::stop()"})}),"\n",(0,r.jsxs)(n.p,{children:["Stop the fake api server and call ",(0,r.jsx)(n.code,{children:"FakeApi::recreate()"}),"\nmethod to create a new server instance:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nawait FakeApi.stop()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fakeapiisrunning",children:(0,r.jsx)(n.code,{children:"FakeApi::isRunning()"})}),"\n",(0,r.jsx)(n.p,{children:"Verify if the fake api server is running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nif (FakeApi.isRunning()) {\n  // do something...\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fakeapilistroutes",children:(0,r.jsx)(n.code,{children:"FakeApi::listRoutes()"})}),"\n",(0,r.jsx)(n.p,{children:"List all the routes registered in the fake api server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nconst routes = FakeApi.listRoutes()\n\nconsole.log(routes)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fakeapiregisterfile",children:(0,r.jsx)(n.code,{children:"FakeApi::registerFile()"})}),"\n",(0,r.jsxs)(n.p,{children:["Register a route using a ",(0,r.jsx)(n.code,{children:"json"})," file in the fake api:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nFakeApi.registerFile(Path.resources('fake-api/users.json'))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Content of ",(0,r.jsx)(n.code,{children:"Path.resources('fake-api/users.json')"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "path": "/users",\n  "method": "GET",\n  "statusCode": 200, \ud83d\udc48 // The response status code\n  "body": [ \ud83d\udc48 // The response body\n    {\n      "id": 1,\n      "name": "Jo\xe3o Lenon",\n    },\n    {\n      "id": 2,\n      "name": "Thais Gabriela",\n    }\n  ],\n  "headers": { \ud83d\udc48 // The response header\n    "Content-Type": "application/json"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"fakeapiregisterfolder",children:(0,r.jsx)(n.code,{children:"FakeApi::registerFolder()"})}),"\n",(0,r.jsxs)(n.p,{children:["Recursively register all the ",(0,r.jsx)(n.code,{children:"json"})," files of some folder:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\n\nawait FakeApi.registerFolder(Path.resources('fake-api'))\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fakeapibuild",children:(0,r.jsx)(n.code,{children:"FakeApi::build()"})}),"\n",(0,r.jsx)(n.p,{children:"Use this method to programatically build the routes u\nsing the builder pattern:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FakeApi } from '@athenna/common'\nimport type { RouteOptions } from 'fastify'\n\nconst options: RouteOptions = {}\nconst fakeApiBuilder = FakeApi.build()\n\nconst users = [\n  {\n    id: 1,\n    name: 'Jo\xe3o Lenon',\n  },\n  {\n    id: 2,\n    name: 'Thais Gabriela',\n  }\n]\n\nfakeApiBuilder\n  .path('/users')\n  .method('GET')\n  .statusCode(200)\n  .body(users)\n  .header({ 'Content-Type': 'application/json' })\n  .register(options)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"file",children:"File"}),"\n",(0,r.jsxs)(n.h4,{id:"fileload--fileloadsync",children:[(0,r.jsx)(n.code,{children:"File.load()"})," & ",(0,r.jsx)(n.code,{children:"File.loadSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Creates the file is does not exist and also load the file information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst existent = new File(Path.storage('existent.txt'))\nconst nonExistent = new File('./nonExistent.txt', 'File content')\n\n// Load the file info and content.\nawait existent.load({ withContent: true })  \ud83d\udc48\n\n// Create and load the file info without the \n// content (be careful when loading big files).\nnonExistent.loadSync() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.p,{children:"After loading process, the file will contain new informations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"createdAt - The date when the file was created."}),"\n",(0,r.jsx)(n.li,{children:"accessedAt - The date when the file was last accessed."}),"\n",(0,r.jsx)(n.li,{children:"modifiedAt - The date when the file was last modified."}),"\n",(0,r.jsx)(n.li,{children:"fileSize - The size of the file in MB."}),"\n",(0,r.jsxs)(n.li,{children:["content - The content of the file as ",(0,r.jsx)(n.code,{children:"Buffer"})," if ",(0,r.jsx)(n.code,{children:"withContent"})," was ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"filecopy--filecopysync",children:[(0,r.jsx)(n.code,{children:"File.copy()"})," & ",(0,r.jsx)(n.code,{children:"File.copySync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Create a copy of the file in other location or with other name:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst copiedFile = file.copySync('./copy-of-file.txt')\nconst copiedFile = await file.copy(Path.storage('copy-of-file.txt'))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To copy the file and load the content of the copy set the ",(0,r.jsx)(n.code,{children:"withContent"}),"\nas ",(0,r.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst copiedFile = await file.copy(Path.storage('copy-of-file.txt'), {\n  withContent: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When copying the file you can set the ",(0,r.jsx)(n.code,{children:"mockedValues"})," to ",(0,r.jsx)(n.code,{children:"true"})," to create\na file with fake name:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst copiedFile = await file.copy(Path.storage('copy-of-file.txt'), {\n  mockedValues: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filemove--filemovesync",children:[(0,r.jsx)(n.code,{children:"File.move()"})," & ",(0,r.jsx)(n.code,{children:"File.moveSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Move the file to other location:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst movedFile = file.moveSync('./move-of-file.txt')               \ud83d\udc48\nconst movedFile = await file.move(Path.storage('move-of-file.txt')) \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To move the file and load the content of the move set the ",(0,r.jsx)(n.code,{children:"withContent"}),"\nas ",(0,r.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst movedFile = await file.move(Path.storage('move-of-file.txt'), {\n  withContent: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When moving the file you can set the ",(0,r.jsx)(n.code,{children:"mockedValues"})," to ",(0,r.jsx)(n.code,{children:"true"})," to create\na file with fake name:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst movedFile = await file.move(Path.storage('file-path.txt'), {\n  mockedValues: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"fileremove--fileremovesync",children:[(0,r.jsx)(n.code,{children:"File.remove()"})," & ",(0,r.jsx)(n.code,{children:"File.removeSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Delete a file from the file system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nfile.removeSync()   \ud83d\udc48\nawait file.remove() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filesetcontent--filesetcontentsync",children:[(0,r.jsx)(n.code,{children:"File.setContent()"})," & ",(0,r.jsx)(n.code,{children:"File.setContentSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Set the content of a file overwriting the existing content:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.txt', 'Hello')\n\nfile.setContentSync('Hello World!')   \ud83d\udc48\nawait file.setContent('Hello World!') \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filegetcontent--filegetcontentsync",children:[(0,r.jsx)(n.code,{children:"File.getContent()"})," & ",(0,r.jsx)(n.code,{children:"File.getContentSync()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Get the content of a file as ",(0,r.jsx)(n.code,{children:"Buffer"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst contentBuffer = file.getContentSync()   \ud83d\udc48\nconst contentBuffer = await file.getContent() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To save the content of the file in the instance set the ",(0,r.jsx)(n.code,{children:"saveContent"})," as ",(0,r.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst content = await file.getContent({ saveContent: true }) \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filegetcontentasstring--filegetcontentasstringsync",children:[(0,r.jsx)(n.code,{children:"File.getContentAsString()"})," & ",(0,r.jsx)(n.code,{children:"File.getContentAsStringSync()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Same behavior of ",(0,r.jsx)(n.code,{children:"getContent()"}),"/",(0,r.jsx)(n.code,{children:"getContentSync()"}),", but return the content\nas ",(0,r.jsx)(n.code,{children:"string"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst contentString = file.getContentAsStringSync()   \ud83d\udc48\nconst contentString = await file.getContentAsString() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filegetcontentasjson--filegetcontentasjsonsync",children:[(0,r.jsx)(n.code,{children:"File.getContentAsJson()"})," & ",(0,r.jsx)(n.code,{children:"File.getContentAsJsonSync()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Same behavior of ",(0,r.jsx)(n.code,{children:"getContent()"}),"/",(0,r.jsx)(n.code,{children:"getContentSync()"}),", but return the content as\n",(0,r.jsx)(n.code,{children:"object"})," if the content is a valid JSON string:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst contentJSON = file.getContentAsJsonSync()   \ud83d\udc48\nconst contentJSON = await file.getContentAsJson() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filegetcontentasyaml--filegetcontentasyamlsync",children:[(0,r.jsx)(n.code,{children:"File.getContentAsYaml()"})," & ",(0,r.jsx)(n.code,{children:"File.getContentAsYamlSync()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Same behavior of ",(0,r.jsx)(n.code,{children:"getContentAsJson()"}),"/",(0,r.jsx)(n.code,{children:"getContentAsJsonSync()"}),", but automatically\nparse the the yaml to an ",(0,r.jsx)(n.code,{children:"object"})," if the content is a valid YAML string:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst contentYAML = file.getContentAsYamlSync()   \ud83d\udc48\nconst contentYAML = await file.getContentAsYaml() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filegetcontentasbuilder--filegetcontentasbuildersync",children:[(0,r.jsx)(n.code,{children:"File.getContentAsBuilder()"})," & ",(0,r.jsx)(n.code,{children:"File.getContentAsBuilderSync()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Same behavior of ",(0,r.jsx)(n.code,{children:"getContent()"}),"/",(0,r.jsx)(n.code,{children:"getContentSync()"}),", but return the content as\nan ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#object-builder",children:(0,r.jsx)(n.code,{children:"ObjectBuilder"})})," instance if the\ncontent is a valid JSON string:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst contentObjectBuilder = file.getContentAsBuilderSync()   \ud83d\udc48\nconst contentObjectBuilder = await file.getContentAsBuilder() \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"fileappend--fileappendsync",children:[(0,r.jsx)(n.code,{children:"File.append()"})," & ",(0,r.jsx)(n.code,{children:"File.appendSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Add content to the end of the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.txt', 'Hello')\n\nfile.appendSync(' World') \ud83d\udc48\nawait file.append('!\\n')  \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"fileprepend--fileprependsync",children:[(0,r.jsx)(n.code,{children:"File.prepend()"})," & ",(0,r.jsx)(n.code,{children:"File.prependSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Add content to the top of the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.txt', 'World')\n\nfile.prependSync('ello ') \ud83d\udc48\nawait file.prepend('H')   \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filecreatereadstream",children:(0,r.jsx)(n.code,{children:"File.createReadStream()"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/stream.html#readable-streams",children:"readable stream"}),"\ninstance of the file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const stream = file.createReadStream()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filecreatewritestream",children:(0,r.jsx)(n.code,{children:"File.createWriteStream()"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/stream.html#writable-streams",children:"writable stream"}),"\ninstance of the file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const stream = file.createWriteStream()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filetojson",children:(0,r.jsx)(n.code,{children:"File.toJSON()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the informations of the file as JSON:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const infos = file.toJSON() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fileimport",children:(0,r.jsx)(n.code,{children:"File.import()"})}),"\n",(0,r.jsx)(n.p,{children:"Import the file path if is a valid module:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.js', \"console.log('hello')\")\n\nconst module = await file.import() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filesafeimport",children:(0,r.jsx)(n.code,{children:"File.safeImport()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.code,{children:"import()"})," method, but if the file is not a valid module the exception\nwill be ignored:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.txt', \"console.log('hello')\")\n\nconst module = await file.safeImport() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.p,{children:"Importing files that got any errors like syntax errors will also not throw:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nconst file = new File('./file.js', \"console.log('hello\")\n\nconst module = await file.safeImport() \ud83d\udc48 // Nothing happens\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filesaferemove",children:(0,r.jsx)(n.code,{children:"File::safeRemove()"})}),"\n",(0,r.jsx)(n.p,{children:"Call for a delete operation without worrying about exceptions because the file\ndoes not exist:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File } from '@athenna/common'\n\nawait File.safeRemove(Path.storage('file.txt'))      \ud83d\udc48\nawait File.safeRemove(Path.storage('not-found.txt')) \ud83d\udc48 // Will not throw\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"fileexists--fileexistssync",children:[(0,r.jsx)(n.code,{children:"File::exists()"})," & ",(0,r.jsx)(n.code,{children:"File::existsSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if a file exists or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (File.existsSync('package.json')) {\n  // do something\n}\n\nif (await File.exists('package.json')) {\n  // do something\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"fileisfile--fileisfilesync",children:[(0,r.jsx)(n.code,{children:"File::isFile()"})," & ",(0,r.jsx)(n.code,{children:"File::isFileSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if a file is a valid file or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (File.isFileSync('package.json')) {\n  // do something\n}\n\nif (await File.isFile('package.json')) {\n  // do something\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"filecreatefileofsize",children:(0,r.jsx)(n.code,{children:"File::createFileOfSize()"})}),"\n",(0,r.jsx)(n.p,{children:"Create a fake file with determined size for testing purposes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const file = await File.createFileOfSize('fake.js', 1024 * 1024 * 100) \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h3,{id:"folder",children:"Folder"}),"\n",(0,r.jsxs)(n.h4,{id:"folderload--folderloadsync",children:[(0,r.jsx)(n.code,{children:"Folder.load()"})," & ",(0,r.jsx)(n.code,{children:"Folder.loadSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Creates the folder if it does not exist and also load the folder information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst existent = new Folder(Path.storage('existent'))\nconst nonExistent = new Folder('./nonExistent')\n\n// Load the folder info with sub folders and with file contents.\nawait existent.load({ withSub: true, withContent: true })  \ud83d\udc48\n\n// Create and load the folder info without the \n// content (be careful when loading big files).\nnonExistent.loadSync() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.p,{children:"After loading process, the folder will contain new informations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"createdAt - The date when the folder was created."}),"\n",(0,r.jsx)(n.li,{children:"accessedAt - The date when the folder was last accessed."}),"\n",(0,r.jsx)(n.li,{children:"modifiedAt - The date when the folder was last modified."}),"\n",(0,r.jsx)(n.li,{children:"folderSize - The size of the folder in MB."}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"foldercopy--foldercopysync",children:[(0,r.jsx)(n.code,{children:"Folder.copy()"})," & ",(0,r.jsx)(n.code,{children:"Folder.copySync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Create a copy of the folder in other location or with other name:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst copiedFolder = folder.copySync('./copy-of-folder')\nconst copiedFolder = await folder.copy(Path.storage('copy-of-folder'))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To copy the folder and load the sub folders and the content of the\ncopy set the ",(0,r.jsx)(n.code,{children:"withSub"})," and ",(0,r.jsx)(n.code,{children:"withContent"})," as ",(0,r.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst copiedFolder = await folder.copy(Path.storage('copy-of-folder'), {\n  withSub: true,    \ud83d\udc48\n  withContent: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When copying the folder you can set the ",(0,r.jsx)(n.code,{children:"mockedValues"})," to ",(0,r.jsx)(n.code,{children:"true"})," to copy the\nfiles with fake names:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst copiedFolder = await folder.copy(Path.storage('copy-of-file'), {\n  mockedValues: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"foldermove--foldermovesync",children:[(0,r.jsx)(n.code,{children:"Folder.move()"})," & ",(0,r.jsx)(n.code,{children:"Folder.moveSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Move the folder to other location:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst movedFolder = folder.moveSync('./move-of-folder')               \ud83d\udc48\nconst movedFolder = await folder.move(Path.storage('move-of-folder')) \ud83d\udc48\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To move the folder and load the sub folders and the content of the\nmove set the ",(0,r.jsx)(n.code,{children:"withSub"})," and ",(0,r.jsx)(n.code,{children:"withContent"})," as ",(0,r.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst movedFolder = await folder.move(Path.storage('move-of-folder'), {\n  withSub: true,    \ud83d\udc48\n  withContent: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When moving the folder you can set the ",(0,r.jsx)(n.code,{children:"mockedValues"})," to ",(0,r.jsx)(n.code,{children:"true"})," to move the\nfiles with fake names:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nconst movedFolder = await folder.move(Path.storage('file-path'), {\n  mockedValues: true \ud83d\udc48\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"folderremove--folderremovesync",children:[(0,r.jsx)(n.code,{children:"Folder.remove()"})," & ",(0,r.jsx)(n.code,{children:"Folder.removeSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Delete a folder from the folder system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nfolder.removeSync()   \ud83d\udc48\nawait folder.remove() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"foldertojson",children:(0,r.jsx)(n.code,{children:"Folder.toJSON()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the informations of the folder as JSON:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const infos = folder.toJSON() \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"foldergetfilesbypattern",children:(0,r.jsx)(n.code,{children:"Folder.getFilesByPattern()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all the files of a folder using a glob pattern:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const files = folder.getFilesByPattern('**/*.js') \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"foldergetfoldersbypattern",children:(0,r.jsx)(n.code,{children:"Folder.getFoldersByPattern()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all the folders of a folder using a glob pattern:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const folders = folder.getFoldersByPattern('**/*') \ud83d\udc48\n"})}),"\n",(0,r.jsx)(n.h4,{id:"foldersaferemove",children:(0,r.jsx)(n.code,{children:"Folder::safeRemove()"})}),"\n",(0,r.jsx)(n.p,{children:"Call for a delete operation without worrying about exceptions because the folder\ndoes not exist:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Folder } from '@athenna/common'\n\nawait Folder.safeRemove(Path.storage('folder'))    \ud83d\udc48\nawait Folder.safeRemove(Path.storage('not-found')) \ud83d\udc48 // Will not throw\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"folderexists--folderexistssync",children:[(0,r.jsx)(n.code,{children:"Folder::exists()"})," & ",(0,r.jsx)(n.code,{children:"Folder::existsSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if a folder exists or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (Folder.existsSync('app')) {\n  // do something\n}\n\nif (await Folder.exists('app')) {\n  // do something\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"folderisfolder--folderisfoldersync",children:[(0,r.jsx)(n.code,{children:"Folder::isFolder()"})," & ",(0,r.jsx)(n.code,{children:"Folder::isFolderSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if a folder is a valid folder or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (Folder.isFolderSync('app')) {\n  // do something\n}\n\nif (await Folder.isFolder('app')) {\n  // do something\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"foldersize--foldersizesync",children:[(0,r.jsx)(n.code,{children:"Folder::size()"})," & ",(0,r.jsx)(n.code,{children:"Folder::sizeSync()"})]}),"\n",(0,r.jsx)(n.p,{children:"Get the size of the folder in MB:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (Folder.sizeSync('app') === 100) {\n  // do something\n}\n\nif (await Folder.size('app')  === 100) {\n  // do something\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"httpclient",children:"HttpClient"}),"\n",(0,r.jsxs)(n.p,{children:["This helper uses the ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/got",children:(0,r.jsx)(n.code,{children:"got"})}),"\nlibrary under the hood to build the requests."]}),"\n",(0,r.jsx)(n.h4,{id:"httpclientget",children:(0,r.jsx)(n.code,{children:"HttpClient::get()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"GET"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst response: Response<any> = await HttpClient.get('https://athenna.io', options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientpost",children:(0,r.jsx)(n.code,{children:"HttpClient::post()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"POST"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst url = 'https://athenna.io'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst body = {\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n}\n\nconst response: Response<any> = await HttpClient.post(url, body, options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientput",children:(0,r.jsx)(n.code,{children:"HttpClient::put()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"PUT"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst url = 'https://athenna.io'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst body = {\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n}\n\nconst response: Response<any> = await HttpClient.put(url, body, options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientpatch",children:(0,r.jsx)(n.code,{children:"HttpClient::patch()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"PATCH"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst url = 'https://athenna.io'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst body = {\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n}\n\nconst response: Response<any> = await HttpClient.patch(url, body, options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientdelete",children:(0,r.jsx)(n.code,{children:"HttpClient::delete()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"DELETE"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst url = 'https://athenna.io'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst response: Response<any> = await HttpClient.delete(url, options)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclienthead",children:(0,r.jsx)(n.code,{children:"HttpClient::head()"})}),"\n",(0,r.jsxs)(n.p,{children:["Make a ",(0,r.jsx)(n.code,{children:"HEAD"})," request to some URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type Request,\n  type Response\n} from '@athenna/common'\n\nconst url = 'https://athenna.io'\n\nconst options: Request = {\n  timeout: 2000,\n}\n\nconst response: Response<any> = await HttpClient.head(url, options)\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"httpclientbuilder--httpclientsetbuilder",children:[(0,r.jsx)(n.code,{children:"HttpClient::builder()"})," & ",(0,r.jsx)(n.code,{children:"HttpClient::setBuilder()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"HttpClientBuilder"})," instance that ",(0,r.jsx)(n.code,{children:"HttpClient"})," class\nwill use to build your requests in the example above:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { \n  HttpClient, \n  type RequestError, \n  type RetryObject \n} from '@athenna/common'\n\nconst newBuilder = true\nconst builder = HttpClient.builder(newBuilder)\n\nbuilder\n  .timeout(2000)\n  .prefixUrl('https://athenna.io')\n  .retryStrategy((error: RequestError, execCount: number, retryObject: RetryObject) => {\n    if (execCount === 3) {\n      return 0\n    }\n\n    return 2000\n  })\n\nHttpClient.setBuilder(builder)\n\n// Now all the requests done with HttpClient \n// will use the same predefined builder options:\nconst response = await HttpClient.get('https://athenna.io')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"httpclientbuilder",children:"HttpClientBuilder"}),"\n",(0,r.jsxs)(n.p,{children:["This helper uses the ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/got",children:(0,r.jsx)(n.code,{children:"got"})}),"\nlibrary under the hood to build the requests."]}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetinithook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setInitHook()"})}),"\n",(0,r.jsxs)(n.p,{children:["Called with the plain request options, right before\ntheir normalization. The second argument represents\nthe current ",(0,r.jsx)(n.code,{children:"Options"})," instance."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This hook must be synchronous."}),"\n",(0,r.jsx)(n.li,{children:"This is called every time options are merged."}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"options"})," object may not have the ",(0,r.jsx)(n.code,{children:"url"}),"\nproperty. To modify it, use a ",(0,r.jsx)(n.code,{children:"beforeRequest"}),"\nhook instead."]}),"\n",(0,r.jsxs)(n.li,{children:["This hook is called when a new instance of\n",(0,r.jsx)(n.code,{children:"Options"})," is created.\nDo not confuse this with the creation of\n",(0,r.jsx)(n.code,{children:"Request"})," or ",(0,r.jsx)(n.code,{children:"got(\u2026)"}),"."]}),"\n"]})}),"\n",(0,r.jsx)(n.p,{children:"For example, this can be used to fix typos to\nmigrate from older versions faster."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.setInitHook(init => {\n  if ('followRedirects' in init) {\n    init.followRedirect = init.followRedirects\n    delete init.followRedirects\n  }\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetbeforerequesthook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setBeforeRequestHook()"})}),"\n",(0,r.jsxs)(n.p,{children:["Called right before making the request with\n",(0,r.jsx)(n.code,{children:"options.createNativeRequestOptions()"}),". This hook\nis especially useful in conjunction with\n",(0,r.jsx)(n.code,{children:"HttpClient.setBuilder(customBuilder)"})," when you want\nto sign your request."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HttpClient will make no further changes to the request\nbefore it is sent."}),"\n",(0,r.jsxs)(n.li,{children:["Changing ",(0,r.jsx)(n.code,{children:"options.json"})," or ",(0,r.jsx)(n.code,{children:"options.form"})," has no\neffect on the request. You should change ",(0,r.jsx)(n.code,{children:"options.body"}),"\ninstead. If needed, update the ",(0,r.jsx)(n.code,{children:"options.headers"})," accordingly."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.setBeforeRequestHook(options => {\n  options.body = JSON.stringify({ payload: 'new' })\n  options.headers['content-length'] = options.body.length.toString()\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetbeforeredirecthook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setBeforeRedirectHook()"})}),"\n",(0,r.jsxs)(n.p,{children:["The equivalent of ",(0,r.jsx)(n.code,{children:"setBeforeRequestHook"})," but when\nredirecting."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This is especially useful when you want to avoid\ndead sites."}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.setBeforeRedirectHook((options, response) => {\n    if (options.hostname === 'deadSite') {\n        options.hostname = 'fallbackSite'\n    }\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetbeforeerrorhook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setBeforeErrorHook()"})}),"\n",(0,r.jsxs)(n.p,{children:["Called with a ",(0,r.jsx)(n.code,{children:"RequestError"})," instance. The error\nis passed to the hook right before it's thrown.\nThis is especially useful when you want to have\nmore detailed errors."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder\n  .responseType('json')\n  .setBeforeErrorHook(error => {\n    const { response } = error\n\n    if (response && response.body) {\n      error.name = 'GitHubError'\n      error.message = `${response.body.message} (${response.statusCode})`\n    }\n    \n    return error\n  })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetbeforeretryhook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setBeforeRetryHook()"})}),"\n",(0,r.jsxs)(n.p,{children:["The equivalent of ",(0,r.jsx)(n.code,{children:"setBeforeErrorHook"})," but when\nretrying. Additionally, there is a second argument\n",(0,r.jsx)(n.code,{children:"retryCount"}),", the current retry number."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When using the Stream API, this hook is ignored."}),"\n",(0,r.jsxs)(n.li,{children:["When retrying, the ",(0,r.jsx)(n.code,{children:"beforeRequest"})," hook is called\nafterwards."]}),"\n",(0,r.jsxs)(n.li,{children:["If no retry occurs, the ",(0,r.jsx)(n.code,{children:"beforeError"})," hook is called\ninstead."]}),"\n"]})}),"\n",(0,r.jsx)(n.p,{children:"This hook is especially useful when you want to retrieve\nthe cause of a retry."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.setBeforeRetryHook((error, retryCount) => {\n  console.log(`Retrying [${retryCount}]: ${error.code}`)\n  // Retrying [1]: ERR_NON_2XX_3XX_RESPONSE\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersetafterresponsehook",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setAfterResponseHook()"})}),"\n",(0,r.jsx)(n.p,{children:"Each function should return the response. This is\nespecially useful when you want to refresh an access\ntoken."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When using the Stream API, this hook is ignored."}),"\n",(0,r.jsxs)(n.li,{children:["Calling the ",(0,r.jsx)(n.code,{children:"retryWithMergedOptions"})," function will\ntrigger ",(0,r.jsx)(n.code,{children:"beforeRetry"})," hooks. If the retry is successful,\nall remaining ",(0,r.jsx)(n.code,{children:"afterResponse"})," hooks will be called. In\ncase of an error, ",(0,r.jsx)(n.code,{children:"beforeRetry"})," hooks will be called\ninstead."]}),"\n"]})}),"\n",(0,r.jsxs)(n.p,{children:["Meanwhile, the ",(0,r.jsx)(n.code,{children:"init"}),", ",(0,r.jsx)(n.code,{children:"beforeRequest"})," , ",(0,r.jsx)(n.code,{children:"beforeRedirect"}),"\nas well as already executed ",(0,r.jsx)(n.code,{children:"afterResponse"})," hooks will be\nskipped."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.mutableDefaults(true)\n  .setBeforeRetry(error => {\n      // This will be called on `retryWithMergedOptions(...)`\n  })\n  .setAfterResponseHook((response, retryWithMergedOptions) => {\n    // Unauthorized\n    if (response.statusCode === 401) {\n      // Refresh the access token\n      const updatedOptions = {\n        headers: {\n          token: getNewToken()\n        }\n      };\n\n      // Update the defaults\n      instance.defaults.options.merge(updatedOptions)\n\n      // Make a new retry\n      return retryWithMergedOptions(updatedOptions)\n    }\n    \n    // No changes otherwise\n    return response\n  })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderagent",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.agent()"})}),"\n",(0,r.jsxs)(n.p,{children:["An object representing ",(0,r.jsx)(n.code,{children:"http"}),", ",(0,r.jsx)(n.code,{children:"https"})," and ",(0,r.jsx)(n.code,{children:"http2"})," keys\nfor ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/http.html#http_class_http_agent",children:(0,r.jsx)(n.code,{children:"http.Agent"})}),",\n",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/https.html#https_class_https_agent",children:(0,r.jsx)(n.code,{children:"https.Agent"})}),"\nand ",(0,r.jsx)(n.a,{href:"https://github.com/szmarczak/http2-wrapper#new-http2agentoptions",children:(0,r.jsx)(n.code,{children:"http2wrapper.Agent"})}),"\ninstance. This is necessary because a request to one\nprotocol might redirect to another. In such a scenario,\nHttpClient will switch over to the right protocol agent for\nyou. If a key is not present, it will default to a global\nagent."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\nimport HttpAgent, { HttpsAgent } from 'agentkeepalive'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.agent({ http: new HttpAgent(), https: new HttpsAgent() })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderhttp2",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.http2()"})}),"\n",(0,r.jsxs)(n.p,{children:["If set to ",(0,r.jsx)(n.code,{children:"true"}),", HttpClient will additionally accept\nHTTP2 requests."]}),"\n",(0,r.jsx)(n.p,{children:"It will choose either HTTP/1.1 or HTTP/2 depending on\nthe ALPN protocol:"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This option requires Node.js 15.10.0 or newer as\nHTTP/2 support on older Node.js versions is very\nbuggy."}),"\n",(0,r.jsxs)(n.li,{children:["Overriding ",(0,r.jsx)(n.code,{children:"options.request"})," will disable HTTP2\nsupport."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.http2(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderh2session",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.h2session()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the http2 session instance to be used by the request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { connect } from 'node:http2'\nimport { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\nconst session = connect('https://localhost:1234')\n\nbuilder.h2session(session)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderdecompress",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.decompress()"})}),"\n",(0,r.jsxs)(n.p,{children:["Decompress the response automatically. This will set\nthe ",(0,r.jsx)(n.code,{children:"accept-encoding"})," header to ",(0,r.jsx)(n.code,{children:"gzip, deflate, br"}),"\nunless you set it yourself. If this is disabled, a\ncompressed response is returned as a ",(0,r.jsx)(n.code,{children:"Buffer"}),". This\nmay be useful if you want to handle decompression\nyourself or stream the raw compressed data."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.decompress(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildertimeout",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.timeout()"})}),"\n",(0,r.jsxs)(n.p,{children:["Milliseconds to wait for the server to end the response\nbefore aborting the request with a timeout error\n(a.k.a. ",(0,r.jsx)(n.code,{children:"request"})," property). By default, there's no timeout."]}),"\n",(0,r.jsxs)(n.p,{children:["This also accepts an ",(0,r.jsx)(n.code,{children:"object"})," with the following fields to\nconstrain the duration of each phase of the request lifecycle:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lookup"})," starts when a socket is assigned and ends when the hostname has been resolved.\nDoes not apply when using a Unix domain socket."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"connect"})," starts when ",(0,r.jsx)(n.code,{children:"lookup"})," completes (or when the socket is assigned if lookup does not apply to the request) and ends when the socket is connected."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"secureConnect"})," starts when ",(0,r.jsx)(n.code,{children:"connect"})," completes and ends when the handshaking process completes (HTTPS only)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"socket"})," starts when the socket is connected. See ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/http.html#http_request_settimeout_timeout_callback",children:"request.setTimeout"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"response"})," starts when the request has been written to the socket and ends when the response headers are received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"send"})," starts when the socket is connected and ends with the request has been written to the socket."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"request"})," starts when the request is initiated and ends when the response's end event fires."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.timeout(2000)\n// or\nbuilder.timeout({\n  lookup: 2000,\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderbody",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.body()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the request body:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.body({\n  hello: 'world!'\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderform",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.form()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the request body as ",(0,r.jsx)(n.code,{children:"form"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.form({\n  hello: 'world!'\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderheader",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.header()"})}),"\n",(0,r.jsx)(n.p,{children:"Set a header of the request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.header('Content-Type', 'application/json')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersafeheader",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.safeHeader()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#httpclientbuilderheader",children:(0,r.jsx)(n.code,{children:"header()"})}),",\nbut if the header already exists it will not be overwritten:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder\n  .header('Content-Type', 'application/json')\n  .safeHeader('Content-Type', 'will-not-change')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderremoveheader",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.removeHeader()"})}),"\n",(0,r.jsx)(n.p,{children:"Remove the header of the request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder\n  .header('Content-Type', 'application/json')\n  .removeHeader('Content-Type')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderprefixurl",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.prefixUrl()"})}),"\n",(0,r.jsxs)(n.p,{children:["When specified, ",(0,r.jsx)(n.code,{children:"prefixUrl"})," will be prepended to ",(0,r.jsx)(n.code,{children:"url"}),".\nThe prefix can be any valid URL, either relative or absolute.\nA trailing slash ",(0,r.jsx)(n.code,{children:"/"})," is optional - one will be added\nautomatically:"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prefixUrl"})," will be ignored if the ",(0,r.jsx)(n.code,{children:"url"})," argument is\na URL instance."]}),"\n",(0,r.jsxs)(n.li,{children:["Leading slashes in ",(0,r.jsx)(n.code,{children:"input"})," are disallowed when using\nthis option to enforce consistency and avoid confusion.\nFor example, when the prefix URL is\n",(0,r.jsx)(n.code,{children:"https://example.com/foo"})," and the input is ",(0,r.jsx)(n.code,{children:"/bar"}),",\nthere's ambiguity whether the resulting URL would\nbecome ",(0,r.jsx)(n.code,{children:"https://example.com/foo/bar"})," or\n",(0,r.jsx)(n.code,{children:"https://example.com/bar"}),". The latter is used by browsers."]}),"\n",(0,r.jsxs)(n.li,{children:["You can change ",(0,r.jsx)(n.code,{children:"prefixUrl"})," using hooks as long as\nthe URL still includes the ",(0,r.jsx)(n.code,{children:"prefixUrl"}),". If the URL\ndoesn't include it anymore, it will throw."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.prefixUrl('https://athenna.io')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildermethod",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.method()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the request method:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.method('POST')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderurl",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.url()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the request url:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.url('https://athenna.io/api/v1')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildercookiejar",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.cookieJar()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the cookie jar of the request:"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If you provide this option, ",(0,r.jsx)(n.code,{children:"options.headers.cookie"}),"\nwill be overridden."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.cookieJar(new CookieJar())\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersignal",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.signal()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the signal of the request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\nconst abortController = new AbortController()\n\nbuild.signal(abortController.signal)\n\nsetTimeout(() => {\n  abortController.abort()\n}, 100)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderignoreinvalidcookies",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.ignoreInvalidCookies()"})}),"\n",(0,r.jsxs)(n.p,{children:["Ignore invalid cookies instead of throwing an\nerror. Only useful when the ",(0,r.jsx)(n.code,{children:"cookieJar"})," option has\nbeen set. Not recommended:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.ignoreInvalidCookies(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersearchparams",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.searchParams()"})}),"\n",(0,r.jsxs)(n.p,{children:["Query string that will be added to the request URL.\nThis will override the query string in ",(0,r.jsx)(n.code,{children:"url"}),". If you\nneed to pass in an array, you can do it using a\n",(0,r.jsx)(n.code,{children:"URLSearchParams"})," instance:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder\n  .searchParams({ hello: 'world!' })\n  .searchParams(new URLSearchParams([['key', 'a'], ['key', 'b']]))\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderqueryparams",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.queryParams()"})}),"\n",(0,r.jsxs)(n.p,{children:["Alias for ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#httpclientbuildersearchparams",children:(0,r.jsx)(n.code,{children:"searchParams()"})}),"\nmethod."]}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderdnslookup",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.dnsLookup()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the DNS lookup options of the request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.dnsLookup({\n  family: 6\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderdnscache",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.dnsCache()"})}),"\n",(0,r.jsxs)(n.p,{children:["An instance of ",(0,r.jsx)(n.a,{href:"https://github.com/szmarczak/cacheable-lookup",children:(0,r.jsx)(n.code,{children:"CacheableLookup"})}),"\nused for making DNS lookups. Useful when making lots of\nrequests to different ",(0,r.jsx)(n.strong,{children:"public"})," hostnames."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CacheableLookup"})," uses ",(0,r.jsx)(n.code,{children:"dns.resolver4(..)"})," and\n",(0,r.jsx)(n.code,{children:"dns.resolver6(...)"})," under the hood and fall backs to\n",(0,r.jsx)(n.code,{children:"dns.lookup(...)"})," when the first two fail, which may lead\nto additional delay:"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["This should stay disabled when making requests to\ninternal hostnames such as ",(0,r.jsx)(n.code,{children:"localhost"}),", ",(0,r.jsx)(n.code,{children:"database.local"}),"\netc."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import CacheableLookup from 'cacheable-lookup'\nimport { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.dnsCache(new CacheableLookup())\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildercontext",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.context()"})}),"\n",(0,r.jsxs)(n.p,{children:["User data. ",(0,r.jsx)(n.code,{children:"context"})," is shallow merged and enumerable.\nIf it contains non-enumerable properties they will NOT\nbe merged:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder\n  .setBeforeRequestHook(options => {\n    if (!options.context || !options.context.token) {\n        throw new Error('Token required')\n    }\n\n    options.headers.token = options.context.token\n  })\n  .context({ token: 'secret' })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderhooks",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.hooks()"})}),"\n",(0,r.jsx)(n.p,{children:"Hooks allow modifications during the request\nlifecycle. Hook functions may be async and are\nrun serially:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder, type Hooks } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst hooks: Hooks = {}\n\nbuilder.hooks(hooks)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderfollowredirect",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.followRedirect()"})}),"\n",(0,r.jsxs)(n.p,{children:["Defines if redirect responses should be followed\nautomatically. Note that if a ",(0,r.jsx)(n.code,{children:"303"})," is sent by\nthe server in response to any request type\n(",(0,r.jsx)(n.code,{children:"POST"}),", ",(0,r.jsx)(n.code,{children:"DELETE"}),", etc.), HttpClient will automatically\nrequest the resource pointed to in the location\nheader via ",(0,r.jsx)(n.code,{children:"GET"}),". This is in accordance with\n",(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7231#section-6.4.4",children:"the spec"}),".\nYou can optionally turn on this behavior also for\nother redirect codes - see ",(0,r.jsx)(n.code,{children:"methodRewriting"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.followRedirect(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderfollowredirects",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.followRedirects()"})}),"\n",(0,r.jsxs)(n.p,{children:["Alias for ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#httpclientbuilderfollowredirect",children:(0,r.jsx)(n.code,{children:"followRedirect()"})}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildermaxredirects",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.maxRedirects()"})}),"\n",(0,r.jsxs)(n.p,{children:["If exceeded, the request will be aborted and a\n",(0,r.jsx)(n.code,{children:"MaxRedirectsError"})," will be thrown:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.maxRedirects(5)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildercacheoptions",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.cacheOptions()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the cache options of the request\nfrom ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/http-cache-semantics",children:(0,r.jsx)(n.code,{children:"http-cache-semantics"})}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder, type CacheOptions } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst cacheOptions: CacheOptions = {\n  shared: true,\n  immutableMinTimeToLive: 1000,\n}\n\nbuilder.cacheOptions(cacheOptions)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildercache",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.cache()"})}),"\n",(0,r.jsx)(n.p,{children:"A cache adapter instance for storing cached response data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst cache = new Map()\nconst builder = new HttpClientBuilder()\n\nbuilder.cache(cache)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderthrowhttperrors",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.throwHttpErrors()"})}),"\n",(0,r.jsx)(n.p,{children:"Determines if an error is thrown for unsuccessful\nresponses."}),"\n",(0,r.jsxs)(n.p,{children:["If this is disabled, requests that encounter an error\nstatus code will be resolved with the ",(0,r.jsx)(n.code,{children:"response"})," instead\nof throwing. This may be useful if you are checking for\nresource availability and are expecting error responses:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.throwHttpErrors(false)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderusername",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.username()"})}),"\n",(0,r.jsx)(n.p,{children:"Username for Basic Authentication:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.username('jlenon7')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderpassword",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.password()"})}),"\n",(0,r.jsx)(n.p,{children:"Password for Basic Authentication:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.username('12345')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderallowgetbody",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.allowGetBody()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set this to ",(0,r.jsx)(n.code,{children:"true"})," to allow sending body for\nthe ",(0,r.jsx)(n.code,{children:"GET"})," method. However, the\n",(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7540#section-8.1.3",children:"HTTP/2 specification"}),"\nsays that ",(0,r.jsx)(n.code,{children:"An HTTP GET request includes request header fields and no payload body"}),",\ntherefore when using the HTTP/2 protocol this option will\nhave no effect. This option is only meant to interact with\nnon-compliant servers when you have no other choice."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7231#section-4.3.1",children:"RFC 7231"}),"\ndoesn't specify any particular behavior for the GET method\nhaving a payload, therefore ",(0,r.jsxs)(n.strong,{children:["it's considered an\n",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Anti-pattern",children:"anti-pattern"})]}),"."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.allowGetBody(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildermethodrewriting",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.methodRewriting()"})}),"\n",(0,r.jsxs)(n.p,{children:["Specifies if the HTTP request method should be\n",(0,r.jsxs)(n.a,{href:"https://tools.ietf.org/html/rfc7231#section-6.4",children:["rewritten as ",(0,r.jsx)(n.code,{children:"GET"})]}),"\non redirects."]}),"\n",(0,r.jsxs)(n.p,{children:["As the ",(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7231#section-6.4",children:"specification"}),"\nprefers to rewrite the HTTP method only on ",(0,r.jsx)(n.code,{children:"303"})," responses,\nthis is HttpClient's default behavior.\nSetting ",(0,r.jsx)(n.code,{children:"methodRewriting"})," to ",(0,r.jsx)(n.code,{children:"true"})," will also rewrite ",(0,r.jsx)(n.code,{children:"301"}),"\nand ",(0,r.jsx)(n.code,{children:"302"})," responses, as allowed by the spec. This is the\nbehavior followed by ",(0,r.jsx)(n.code,{children:"curl"})," and browsers."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["HttpClient never performs method rewriting on ",(0,r.jsx)(n.code,{children:"307"})," and\n",(0,r.jsx)(n.code,{children:"308"})," responses, as this is [explicitly prohibited by the\n",(0,r.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc7231#section-6.4.7",children:"specification"}),"."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.methodRewriting(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderdnslookupipversion",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.dnsLookupIpVersion()"})}),"\n",(0,r.jsx)(n.p,{children:"Indicates which DNS record family to use."}),"\n",(0,r.jsx)(n.p,{children:"Values:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"undefined"}),": IPv4 (if present) or IPv6"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"4"}),": Only IPv4"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"6"}),": Only IPv6"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.dnsLookupIpVersion(6)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderparsejson",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.parseJson()"})}),"\n",(0,r.jsx)(n.p,{children:"Define a function to parse JSON responses:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import Bourne from '@hapi/bourne'\nimport { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.parseJson(text => Bourne.parse(text))\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderstringifyjson",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.stringifyJson()"})}),"\n",(0,r.jsx)(n.p,{children:"Define a function to stringify JSON requests:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.stringifyJson(object => JSON.stringify(object))\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderretry",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.retry()"})}),"\n",(0,r.jsxs)(n.p,{children:["An object representing ",(0,r.jsx)(n.code,{children:"limit"}),", ",(0,r.jsx)(n.code,{children:"calculateDelay"}),",\n",(0,r.jsx)(n.code,{children:"methods"}),", ",(0,r.jsx)(n.code,{children:"statusCodes"}),", ",(0,r.jsx)(n.code,{children:"maxRetryAfter"})," and\n",(0,r.jsx)(n.code,{children:"errorCodes"})," fields for maximum retry count, retry\nhandler, allowed methods, allowed status codes,\nmaximum ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After",children:(0,r.jsx)(n.code,{children:"Retry-After"})}),"\ntime and allowed error codes."]}),"\n",(0,r.jsxs)(n.p,{children:["Delays between retries counts with function\n",(0,r.jsx)(n.code,{children:"1000 * Math.pow(2, retry) + Math.random() * 100"}),",\nwhere ",(0,r.jsx)(n.code,{children:"retry"})," is attempt number (starts from 1)."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"calculateDelay"})," property is a ",(0,r.jsx)(n.code,{children:"function"})," that\nreceives an object with ",(0,r.jsx)(n.code,{children:"attemptCount"}),", ",(0,r.jsx)(n.code,{children:"retryOptions"}),",\n",(0,r.jsx)(n.code,{children:"error"})," and ",(0,r.jsx)(n.code,{children:"computedValue"})," properties for current retry\ncount, the retry options, error and default computed value.\nThe function must return a delay in milliseconds\n(or a Promise resolving with it) (",(0,r.jsx)(n.code,{children:"0"})," return value cancels\nretry)."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, it retries ",(0,r.jsx)(n.em,{children:"only"})," on the specified methods,\nstatus codes, and on these network errors:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ETIMEDOUT"}),": One of the ",(0,r.jsx)(n.a,{href:"#timeout",children:"timeout"})," limits were reached."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ECONNRESET"}),": Connection was forcibly closed by a peer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EADDRINUSE"}),": Could not bind to any free port."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ECONNREFUSED"}),": Connection was refused by the server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EPIPE"}),": The remote side of the stream being written has been closed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ENOTFOUND"}),": Couldn't resolve the hostname to an IP address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ENETUNREACH"}),": No internet connection."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EAI_AGAIN"}),": DNS lookup timed out."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"maxRetryAfter"})," is set to ",(0,r.jsx)(n.code,{children:"undefined"}),", it will use\n",(0,r.jsx)(n.code,{children:"options.timeout"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After",children:(0,r.jsx)(n.code,{children:"Retry-After"})}),"\nheader is greater than ",(0,r.jsx)(n.code,{children:"maxRetryAfter"}),", it will cancel the\nrequest."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.retry({\n  limit: 5,\n  calculateDelay: ({ attemptCount }) => {\n    return attemptCount * 1000\n  },\n  methods: ['GET'],\n  statusCodes: [[100, 199], 429, 404],\n  maxRetryAfter: 5000,\n  errorCodes: ['ETIMEDOUT'],\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderretrystrategy",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.retryStrategy()"})}),"\n",(0,r.jsx)(n.p,{children:"This method is just an alias to configure your own\nretry strategy."}),"\n",(0,r.jsx)(n.p,{children:"The strategy function needs to return the delay\nbetween the execution count of each request, if the\nstrategy function returns 0, the retry is canceled:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.retryStrategy((error, execCount, retryObject) => {\n  if (execCount === 3) {\n    return 0\n  }\n\n  return 2000\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderlocaladdress",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.localAddress()"})}),"\n",(0,r.jsxs)(n.p,{children:["From ",(0,r.jsx)(n.code,{children:"http.RequestOptions"}),". The IP address used to send\nthe request from."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.localAddress('192.168.0.1')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildercreateconnection",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.createConnection()"})}),"\n",(0,r.jsxs)(n.p,{children:["Define a function used to retrieve a ",(0,r.jsx)(n.code,{children:"net.Socket"})," instance\nwhen the ",(0,r.jsx)(n.code,{children:"agent"})," option is not used."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.createConnection(options => {\n  return new net.Socket(options)\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderhttps",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.https()"})}),"\n",(0,r.jsxs)(n.p,{children:["Define options to make ",(0,r.jsx)(n.code,{children:"https"})," requests:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.https({\n  rejectUnauthorized: false\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderencoding",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.encoding()"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings",children:"Encoding"}),"\nto be used on ",(0,r.jsx)(n.code,{children:"setEncoding"})," of the response data."]}),"\n",(0,r.jsxs)(n.p,{children:["To get a ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/buffer.html",children:(0,r.jsx)(n.code,{children:"Buffer"})}),", you\nneed to set ",(0,r.jsx)(n.code,{children:"responseType"})," to ",(0,r.jsx)(n.code,{children:"buffer"})," instead. Don't set\nthis option to ",(0,r.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["This doesn't affect streams! Instead, you need to do\n",(0,r.jsx)(n.code,{children:"HttpClientBuilder.stream(...).setEncoding(encoding)"}),"."]}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.encoding('utf8')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderresolvebodyonly",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.resolveBodyOnly()"})}),"\n",(0,r.jsxs)(n.p,{children:["When set to ",(0,r.jsx)(n.code,{children:"true"})," the promise will return the response\nbody instead of the response object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.resolveBodyOnly(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderresponsetype",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.responseType()"})}),"\n",(0,r.jsxs)(n.p,{children:["The parsing method. The promise also has ",(0,r.jsx)(n.code,{children:".text()"}),",\n",(0,r.jsx)(n.code,{children:".json()"})," and ",(0,r.jsx)(n.code,{children:".buffer()"})," methods which return another\nHttClient promise for the parsed body."]}),"\n",(0,r.jsxs)(n.p,{children:["It's like setting the options to ",(0,r.jsx)(n.code,{children:"{responseType: 'json', resolveBodyOnly: true}"}),"\nbut without affecting the main HttpClient promise."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When using streams, this option is ignored."}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.responseType('json')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderpagination",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.pagination()"})}),"\n",(0,r.jsx)(n.p,{children:"Set pagination options to your request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.pagination({ countLimit: 100 })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildersethost",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.setHost()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the host option:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.setHost(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuildermaxheadersize",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.maxHeaderSize()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the maxHeaderSize option."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.maxHeaderSize(1000)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderenableunixsockets",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.enableUnixSockets()"})}),"\n",(0,r.jsx)(n.p,{children:"Set the enableUnixSockets option."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nbuilder.enableUnixSockets(true)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderstream",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.stream()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute the request and return as stream:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst stream = await builder.stream()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderpaginate",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.paginate()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute the request and return as paginated response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst paginatedResponse = await builder.paginate()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderrequest",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.request()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute the request using all the options defined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.request()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderget",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.get()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"GET"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.get()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderpost",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.post()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"POST"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.post()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderput",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.put()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"PUT"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.put()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderpatch",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.patch()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"PATCH"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.patch()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderdelete",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.delete()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"DELETE"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.delete()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"httpclientbuilderhead",children:(0,r.jsx)(n.code,{children:"HttpClientBuilder.head()"})}),"\n",(0,r.jsxs)(n.p,{children:["Execute a ",(0,r.jsx)(n.code,{children:"HEAD"})," request using all the options defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientBuilder } from '@athenna/common'\n\nconst builder = new HttpClientBuilder()\n\nconst response = await builder.head()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is",children:"Is"}),"\n",(0,r.jsx)(n.h4,{id:"iskindof",children:(0,r.jsx)(n.code,{children:"Is::kindOf()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is equals to some type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.kindOf('string', 'string') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ismac",children:(0,r.jsx)(n.code,{children:"Is::Mac()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the current OS is a MacOS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Mac() // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"islinux",children:(0,r.jsx)(n.code,{children:"Is::Linux()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the current OS is a distribution of\nLinux:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Linux() // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iswindows",children:(0,r.jsx)(n.code,{children:"Is::Windows()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the current OS is a Windows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Windows() // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ismodule",children:(0,r.jsx)(n.code,{children:"Is::Module()"})}),"\n",(0,r.jsxs)(n.p,{children:["Validate if a path or ",(0,r.jsx)(n.code,{children:"File"})," instance is a module:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is, File } from '@athenna/common'\n\nIs.Module('./hello.js') // true\nIs.Module('./hello.ts') // true\nIs.Module('./hello.json') // false\n\nIs.Module(new File('./hello.js')) // true\nIs.Module(new File('./hello.ts')) // true\nIs.Module(new File('./hello.json')) // false\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isuuid",children:(0,r.jsx)(n.code,{children:"Is::Uuid()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid UUID v4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Uuid('adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11') // true\nIs.Uuid('adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', { prefix: 'adm' }) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isdefined",children:(0,r.jsx)(n.code,{children:"Is::Defined()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is defined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Defined('Hello World') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isjson",children:(0,r.jsx)(n.code,{children:"Is::Json()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid JSON string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Json('{ \"name\": \"Jo\xe3o Lenon\" }') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isip",children:(0,r.jsx)(n.code,{children:"Is::Ip()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid IP address:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Ip('192.168.0.1') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isempty",children:(0,r.jsx)(n.code,{children:"Is::Empty()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is empty:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Empty(undefined) // true\nIs.Empty('') // true\nIs.Empty([]) // true\nIs.Empty({}) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iscep",children:(0,r.jsx)(n.code,{children:"Is::Cep()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid Brazil CEP:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Cep('85869-676') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iscpf",children:(0,r.jsx)(n.code,{children:"Is::Cpf()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid Brazil Cpf:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Cpf('208.464.590-51') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iscnpj",children:(0,r.jsx)(n.code,{children:"Is::Cnpj()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is a valid Brazil Cnpj:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Cnpj('71.151.950/0001-65') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isasync",children:(0,r.jsx)(n.code,{children:"Is::Async()"})}),"\n",(0,r.jsx)(n.p,{children:"Verify if a function is async:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Async(async () => {}) // true\nIs.Async(async function () {}) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isundefined",children:(0,r.jsx)(n.code,{children:"Is::Undefined()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is undefined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Undefined(undefined) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isnull",children:(0,r.jsx)(n.code,{children:"Is::Null()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is null:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Null(null) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isboolean",children:(0,r.jsx)(n.code,{children:"Is::Boolean()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is boolean:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Boolean(true) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isbuffer",children:(0,r.jsx)(n.code,{children:"Is::Buffer()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is Buffer:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Buffer(new Buffer()) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isnumber",children:(0,r.jsx)(n.code,{children:"Is::Number()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is number:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Number(10) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isstring",children:(0,r.jsx)(n.code,{children:"Is::String()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.String('Athenna is the best!') // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isobject",children:(0,r.jsx)(n.code,{children:"Is::Object()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is Object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Object({ hello: 'world!' }) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isdate",children:(0,r.jsx)(n.code,{children:"Is::Date()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is Date:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Date(new Date()) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isarray",children:(0,r.jsx)(n.code,{children:"Is::Array()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Array([1, 2, 3, 4, 5]) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isregexp",children:(0,r.jsx)(n.code,{children:"Is::Regexp()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is Regexp:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Regexp(new RegExp()) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iserror",children:(0,r.jsx)(n.code,{children:"Is::Error()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is error:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Error(new Error()) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isexception",children:(0,r.jsx)(n.code,{children:"Is::Exception()"})}),"\n",(0,r.jsxs)(n.p,{children:["Validate if the value is ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#exception",children:(0,r.jsx)(n.code,{children:"Exception"})}),"\nor any variation that extends from it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is, Exception } from '@athenna/common'\n\nIs.Exception(new Error()) // false\nIs.Exception(new Exception()) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isclass",children:(0,r.jsx)(n.code,{children:"Is::Class()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is class:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Class(Is) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isfloat",children:(0,r.jsx)(n.code,{children:"Is::Float()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is float:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.Float(10.5) // true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isarrayofobjects",children:(0,r.jsx)(n.code,{children:"Is::ArrayOfObjects()"})}),"\n",(0,r.jsx)(n.p,{children:"Validate if the value is an array of objects:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is } from '@athenna/common'\n\nIs.ArrayOfObjects([{}, {}, {}]) // true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"json",children:"Json"}),"\n",(0,r.jsx)(n.h4,{id:"jsonbuilder",children:(0,r.jsx)(n.code,{children:"Json::builder()"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a new instance of ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#object-builder",children:"ObjectBuilder"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst builder = Json.builder({ referencedValues: false })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsoncopy",children:(0,r.jsx)(n.code,{children:"Json::copy()"})}),"\n",(0,r.jsx)(n.p,{children:"Deep copy any object without memory reference:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst object = { name: 'Jo\xe3o Lenon' }\nconst copiedObject = Json.copy(object)\n\nobject.name = 'Victor Tesoura'\n\nconsole.log(object.name === copiedObject.name) // false\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsongetjson",children:(0,r.jsx)(n.code,{children:"Json::getJson()"})}),"\n",(0,r.jsx)(n.p,{children:"Find all JSON values inside a string and return it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Json } from \'@athenna/common\'\n\nconst string = \'Hello { "name": "Jo\xe3o Lenon" }\'\nconst arrayOfFoundJson = Json.getJson(string)\n// [\'{"name":"Jo\xe3o Lenon"}\']\n'})}),"\n",(0,r.jsx)(n.h4,{id:"jsonparse",children:(0,r.jsx)(n.code,{children:"Json::parse()"})}),"\n",(0,r.jsxs)(n.p,{children:["Safe parse a JSON string. If the JSON is not valid,\nreturns ",(0,r.jsx)(n.code,{children:"null"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst string = 'Hello { \"name\": \"Lenon\" }'\nconst json = Json.parse(string) // null\n\nconsole.log('{ \"name\": \"Lenon\" }') // { name: 'Lenon' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsonobservechanges",children:(0,r.jsx)(n.code,{children:"Json::observeChanges()"})}),"\n",(0,r.jsx)(n.p,{children:"Observe any change done inside an object and execute some closure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst object = { name: 'Lenon' }\n\nJson.observeChanges(object, (value) => {\n  console.log('Object changed!', value)\n})\n\nobject.name = 'Jo\xe3o Lenon'\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsonfillable",children:(0,r.jsx)(n.code,{children:"Json::fillable()"})}),"\n",(0,r.jsx)(n.p,{children:"Remove all keys from data that is not inside the array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst data = {\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n  role: 'admin',\n  deletedAt: new Date()\n}\n\nconst parsedData = Json.fillable(data, ['name', 'age'])\n// { name: 'Jo\xe3o Lenon', age: 22 }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsonget",children:(0,r.jsx)(n.code,{children:"Json::get()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the object properties using dot notation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Json } from '@athenna/common'\n\nconst object = {\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n  role: 'admin',\n  deletedAt: new Date(),\n  configs: {\n    theme: 'dark',\n    language: 'en'\n  }\n}\n\nJson.get(object, 'name') // Jo\xe3o Lenon\nJson.get(object, 'configs.theme') // dark\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsonomit",children:(0,r.jsx)(n.code,{children:"Json::omit()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all keys from an object omitting selected ones:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const omitted = Json.omit({ name: 'Lenon', age: 23 }, ['name'])\n\nconsole.log(omitted) // { age: 23 }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"jsonpick",children:(0,r.jsx)(n.code,{children:"Json::pick()"})}),"\n",(0,r.jsx)(n.p,{children:"Pick only selected keys from an object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const picked = Json.pick({ name: 'Lenon', age: 23 }, ['name'])\n\nconsole.log(picked) // { name: 'Lenon' }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"module",children:"Module"}),"\n",(0,r.jsx)(n.h4,{id:"moduleget",children:(0,r.jsx)(n.code,{children:"Module::get()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the default module or the first exported module of a file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="default.ts"',children:"export default {\n  name: 'Jo\xe3o Lenon'\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="object.ts"',children:"export const person = {\n  name: 'Jo\xe3o Lenon'\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nawait Module.get(import('./default.js')) // { name: 'Jo\xe3o Lenon' }\nawait Module.get(import('./object.js')) // { name: 'Jo\xe3o Lenon' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetall",children:(0,r.jsx)(n.code,{children:"Module::getAll()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all exported modules of a path and return as array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst modules = [import('./object.js'), import('./default.js')]\n\nawait Module.getAll(modules)\n// [{ name: 'Jo\xe3o Lenon' }, { name: 'Jo\xe3o Lenon' }]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetfrom",children:(0,r.jsx)(n.code,{children:"Module::getFrom()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#moduleget",children:(0,r.jsx)(n.code,{children:"Module::get()"})}),"\nmethod, but import from a path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nawait Module.getFrom('./default.js') // { name: 'Jo\xe3o Lenon' }\nawait Module.getFrom('./object.js') // { name: 'Jo\xe3o Lenon' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetallfrom",children:(0,r.jsx)(n.code,{children:"Module::getAllFrom()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#modulegetall",children:(0,r.jsx)(n.code,{children:"Module::getAll()"})}),"\nmethod, but import from a path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst paths = ['./object.js', './default.js']\n\nawait Module.getAllFrom(paths)\n// [{ name: 'Jo\xe3o Lenon' }, { name: 'Jo\xe3o Lenon' }]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetwithalias",children:(0,r.jsx)(n.code,{children:"Module::getWithAlias()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the default module or the first exported module\nof a file with alias:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="MyService.ts"',children:"export default class MyService {}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst modules = [import('./MyService.js')]\nconst subAlias = 'App/Services'\n\nawait Module.getWithAlias(modules, subAlias)\n// { alias: 'App/Services/MyService', module: [class MyService] }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetallwithalias",children:(0,r.jsx)(n.code,{children:"Module::getAllWithAlias()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all exported modules of a path and return as array with alias:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst modules = [import('./MyService.js')]\nconst subAlias = 'App/Services'\n\nawait Module.getAllWithAlias(modules, subAlias)\n// [{ alias: 'App/Services/MyService', module: { name: 'Jo\xe3o Lenon' } }]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetfromwithalias",children:(0,r.jsx)(n.code,{children:"Module::getFromWithAlias()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#modulegetwithalias",children:(0,r.jsx)(n.code,{children:"Module::getWithAlias()"})}),"\nmethod, but import from a path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst paths = ['./MyService.js']\nconst subAlias = 'App/Services'\n\nawait Module.getAllWithAlias(paths, subAlias)\n// [{ alias: 'App/Services/MyService', module: { name: 'Jo\xe3o Lenon' } }]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetallfromwithalias",children:(0,r.jsx)(n.code,{children:"Module::getAllFromWithAlias()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#modulegetallwithalias",children:(0,r.jsx)(n.code,{children:"Module::getAllWithAlias()"})}),"\nmethod, but import from a path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst paths = ['./MyService.js']\nconst subAlias = 'App/Services'\n\nawait Module.getAllWithAlias(paths, subAlias)\n// [{ alias: 'App/Services/MyService', module: { name: 'Jo\xe3o Lenon' } }]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulegetalljsfilesfrom",children:(0,r.jsx)(n.code,{children:"Module::getAllJSFilesFrom()"})}),"\n",(0,r.jsxs)(n.p,{children:["Get all the ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#pathext",children:(0,r.jsx)(n.code,{children:"Path.ext()"})}),"\nfiles from a path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { File, Path, Module } from '@athenna/common'\n\nconst files: File[] = await Module.getAllJSFilesFrom(Path.app())\n"})}),"\n",(0,r.jsx)(n.h4,{id:"moduleimport",children:(0,r.jsx)(n.code,{children:"Module::import()"})}),"\n",(0,r.jsx)(n.p,{children:"Import a full path using the path href to ensure\ncompatibility between OS's:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst module = await Module.import('./MyService.js')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulesafeimport",children:(0,r.jsx)(n.code,{children:"Module::safeImport()"})}),"\n",(0,r.jsxs)(n.p,{children:["Same as ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#moduleimport",children:(0,r.jsx)(n.code,{children:"Module::import()"})}),"\nmethod but return null if the module does not exist:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst module = await Module.safeImport('./notFound.js')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"moduleresolve",children:(0,r.jsx)(n.code,{children:"Module::resolve()"})}),"\n",(0,r.jsx)(n.p,{children:"Resolve the module path by meta url and import it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst module = await Module.resolve('./MyService.js', import.meta.url)\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can add the following options to it as third argument:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const module = './MyService.js'\nconst parentURL = import.meta.url\n\nconst module = await Module.resolve(module, parentURL, {\n  // Automatically import the module instead of returning\n  // the module path resolved.\n  import: true,\n\n  // Automatically get the imported module using `Module.get()`\n  // method.\n  getModule: true\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulecreatedirname",children:(0,r.jsx)(n.code,{children:"Module::createDirname()"})}),"\n",(0,r.jsxs)(n.p,{children:["Crete the old ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/modules.html#__dirname",children:(0,r.jsx)(n.code,{children:"__dirname"})}),"\nproperty:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst __dirname = Module.createDirname(import.meta.url)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulecreatefilename",children:(0,r.jsx)(n.code,{children:"Module::createFilename()"})}),"\n",(0,r.jsxs)(n.p,{children:["Crete the old ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/modules.html#__filename",children:(0,r.jsx)(n.code,{children:"__filename"})}),"\nproperty:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst __filename = Module.createFilename(import.meta.url)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"modulecreaterequire",children:(0,r.jsx)(n.code,{children:"Module::createRequire()"})}),"\n",(0,r.jsxs)(n.p,{children:["Crete the old ",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/modules.html#requireid",children:(0,r.jsx)(n.code,{children:"require()"})}),"\nfunction:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@athenna/common'\n\nconst require = Module.createRequire(import.meta.url)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"number",children:"Number"}),"\n",(0,r.jsx)(n.h4,{id:"numbergethigher",children:(0,r.jsx)(n.code,{children:"Number::getHigher()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the higher number of an array of numbers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst higher = Number.getHigher([1, 2, 3, 4, 5]) // 5\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numbergetkmradius",children:(0,r.jsx)(n.code,{children:"Number::getKmRadius()"})}),"\n",(0,r.jsx)(n.p,{children:"Get km radius between two coordinates:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst centerCord = { \n  latitude: -25503207, \n  longitude: -545390592 \n}\n\nconst pointCord = { \n  latitude: -254957901, \n  longitude: -545671577 \n}\n\nconst radius = Number.getKmRadius(centerCord, pointCord)\n// 5338.683217695541\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numbergetlower",children:(0,r.jsx)(n.code,{children:"Number::getLower()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the lower number of an array of numbers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst lower = Number.getLower([1, 2, 3, 4, 5]) // 1\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numberextractnumber",children:(0,r.jsx)(n.code,{children:"Number::extractNumber()"})}),"\n",(0,r.jsx)(n.p,{children:"Extract all numbers inside a string and return as\na unique number:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst string = 'Hello 123 World 456'\nconst number = Number.extractNumber(string) // 123456\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numberextractnumbers",children:(0,r.jsx)(n.code,{children:"Number::extractNumbers()"})}),"\n",(0,r.jsx)(n.p,{children:"Extract all numbers inside a string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst string = 'Hello 123 World 456'\nconst numbers = Number.extractNumbers(string) // ['123', '456']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numberargsaverage",children:(0,r.jsx)(n.code,{children:"Number::argsAverage()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the average of all numbers in function arguments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst average = Number.argsAverage(1, 2, 3, 4, 5) // 3\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numberarrayaverage",children:(0,r.jsx)(n.code,{children:"Number::arrayAverage()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the average of all numbers in an array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst average = Number.argsAverage([1, 2, 3, 4, 5]) // 3\n"})}),"\n",(0,r.jsx)(n.h4,{id:"numberrandomintfrominterval",children:(0,r.jsx)(n.code,{children:"Number::randomIntFromInterval()"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a random integer number between two numbers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Number } from '@athenna/common'\n\nconst random = Number.randomIntFromInterval(1, 10) // 5\n"})}),"\n",(0,r.jsx)(n.h3,{id:"objectbuilder",children:"ObjectBuilder"}),"\n",(0,r.jsx)(n.h4,{id:"new-objectbuilder",children:(0,r.jsx)(n.code,{children:"new ObjectBuilder()"})}),"\n",(0,r.jsx)(n.p,{children:"Create a new instance of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder({ \n  // Dont create memory referenced values.\n  referencedValues: false,\n  // Dont ignore null values when calling `set()` method.\n  ignoreNull: false,\n  // Ignore undefined values when calling `set()` method.\n  ignoreUndefined: true,\n  // Default value to set if value is undefined on calling `set()` method.\n  defaultValue: 'Hello World' \n})\n\nconst key = 'name'\nconst value = 'Jo\xe3o Lenon'\nconst defaultValue = 'User Name'\n\nbuilder.set(key, value, defaultValue)\nconsole.log(builder.get(key)) // Jo\xe3o Lenon\n\nbuilder.set(key, undefined)\nconsole.log(builder.get(key)) // Hello World\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderset",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.set()"})}),"\n",(0,r.jsx)(n.p,{children:"Set a value to the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Jo\xe3o Lenon', age: 22, options: { role: 'admin' } })\n\nconsole.log(builder.get())\n// { name: 'Jo\xe3o Lenon', age: 22, options: { role: 'admin' } }\n"})}),"\n",(0,r.jsx)(n.p,{children:"Set a value to the object builder using dot notation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\nconst defaultValue = null\n\nbuilder.set('name', 'Jo\xe3o Lenon', defaultValue)\nbuilder.set('age', 22, defaultValue)\nbuilder.set('deletedAt', undefined, defaultValue)\nbuilder.set('options.role', 'admin', defaultValue)\n\nconsole.log(builder.get())\n// { name: 'Jo\xe3o Lenon', age: 22, deletedAt: null, options: { role: 'admin' } }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderdelete",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.delete()"})}),"\n",(0,r.jsx)(n.p,{children:"Delete a value from the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\nbuilder.delete('name')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderget",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.get()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the value of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon', options: { role: 'admin' } })\n\nconsole.log(builder.get('name')) // Lenon\nconsole.log(builder.get('options.role')) // admin\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderkeys",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.keys()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all the keys of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nconsole.log(builder.keys()) // ['name']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuildervalues",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.values()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all the values of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nconsole.log(builder.values()) // ['Lenon']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderentries",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.entries()"})}),"\n",(0,r.jsx)(n.p,{children:"Get all the entries of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nconsole.log(builder.entries()) // [['name', 'Lenon']]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderforeachkey",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.forEachKey()"})}),"\n",(0,r.jsx)(n.p,{children:"Iterate over all the keys of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nbuilder.forEachKey((key) => {\n  console.log(key) // name\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderforeachvalue",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.forEachValue()"})}),"\n",(0,r.jsx)(n.p,{children:"Iterate over all the values of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nbuilder.forEachValue((value) => {\n  console.log(value) // Lenon\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"objectbuilderforeachentry",children:(0,r.jsx)(n.code,{children:"ObjectBuilder.forEachEntry()"})}),"\n",(0,r.jsx)(n.p,{children:"Iterate over all the entries of the object builder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nbuilder.forEachEntry(([key, value]) => {\n  console.log(key, value) // name Lenon\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"objectbuilderis--objectbuilderisnot",children:[(0,r.jsx)(n.code,{children:"ObjectBuilder.is()"})," & ",(0,r.jsx)(n.code,{children:"ObjectBuilder.isNot()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if the object key path is or not the same value:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nbuilder.is('name', 'Lenon') // true\nbuilder.isNot('name', 'Lenon') // false\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"objectbuilderexists--objectbuildernotexists",children:[(0,r.jsx)(n.code,{children:"ObjectBuilder.exists()"})," & ",(0,r.jsx)(n.code,{children:"ObjectBuilder.notExists()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if the object key path exists or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon' })\n\nbuilder.exists('name') // true\nbuilder.notExists('name') // false\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"objectbuilderexistsall--objectbuildernotexistsall",children:[(0,r.jsx)(n.code,{children:"ObjectBuilder.existsAll()"})," & ",(0,r.jsx)(n.code,{children:"ObjectBuilder.notExistsAll()"})]}),"\n",(0,r.jsx)(n.p,{children:"Verify if all the object key paths exists or not:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ObjectBuilder } from '@athenna/common'\n\nconst builder = new ObjectBuilder()\n\nbuilder.set({ name: 'Lenon', age: 22 })\n\nbuilder.existsAll(['name', 'age']) // true\nbuilder.notExistsAll('name', 'age') // false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.h4,{id:"optionscreate",children:(0,r.jsx)(n.code,{children:"Options::create()"})}),"\n",(0,r.jsx)(n.p,{children:"Creates an option object with default values:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Options } from '@athenna/common'\n\ntype Options = {\n  opts1?: boolean\n  opts2?: string\n}\n\nfunction doSomething(options: Options = {}) {\n  options = Options.create(options, {\n    opts1: true,\n    opts2: 'Hello World'\n  }) // { opts1: false, opts2: 'Hello World' }\n}\n\ndoSomething({ opts1: false })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"optionsbind",children:(0,r.jsx)(n.code,{children:"Options::bind()"})}),"\n",(0,r.jsx)(n.p,{children:"Return a closure of the object with the same object\ninstance binded on it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Options } from '@athenna/common'\n\nclass Person {\n  constructor(public name: string) {}\n\n  greet() {\n    console.log(`Hello ${this.name}`)\n  }\n}\n\nconst closure = Options.bind(new Person('Jo\xe3o'), 'greet')\n\nclosure() // Hello Jo\xe3o\n"})}),"\n",(0,r.jsx)(n.h4,{id:"optionswhendefined",children:(0,r.jsx)(n.code,{children:"Options.whenDefined()"})}),"\n",(0,r.jsx)(n.p,{children:"Execute some closure only when something is defined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Is, Options } from '@athenna/common'\n\nOptions.whenDefined('Helloo', (statement) => {\n  console.log(statement) // Helloo\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parser",children:"Parser"}),"\n",(0,r.jsx)(n.h4,{id:"parserstringtoarray",children:(0,r.jsx)(n.code,{children:"Parser::stringToArray()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a string to an array:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst string = 'hello-world-!'\nconst separator = '-'\n\nconst array = Parser.stringToArray(string, separator)\n// ['hello', 'world', '!']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserarraytostring",children:(0,r.jsx)(n.code,{children:"Parser::arrayToString()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse an array of strings to a string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst array = ['hello', 'world', '!']\nconst string = Parser.arrayToString(array, { separator: '-' })\n// 'hello-world-!'\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserstringtonumber",children:(0,r.jsx)(n.code,{children:"Parser::stringToNumber()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a string to a integer or float number:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst integer = Parser.stringToNumber('12345')\n// 12345\n\nconst float = Parser.stringToNumber('100.000,000000')\n// 100000000000\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can also set that the string is a coordinate to force\nparsing to a float:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst isCoordinate = true\nconst float = Parser.stringToNumber('15,23456', isCoordinate)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserjsontoformdata",children:(0,r.jsx)(n.code,{children:"Parser::jsonToFormData()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse an object to form data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst formData = Parser.jsonToFormData({\n  name: 'Jo\xe3o Lenon',\n  age: 22,\n})\n// &name=Jo\xe3o%20Lenon&age=22\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserformdatatojson",children:(0,r.jsx)(n.code,{children:"Parser::formDataToJson()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse form data to an object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst json = Parser.formDataToJson('&name=Jo\xe3o%20Lenon&age=22')\n// { name: 'Jo\xe3o Lenon', age: '22' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserlinktohref",children:(0,r.jsx)(n.code,{children:"Parser::linkToHref()"})}),"\n",(0,r.jsxs)(n.p,{children:["Parse all links inside the string to HTML link with ",(0,r.jsx)(n.code,{children:"a"})," tag:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst string = 'Visit my website https://athenna.io'\nconst html = Parser.linkToHref(string)\n// Visit my website <a href=\"https://athenna.io\">https://athenna.io</a>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parsersizetobyte",children:(0,r.jsx)(n.code,{children:"Parser::sizeToByte()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a number to byte format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst size = Parser.sizeToByte(1024)\n// 1.00 KB\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserbytetosize",children:(0,r.jsx)(n.code,{children:"Parser::byteToSize()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a byte to number format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst size = Parser.byteToSize('1.00 KB')\n// 1024\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parsertimetoms",children:(0,r.jsx)(n.code,{children:"Parser::timeToMs()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a time to milliseconds:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst ms = Parser.timeToMs('1s')\n// 1000\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parsermstotime",children:(0,r.jsx)(n.code,{children:"Parser::msToTime()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse milliseconds to time:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst ms = Parser.msToTime(1000)\n// 1s\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserstatuscodetoreason",children:(0,r.jsx)(n.code,{children:"Parser::statusCodeToReason()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a status code to a reason string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst reason = Parser.statusCodeToReason(200)\n// OK\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserreasontostatuscode",children:(0,r.jsx)(n.code,{children:"Parser::reasonToStatusCode()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse reason to a status code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst statusCode = Parser.reasonToStatusCode('OK')\n// 200\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserdburltoconnectionobj",children:(0,r.jsx)(n.code,{children:"Parser::dbUrlToConnectionObj()"})}),"\n",(0,r.jsx)(n.p,{children:"Parses a database url to a connection object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst url = 'mysql://user:pass@localhost:3306/database?hello=true'\nconst connection = Parser.dbUrlToConnectionObj(url)\n// { \n//    protocol: 'mysql', \n//    user: 'user', \n//    password: 'pass', \n//    host: 'localhost', \n//    port: 3306, \n//    database: 'database', \n//    options: { hello: 'true' } \n// }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserconnectionobjtodburl",children:(0,r.jsx)(n.code,{children:"Parser::connectionObjToDbUrl()"})}),"\n",(0,r.jsx)(n.p,{children:"Parses a connection object to a database url:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst connectionObj = { \n   protocol: 'mysql', \n   user: 'user', \n   password: 'pass', \n   host: 'localhost', \n   port: 3306, \n   database: 'database', \n   options: { hello: 'true' } \n}\n\nconst url = Parser.connectionObjToDbUrl(connectionObj)\n// mysql://user:pass@localhost:3306/database?hello=true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserobjecttobuilder",children:(0,r.jsx)(n.code,{children:"Parser::objectToBuilder()"})}),"\n",(0,r.jsxs)(n.p,{children:["Parse an object to an ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#object-builder",children:(0,r.jsx)(n.code,{children:"ObjectBuilder"})})," instance:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst object = { name: 'Jo\xe3o Lenon', age: 22 }\nconst builder = Parser.objectToBuilder(object)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserarrayobjecttoarraybuilder",children:(0,r.jsx)(n.code,{children:"Parser::arrayObjectToArrayBuilder()"})}),"\n",(0,r.jsxs)(n.p,{children:["Parse an array of objects to an array of ",(0,r.jsx)(n.a,{href:"/docs/the-basics/helpers#object-builder",children:(0,r.jsx)(n.code,{children:"ObjectBuilder"})})," instances:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst array = [{ name: 'Jo\xe3o Lenon', age: 22 }]\nconst builders = Parser.arrayObjectToArrayBuilder(array)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parserobjecttoyamlstring",children:(0,r.jsx)(n.code,{children:"Parser::objectToYamlString()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse an object to a YAML string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst object = { version: 1 }\nconst yaml = Parser.objectToYamlString(object) // 'version: 1'\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parseryamlstringtoobject",children:(0,r.jsx)(n.code,{children:"Parser::yamlStringToObject()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a YAML string to object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Parser } from '@athenna/common'\n\nconst yaml = 'version: 1' \nconst object = Parser.yamlStringToObject(yaml) // { version: 1 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"path",children:"Path"}),"\n",(0,r.jsx)(n.h4,{id:"pathdirs",children:(0,r.jsx)(n.code,{children:"Path::dirs"})}),"\n",(0,r.jsxs)(n.p,{children:["An object with all base directories that ",(0,r.jsx)(n.code,{children:"Path"})," uses to create\nfull paths:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.dirs.services) // app/services\nconsole.log(Path.dirs.controllers) // app/http/controllers\nconsole.log(Path.dirs.bootstrap) // bootstrap\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathmergedirs",children:(0,r.jsx)(n.code,{children:"Path::mergeDirs()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the ",(0,r.jsx)(n.code,{children:"Path.dirs"})," object with a new object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.mergeDirs({\n  services: 'app/internal/services',\n  controllers: 'app/internal/http/controllers',\n  bootstrap: 'bin',\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathext",children:(0,r.jsx)(n.code,{children:"Path::ext()"})}),"\n",(0,r.jsx)(n.p,{children:"Return the default extension that the application is using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nprocess.env.IS_TS = 'true'\n\nconsole.log(Path.ext()) // ts\n\nprocess.env.IS_TS = 'false'\n\nconsole.log(Path.ext()) // js\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathparseext",children:(0,r.jsx)(n.code,{children:"Path::parseExt()"})}),"\n",(0,r.jsxs)(n.p,{children:["Parse a path extension relying on the ",(0,r.jsx)(n.code,{children:"IS_TS"})," environment variable:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const tsPath = 'app/services/MyService.ts'\nconst jsPath = 'app/services/MyService.js'\n\nprocess.env.IS_TS = 'true'\nconsole.log(Path.parseExt(tsPath)) // app/services/MyService.ts\nconsole.log(Path.parseExt(jsPath)) // app/services/MyService.ts\n\nprocess.env.IS_TS = 'false'\nconsole.log(Path.parseExt(tsPath)) // app/services/MyService.js\nconsole.log(Path.parseExt(jsPath)) // app/services/MyService.js\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathtourl",children:(0,r.jsx)(n.code,{children:"Path::toURL()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a path to a URL instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import type { URL } from 'node:url'\nimport { Path } from '@athenna/common'\n\nconst url: URL = Path.toURL('https://athenna.io')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathtohref",children:(0,r.jsx)(n.code,{children:"Path::toHref()"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a path to a URL href string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconst href = Path.toHref('https://athenna.io')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathpwd",children:(0,r.jsx)(n.code,{children:"Path::pwd()"})}),"\n",(0,r.jsx)(n.p,{children:"Return the root path where the project is running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.pwd()) // /home/user/athenna-project\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsrc",children:(0,r.jsx)(n.code,{children:"Path::src()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.src"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.src()) // /home/user/athenna-project/src\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetsrc",children:(0,r.jsx)(n.code,{children:"Path::setSrc()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.src"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setSrc('src/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathbin",children:(0,r.jsx)(n.code,{children:"Path::bin()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.bin"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.bin()) // /home/user/athenna-project/bin\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetbin",children:(0,r.jsx)(n.code,{children:"Path::setBin()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.bin"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setBin('bin/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathapp",children:(0,r.jsx)(n.code,{children:"Path::app()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.app"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.app()) // /home/user/athenna-project/app\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetapp",children:(0,r.jsx)(n.code,{children:"Path::setApp()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.app"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setApp('app/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathmodels",children:(0,r.jsx)(n.code,{children:"Path::models()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.models"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.models()) // /home/user/athenna-project/app/models\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetmodels",children:(0,r.jsx)(n.code,{children:"Path::setModels()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.models"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setModels('app/models/models')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathboostrap",children:(0,r.jsx)(n.code,{children:"Path::boostrap()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.boostrap"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.boostrap()) // /home/user/athenna-project/boostrap\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetbootstrap",children:(0,r.jsx)(n.code,{children:"Path::setBootstrap()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.bootstrap"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setBootstrap('bootstrap/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathconfig",children:(0,r.jsx)(n.code,{children:"Path::config()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.config"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.config()) // /home/user/athenna-project/config\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetconfig",children:(0,r.jsx)(n.code,{children:"Path::setConfig()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.config"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setConfig('config/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathdatabase",children:(0,r.jsx)(n.code,{children:"Path::database()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.database"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.database()) // /home/user/athenna-project/database\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetdatabase",children:(0,r.jsx)(n.code,{children:"Path::setDatabase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.database"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setDatabase('database/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathlang",children:(0,r.jsx)(n.code,{children:"Path::lang()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.lang"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.lang()) // /home/user/athenna-project/lang\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetlang",children:(0,r.jsx)(n.code,{children:"Path::setLang()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.lang"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setLang('lang/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathnodemodules",children:(0,r.jsx)(n.code,{children:"Path::nodeModules()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.nodeModules"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.nodeModules()) // /home/user/athenna-project/nodeModules\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetnodemodules",children:(0,r.jsx)(n.code,{children:"Path::setNodeModules()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.nodeModules"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setNodeModules('node_modules/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathproviders",children:(0,r.jsx)(n.code,{children:"Path::providers()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.providers"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.providers()) // /home/user/athenna-project/providers\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetproviders",children:(0,r.jsx)(n.code,{children:"Path::setProviders()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.providers"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setProviders('providers/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathfacades",children:(0,r.jsx)(n.code,{children:"Path::facades()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.facades"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.facades()) // /home/user/athenna-project/providers/facades\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetfacades",children:(0,r.jsx)(n.code,{children:"Path::setFacades()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.facades"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setFacades('pfacades/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathpublic",children:(0,r.jsx)(n.code,{children:"Path::public()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.public"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.public()) // /home/user/athenna-project/public\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetpublic",children:(0,r.jsx)(n.code,{children:"Path::setPublic()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.public"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setPublic('public/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathresources",children:(0,r.jsx)(n.code,{children:"Path::resources()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.resources"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.resources()) // /home/user/athenna-project/resources\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetresources",children:(0,r.jsx)(n.code,{children:"Path::setResources()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.resources"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setResources('resources/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathroutes",children:(0,r.jsx)(n.code,{children:"Path::routes()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.routes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.routes()) // /home/user/athenna-project/routes\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetroutes",children:(0,r.jsx)(n.code,{children:"Path::setRoutes()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.routes"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setRoutes('routes/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathstorage",children:(0,r.jsx)(n.code,{children:"Path::storage()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.storage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.storage()) // /home/user/athenna-project/storage\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetstorage",children:(0,r.jsx)(n.code,{children:"Path::setStorage()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.storage"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setStorage('storage/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathtests",children:(0,r.jsx)(n.code,{children:"Path::tests()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.tests"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.tests()) // /home/user/athenna-project/tests\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsettests",children:(0,r.jsx)(n.code,{children:"Path::setTests()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.tests"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setTests('tests/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathlogs",children:(0,r.jsx)(n.code,{children:"Path::logs()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.logs"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.logs()) // /home/user/athenna-project/storage/logs\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetlogs",children:(0,r.jsx)(n.code,{children:"Path::setLogs()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.logs"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setLogs('logs/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathviews",children:(0,r.jsx)(n.code,{children:"Path::views()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.views"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.views()) // /home/user/athenna-project/resources/views\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetviews",children:(0,r.jsx)(n.code,{children:"Path::setViews()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.views"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setViews('views/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathstatic",children:(0,r.jsx)(n.code,{children:"Path::static()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.static"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.static()) // /home/user/athenna-project/public/static\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetstatic",children:(0,r.jsx)(n.code,{children:"Path::setStatic()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.static"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setStatic('static/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathassets",children:(0,r.jsx)(n.code,{children:"Path::assets()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.assets"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.assets()) // /home/user/athenna-project/public/assets\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetassets",children:(0,r.jsx)(n.code,{children:"Path::setAssets()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.assets"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setAssets('assets/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathlocales",children:(0,r.jsx)(n.code,{children:"Path::locales()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.locales"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.locales()) // /home/user/athenna-project/resources/locales\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetlocales",children:(0,r.jsx)(n.code,{children:"Path::setLocales()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.locales"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setLocales('locales/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathstubs",children:(0,r.jsx)(n.code,{children:"Path::stubs()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.stubs"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.stubs()) // /home/user/athenna-project/tests/stubs\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetstubs",children:(0,r.jsx)(n.code,{children:"Path::setStubs()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.stubs"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setStubs('stubs/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathfixtures",children:(0,r.jsx)(n.code,{children:"Path::fixtures()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.fixtures"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.fixtures()) // /home/user/athenna-project/tests/fixtures\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetfixtures",children:(0,r.jsx)(n.code,{children:"Path::setFixtures()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.fixtures"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setFixtures('fixtures/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathhttp",children:(0,r.jsx)(n.code,{children:"Path::http()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.http"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.http()) // /home/user/athenna-project/app/http\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsethttp",children:(0,r.jsx)(n.code,{children:"Path::setHttp()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.http"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setHttp('http/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathconsole",children:(0,r.jsx)(n.code,{children:"Path::console()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.console"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.console()) // /home/user/athenna-project/app/console\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetconsole",children:(0,r.jsx)(n.code,{children:"Path::setConsole()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.console"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setConsole('console/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathservices",children:(0,r.jsx)(n.code,{children:"Path::services()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.services"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.services()) // /home/user/athenna-project/app/services\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetservices",children:(0,r.jsx)(n.code,{children:"Path::setServices()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.services"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setServices('services/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathrepositories",children:(0,r.jsx)(n.code,{children:"Path::repositories()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.repositories"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.repositories()) // /home/user/athenna-project/app/repositories\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetrepositories",children:(0,r.jsx)(n.code,{children:"Path::setRepositories()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.repositories"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setRepositories('repositories/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathcommands",children:(0,r.jsx)(n.code,{children:"Path::commands()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.commands"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.commands()) // /home/user/athenna-project/app/console/commands\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetcommands",children:(0,r.jsx)(n.code,{children:"Path::setCommands()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.commands"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setCommands('commands/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathcontrollers",children:(0,r.jsx)(n.code,{children:"Path::controllers()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.controllers"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.controllers()) // /home/user/athenna-project/app/http/controllers\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetcontrollers",children:(0,r.jsx)(n.code,{children:"Path::setControllers()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.controllers"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setControllers('controllers/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathexceptions",children:(0,r.jsx)(n.code,{children:"Path::exceptions()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.exceptions"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.exceptions()) // /home/user/athenna-project/app/exceptions\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetexceptions",children:(0,r.jsx)(n.code,{children:"Path::setExceptions()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.exceptions"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setExceptions('exceptions/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathmiddlewares",children:(0,r.jsx)(n.code,{children:"Path::middlewares()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.middlewares"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.middlewares()) // /home/user/athenna-project/app/http/middlewares\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetmiddlewares",children:(0,r.jsx)(n.code,{children:"Path::setMiddlewares()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.middlewares"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setMiddlewares('middlewares/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathinterceptors",children:(0,r.jsx)(n.code,{children:"Path::interceptors()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.interceptors"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.interceptors()) // /home/user/athenna-project/app/http/interceptors\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetinterceptors",children:(0,r.jsx)(n.code,{children:"Path::setInterceptors()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.interceptors"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setInterceptors('interceptors/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathterminators",children:(0,r.jsx)(n.code,{children:"Path::terminators()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.terminators"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.terminators()) // /home/user/athenna-project/app/http/terminators\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetterminators",children:(0,r.jsx)(n.code,{children:"Path::setTerminators()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.terminators"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setTerminators('terminators/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathmigrations",children:(0,r.jsx)(n.code,{children:"Path::migrations()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.migrations"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.migrations()) // /home/user/athenna-project/database/migrations\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetmigrations",children:(0,r.jsx)(n.code,{children:"Path::setMigrations()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.migrations"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setMigrations('migrations/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathseeders",children:(0,r.jsx)(n.code,{children:"Path::seeders()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.seeders"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.seeders()) // /home/user/athenna-project/database/seeders\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetseeders",children:(0,r.jsx)(n.code,{children:"Path::setSeeders()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.seeders"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setSeeders('seeders/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathnodemodulesbin",children:(0,r.jsx)(n.code,{children:"Path::nodeModulesBin()"})}),"\n",(0,r.jsxs)(n.p,{children:["Merge the project root path with ",(0,r.jsx)(n.code,{children:"Path.dirs.nodeModulesBin"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.nodeModulesBin()) // /home/user/athenna-project/node_modules/.bin\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathsetnodemodulesbin",children:(0,r.jsx)(n.code,{children:"Path::setNodeModulesBin()"})}),"\n",(0,r.jsxs)(n.p,{children:["Set the ",(0,r.jsx)(n.code,{children:"Path.dirs.nodeModulesBin"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nPath.setNodeModulesBin('node_modules/.bin/app')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathvmtmp",children:(0,r.jsx)(n.code,{children:"Path::vmTmp()"})}),"\n",(0,r.jsx)(n.p,{children:"Return the tmp path of your vm."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.vmTmp()) // /tmp\n"})}),"\n",(0,r.jsx)(n.h4,{id:"pathvmhome",children:(0,r.jsx)(n.code,{children:"Path::vmHome()"})}),"\n",(0,r.jsx)(n.p,{children:"Return the home path of your vm."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Path } from '@athenna/common'\n\nconsole.log(Path.vmHome()) // /home/user\n"})}),"\n",(0,r.jsx)(n.h4,{id:"paththis",children:(0,r.jsx)(n.code,{children:"Path::this()"})}),"\n",(0,r.jsx)(n.p,{children:"Return the execution path of where this method is being called:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="/home/user/athenna-project/app/logPath.ts"',children:"import { Path } from '@athenna/common'\n\nexport function logPath() {\n  console.log(Path.this())\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="/home/user/athenna-project/bootstrap/index.ts"',children:"import { logPath } from '#app/logPath'\n\nlogPath() // /home/user/athenna-project/app\n"})}),"\n",(0,r.jsx)(n.h3,{id:"route",children:"Route"}),"\n",(0,r.jsx)(n.h4,{id:"routegetquerystring",children:(0,r.jsx)(n.code,{children:"Route::getQueryString()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the query string in form data format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst url = 'http://localhost:3000/user?name=Jo\xe3o%20Lenon&age=21'\nconst queryString = Route.getQueryString(url) // name=Jo\xe3o%20Lenon&age=21\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routeremovequeryparams",children:(0,r.jsx)(n.code,{children:"Route::removeQueryParams()"})}),"\n",(0,r.jsx)(n.p,{children:"Remove the query params from the url:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst url = 'http://localhost:3000/user?name=Jo\xe3o%20Lenon&age=21'\nconst urlWithoutQueryParams = Route.removeQueryParams(url)\n// http://localhost:3000/user\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routegetqueryparamsvalue",children:(0,r.jsx)(n.code,{children:"Route::getQueryParamsValue()"})}),"\n",(0,r.jsxs)(n.p,{children:["Get object with ",(0,r.jsx)(n.strong,{children:"?&queryParams"})," values from route:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst url = 'http://localhost:3000/user?name=Jo\xe3o%20Lenon&age=21'\nconst queryParams = Route.getQueryParamsValue(url)\n// { name: 'Jo\xe3o Lenon', age: '21' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routegetqueryparamsname",children:(0,r.jsx)(n.code,{children:"Route::getQueryParamsName()"})}),"\n",(0,r.jsxs)(n.p,{children:["Get an array with ",(0,r.jsx)(n.strong,{children:"?&queryParams"})," names from route:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst url = 'http://localhost:3000/user?name=Jo\xe3o%20Lenon&age=21'\nconst queryParams = Route.getQueryParamsName(url)\n// ['name', 'age']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routegetparamsvalue",children:(0,r.jsx)(n.code,{children:"Route::getParamsValue()"})}),"\n",(0,r.jsxs)(n.p,{children:["Get object with ",(0,r.jsxs)(n.strong,{children:["/",":params"]})," values from route:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst urlWithParams = 'http://localhost:3000/user/:id'\nconst urlWithValues = 'http://localhost:3000/user/1'\n\nconst params = Route.getParamsValue(urlWithParams, urlWithValues)\n// { id: '1' }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routegetparamsname",children:(0,r.jsx)(n.code,{children:"Route::getParamsName()"})}),"\n",(0,r.jsxs)(n.p,{children:["Get an array with ",(0,r.jsxs)(n.strong,{children:["/",":params"]})," names from route:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst url = 'http://localhost:3000/user/:id'\n\nconst params = Route.getParamsName(url)\n// ['id']\n"})}),"\n",(0,r.jsx)(n.h4,{id:"routecreatematcher",children:(0,r.jsx)(n.code,{children:"Route::createMatcher()"})}),"\n",(0,r.jsx)(n.p,{children:"Create a RegExp matcher for a route:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Route } from '@athenna/common'\n\nconst urlParams = 'http://localhost:3000/user/:id'\nconst urlValues = 'http://localhost:3000/user/1'\nconst regexp = Route.createMatcher(url)\n\nif (regexp.test(urlValues)) {\n  // routes matches, do something...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"string",children:"String"}),"\n",(0,r.jsx)(n.h4,{id:"stringgeneraterandom",children:(0,r.jsx)(n.code,{children:"String::generateRandom()"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a random string with a determined length:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.generateRandom(10)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtocamelcase",children:(0,r.jsx)(n.code,{children:"String::toCamelCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"camelCase"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toCamelCase('Hello World')\n// helloWorld\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtosnakecase",children:(0,r.jsx)(n.code,{children:"String::toSnakeCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"snake_case"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toSnakeCase('helloWorld')\n// hello_world\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtoconstantcase",children:(0,r.jsx)(n.code,{children:"String::toConstantCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"CONSTANT_CASE"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toConstantCase('hello_world')\n// HELLO_WORLD\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtopascalcase",children:(0,r.jsx)(n.code,{children:"String::toPascalCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"PascalCase"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toPascalCase('HELLO_WORLD')\n// HelloWorld\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtosentencecase",children:(0,r.jsx)(n.code,{children:"String::toSentenceCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"Sentence Case"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toSentenceCase('HelloWorld')\n// Hello World\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtodotcase",children:(0,r.jsx)(n.code,{children:"String::toDotCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"dot.case"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toDotCase('Hello World')\n// hello.world\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtodashcase",children:(0,r.jsx)(n.code,{children:"String::toDashCase()"})}),"\n",(0,r.jsxs)(n.p,{children:["Transforms the string to ",(0,r.jsx)(n.strong,{children:"dash-case"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toDashCase('hello.world')\n// hello-world\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringtonocase",children:(0,r.jsx)(n.code,{children:"String::toNoCase()"})}),"\n",(0,r.jsx)(n.p,{children:"Removes all sorted cases from string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.toNoCase('Hello-World')\n// hello world\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringpluralize",children:(0,r.jsx)(n.code,{children:"String::pluralize()"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms the string to plural form:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.pluralize('cat') // cats\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringsingularize",children:(0,r.jsx)(n.code,{children:"String::singularize()"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms the string to singular form:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.singularize('cats') // cat\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringordinalize",children:(0,r.jsx)(n.code,{children:"String::ordinalize()"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms a number to your ordinal format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst string = String.ordinalize('10') // 10th\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringgeneraterandomcolor",children:(0,r.jsx)(n.code,{children:"String::generateRandomColor()"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a random color in hexadecimal format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst color = String.generateRandomColor()\n// #a0eebc\n"})}),"\n",(0,r.jsx)(n.h4,{id:"stringnormalizebase64",children:(0,r.jsx)(n.code,{children:"String::normalizeBase64()"})}),"\n",(0,r.jsx)(n.p,{children:"Normalizes the string in base64 format removing\nspecial characters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { String } from '@athenna/common'\n\nconst base64 = String.normalizeBase64('+++///===')\n// '---___'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"uuid",children:"Uuid"}),"\n",(0,r.jsx)(n.h4,{id:"uuidgenerate",children:(0,r.jsx)(n.code,{children:"Uuid::generate()"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a UUID v4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst uuid = Uuid.generate()\n// a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can also generate an UUID with a prefixed string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const prefixedUuid = Uuid.generate('adm')\n// adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidverify",children:(0,r.jsx)(n.code,{children:"Uuid::verify()"})}),"\n",(0,r.jsx)(n.p,{children:"Verify if a string is a valid UUID v4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nif (Uuid.verify('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11')) {\n  // do something\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can also verify if a string is a valid UUID and if\nthe prefix matches:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const prefixedUuid = 'adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\n\n// Verify if the string is a valid UUID and the prefix \n// is equals to adm\nif (Uuid.verify(prefixedUuid, { prefix: 'adm' })) {\n  // do something\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["By default, the ",(0,r.jsx)(n.code,{children:"verify()"})," method will ignore the prefix to verify\nif the string is a valid UUID, to avoid this set the ",(0,r.jsx)(n.code,{children:"ignorePrefix"}),"\noption as ",(0,r.jsx)(n.code,{children:"false"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const prefixedUuid = 'adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\n\nif (Uuid.verify(prefixedUuid, { ignorePrefix: false })) {\n  // will never enter here with the example above, \n  // only with plain UUID's.\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidgettoken",children:(0,r.jsx)(n.code,{children:"Uuid::getToken()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the UUID token without the prefix:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst prefixedUuid = 'adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\nconst uuid = Uuid.getToken(prefixedUuid)\n// a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidgetprefix",children:(0,r.jsx)(n.code,{children:"Uuid::getPrefix()"})}),"\n",(0,r.jsx)(n.p,{children:"Get the prefix without the UUID token:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst prefixedUuid = 'adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\nconst prefix = Uuid.getPrefix(prefixedUuid) // adm\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidinjectprefix",children:(0,r.jsx)(n.code,{children:"Uuid::injectPrefix()"})}),"\n",(0,r.jsx)(n.p,{children:"Inject a prefix in the UUID token, if the UUID token is not\nvalid, this method will throw:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst uuid = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\nconst prefixedUuid = Uuid.injectPrefix(uuid, 'adm')\n// adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidchangeprefix",children:(0,r.jsx)(n.code,{children:"Uuid::changePrefix()"})}),"\n",(0,r.jsx)(n.p,{children:"Change the prefix of an UUID token, if the UUID token is not\nvalid, this function will throw:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst uuid = 'adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'\nconst prefixedUuid = Uuid.changePrefix(uuid, 'mng')\n// mng::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})}),"\n",(0,r.jsx)(n.h4,{id:"uuidchangeorgenerate",children:(0,r.jsx)(n.code,{children:"Uuid::changeOrGenerate()"})}),"\n",(0,r.jsxs)(n.p,{children:["Change the prefix of an UUID token, or generate the token\nif the UUID token is ",(0,r.jsx)(n.code,{children:"undefined"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Uuid } from '@athenna/common'\n\nconst uuid = undefined\nconst prefixedUuid = Uuid.changeOrGenerate('adm', uuid)\n// adm::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n\nconst changedPrefixUuid = Uuid.changeOrGenerate('mng', prefixedUuid)\n// mng::a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>i});var r=t(7294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);