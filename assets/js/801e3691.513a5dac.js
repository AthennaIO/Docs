"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[1992],{2797:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=n(4848),s=n(8453),t=n(7049);const a={title:"Controllers",sidebar_position:3,description:"Understand how you can set up controllers in your REST API application."},c="Controllers",i={id:"rest-api-application/controllers",title:"Controllers",description:"Understand how you can set up controllers in your REST API application.",source:"@site/docs/rest-api-application/controllers.mdx",sourceDirName:"rest-api-application",slug:"/rest-api-application/controllers",permalink:"/docs/rest-api-application/controllers",draft:!1,unlisted:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/rest-api-application/controllers.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Controllers",sidebar_position:3,description:"Understand how you can set up controllers in your REST API application."},sidebar:"tutorialSidebar",previous:{title:"Middlewares",permalink:"/docs/rest-api-application/middlewares"},next:{title:"Request Context",permalink:"/docs/rest-api-application/request-context"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Writing controllers",id:"writing-controllers",level:2},{value:"Resource controllers",id:"resource-controllers",level:2},{value:"Partial resource routes",id:"partial-resource-routes",level:3},{value:"Nested resources",id:"nested-resources",level:3},{value:"Dependency injection and controllers",id:"dependency-injection-and-controllers",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"controllers",children:"Controllers"})}),"\n",(0,o.jsx)(r.p,{children:"Understand how you can set up controllers in your REST API\napplication."}),"\n",(0,o.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(r.p,{children:['Instead of defining all of your request handling logic as\nclosures in your route files, you may wish to organize this\nbehavior using "controller" classes. Controllers can group\nrelated request handling logic into a single class. For\nexample, a ',(0,o.jsx)(r.code,{children:"UserController"})," class might handle all incoming\nrequests related to users, including showing, creating,\nupdating, and deleting users. By default, controllers are\nstored in the ",(0,o.jsx)(t.A,{father:"controllers"})," directory."]}),"\n",(0,o.jsx)(r.h2,{id:"writing-controllers",children:"Writing controllers"}),"\n",(0,o.jsx)(r.p,{children:"Let's take a look at an example:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"import { Context, Controller } from '@athenna/http'\n\n@Controller()\nexport class UserController {\n  public async show({ request, response }: Context) {\n    return response.send(`User_${request.param('id')}`)\n  }\n}\n"})}),"\n",(0,o.jsx)(r.p,{children:"You can define a route to this controller method like so:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"Route.controller('UserController').get('/user/:id', 'show')\n\n// or\n\nRoute.get('/user/:id', 'UserController.show')\n"})}),"\n",(0,o.jsxs)(r.p,{children:["When an incoming request matches the specified route URL,\nthe ",(0,o.jsx)(r.code,{children:"show"})," method on the ",(0,o.jsx)(r.code,{children:"UserController"})," class will be\ninvoked and the route parameters will be passed to the\nmethod."]}),"\n",(0,o.jsx)(r.h2,{id:"resource-controllers",children:"Resource controllers"}),"\n",(0,o.jsxs)(r.p,{children:['If you think of each model in your application as a\n"resource", it is typical to perform the same sets of\nactions against each resource in your application. For\nexample, imagine your application contains a ',(0,o.jsx)(r.code,{children:"Photo"})," model\nand a ",(0,o.jsx)(r.code,{children:"Movie"})," model. It is likely that users can create,\nread, update, or delete these resources."]}),"\n",(0,o.jsxs)(r.p,{children:['Because of this common use case, Athenna resource routing\nassigns the typical creation, read, update, and delete\n("CRUD") routes to a controller with a single line of code.\nTo get started, we can use the ',(0,o.jsx)(r.code,{children:"make:controller"})," command's\n",(0,o.jsx)(r.code,{children:"--resource"})," option to quickly create a controller to handle\nthese actions:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"node artisan make:controller PhotoController --resource\n"})}),"\n",(0,o.jsxs)(r.p,{children:["This command will generate a controller at\n",(0,o.jsx)(t.A,{father:"controllers",child:"PhotoController.ts"}),".\nThe controller will contain a method for each of the\navailable resource operations. Next, you may register a\nresource route that points to the controller:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"Route.resource('photos', 'PhotoController')\n"})}),"\n",(0,o.jsxs)(r.p,{children:["This single route declaration creates multiple routes to\nhandle a variety of actions on the resource. The generated\ncontroller will already have methods stubbed for each of\nthese actions. Remember, you can always get a quick\noverview of your application's routes by running the\n",(0,o.jsx)(r.code,{children:"route:list"})," command."]}),"\n",(0,o.jsx)(r.h3,{id:"partial-resource-routes",children:"Partial resource routes"}),"\n",(0,o.jsx)(r.p,{children:"When declaring a resource route, you may specify a subset\nof actions the controller should handle instead of the\nfull set of default actions:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"Route.resource('photos', 'PhotoController').only(['index', 'show'])\n\nRoute.resource('photos', 'PhotoController').except(['store', 'update', 'destroy'])\n"})}),"\n",(0,o.jsx)(r.h3,{id:"nested-resources",children:"Nested resources"}),"\n",(0,o.jsx)(r.p,{children:'Sometimes you may need to define routes to a nested\nresource. For example, a photo resource may have multiple\ncomments that may be attached to the photo. To nest the\nresource controllers, you may use "dot" notation in your\nroute declaration:'}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"Route.resource('photos.comments', 'PhotoCommentController')\n"})}),"\n",(0,o.jsx)(r.p,{children:"This route will register a nested resource that may be\naccessed with URLs like the following:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"/photos/:photoId/comments/:commentId\n"})}),"\n",(0,o.jsx)(r.h2,{id:"dependency-injection-and-controllers",children:"Dependency injection and controllers"}),"\n",(0,o.jsxs)(r.p,{children:["The Athenna ",(0,o.jsx)(r.a,{href:"/docs/architecture-concepts/container",children:(0,o.jsx)(r.code,{children:"service container"})}),"\nis used to resolve all Athenna controllers. As a result,\nyou are able to use any dependencies your controller may\nneed using ",(0,o.jsx)(r.code,{children:"@Inject()"})," annotation or in its constructor.\nThe declared dependencies will automatically be resolved\nand injected into the controller instance when receiving\na request from the server:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"import { Inject } from '@athenna/ioc'\nimport { Controller, type Context } from '@athenna/http'\nimport { UserService } from '#src/services/UserService'\nimport { ProfileService } from '#src/services/ProfileService'\n\n@Controller()\nexport class UserController {\n  private userService: UserService\n\n  @Inject() \ud83d\udc48\n  private profileService: ProfileService\n\n  public constructor(userService) { \ud83d\udc48\n    this.userService = userService\n  }\n\n  public async show({ response, params }: Context) {\n    //\n  }\n}\n"})}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsxs)(r.p,{children:["To learn more about the ",(0,o.jsx)(r.code,{children:"@Controller()"})," annotation, visit the\n",(0,o.jsx)(r.a,{href:"/docs/rest-api-application/annotations#controller",children:"REST API annotations documentation page."})]})})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},7049:(e,r,n)=>{n.d(r,{A:()=>t});n(6540);const o={hoverCardContainer:"hoverCardContainer_jqUQ",hoverCardLink:"hoverCardLink_oDZU",hoverCard:"hoverCard_qTDS"};var s=n(4848);function t(e){let r=e.father;switch(e.father){case"storage":r="src/storage";break;case"logs":r="src/storage/logs";break;case"views":r="src/resources/views";break;case"locales":r="src/resources/locales";break;case"static":r="src/resources/static";break;case"config":r="src/config";break;case"database":r="src/database";break;case"seeders":r="src/database/seeders";break;case"migrations":r="src/database/migrations";break;case"console":r="src/console";break;case"commands":r="src/console/commands";break;case"cron":r="src/cron";break;case"schedulers":r="src/cron/schedulers";break;case"models":r="src/models";break;case"services":r="src/services";break;case"repositories":r="src/repositories";break;case"http":r="src/http";break;case"controllers":r="src/http/controllers";break;case"middlewares":r="src/http/middlewares";break;case"interceptors":r="src/http/interceptors";break;case"terminators":r="src/http/terminators";break;case"stubs":r="tests/stubs";break;case"fixtures":r="tests/fixtures";break;case"providers":r="src/providers";break;case"facades":r="src/facades"}return(0,s.jsxs)("div",{className:o.hoverCardContainer,children:[(0,s.jsx)("a",{className:o.hoverCardLink,href:`/docs/the-basics/helpers#path${e.father}`,children:(0,s.jsxs)("code",{children:["Path.",e.father,"(",e.child?`'${e.child}'`:"",")"]})}),(0,s.jsx)("div",{className:o.hoverCard,children:(0,s.jsxs)("p",{style:{margin:0},children:["./",r,e.child?`/${e.child}`:""]})})]})}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var o=n(6540);const s={},t=o.createContext(s);function a(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);