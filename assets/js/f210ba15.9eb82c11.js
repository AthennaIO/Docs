"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[6485],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>g});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(i),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return i?n.createElement(g,o(o({ref:t},u),{},{components:i})):n.createElement(g,o({ref:t},u))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=i[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},5054:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=i(7462),r=(i(7294),i(3905));const a={title:"Rate Limiting",sidebar_position:6,description:"See how to create rate limiting rules for Athenna REST API application."},o="Rate Limiting",l={unversionedId:"rest-api-application/rate-limiting",id:"rest-api-application/rate-limiting",title:"Rate Limiting",description:"See how to create rate limiting rules for Athenna REST API application.",source:"@site/docs/rest-api-application/rate-limiting.mdx",sourceDirName:"rest-api-application",slug:"/rest-api-application/rate-limiting",permalink:"/docs/rest-api-application/rate-limiting",draft:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/rest-api-application/rate-limiting.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Rate Limiting",sidebar_position:6,description:"See how to create rate limiting rules for Athenna REST API application."},sidebar:"tutorialSidebar",previous:{title:"Error Handling",permalink:"/docs/rest-api-application/error-handling"},next:{title:"Tracing Requests",permalink:"/docs/rest-api-application/tracing-requests"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Configuring for specific routes",id:"configuring-for-specific-routes",level:2},{value:"Usage in route groups",id:"usage-in-route-groups",level:3},{value:"Usage in route resources",id:"usage-in-route-resources",level:3},{value:"Rate limit headers",id:"rate-limit-headers",level:2},{value:"Disabling rate limiting",id:"disabling-rate-limiting",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rate-limiting"},"Rate Limiting"),(0,r.kt)("p",null,"See how to create rate-limiting rules for Athenna REST API application."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Rate limiters ensure the fair usage of your http\nserver by clients. It regulates the number of times\na user can request your application in a given time-frame."),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"Athenna uses the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-rate-limit"},(0,r.kt)("inlineCode",{parentName:"a"},"@fastify/rate-limit")),"\nplugin inside ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpKernel"),". All the configurations that\n",(0,r.kt)("inlineCode",{parentName:"p"},"@fastify/rate-limit")," supports can be set inside ",(0,r.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')"),"\nfile in the ",(0,r.kt)("inlineCode",{parentName:"p"},"rateLimit")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",title:"\"Path.config('http.ts')\""},"export default {\n  rateLimit: {\n    global: true,\n    max: 1000,\n    ban: null,\n    timeWindow: 1000 * 60,\n    cache: 5000,\n    allowList: [],\n    continueExceeding: false,\n    enableDraftSpec: false\n  }\n}\n")),(0,r.kt)("h2",{id:"configuring-for-specific-routes"},"Configuring for specific routes"),(0,r.kt)("p",null,"In Athenna you can set specific options of rate limit\nfor specific routes. You can also disable the ",(0,r.kt)("inlineCode",{parentName:"p"},"global"),"\noption of your ",(0,r.kt)("inlineCode",{parentName:"p"},"rateLimit")," configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')"),"\nand set different rules in your routes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route\n  .get('/hello', 'WelcomeController.show')\n  .rateLimit({ max: 1, timeWindow: '1 minute' }) \ud83d\udc48\n")),(0,r.kt)("h3",{id:"usage-in-route-groups"},"Usage in route groups"),(0,r.kt)("p",null,"You can also use the ",(0,r.kt)("inlineCode",{parentName:"p"},"rateLimit()")," method in route groups.\nThis will set the same configuration for all routes inside\nthe group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route.group(() => {\n    Route.get('/hello', 'WelcomeController.show')\n}).rateLimit({ max: 1, timeWindow: '1 minute' }) \ud83d\udc48\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"rateLimit()"),' method of route groups will never\nsubscribe the already set methods of routes. Use it\nto create "defaults" configurations for all routes.')),(0,r.kt)("h3",{id:"usage-in-route-resources"},"Usage in route resources"),(0,r.kt)("p",null,"Same behavior as route groups, but for resources:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"// Set the same configurations for all routes of resource\nRoute.resource('/tests', 'WelcomeController').rateLimit({...})\n\n// Set configuration only for that specific action of resource\nRoute.resource('/tests', 'WelcomeController').rateLimit('index', {...})\nRoute.resource('/tests', 'WelcomeController').rateLimit('store', {...})\n")),(0,r.kt)("h2",{id:"rate-limit-headers"},"Rate limit headers"),(0,r.kt)("p",null,"The response will have the following headers\nif ",(0,r.kt)("inlineCode",{parentName:"p"},"enableDraftSpec")," is true in ",(0,r.kt)("inlineCode",{parentName:"p"},"rateLimit")," config or route:"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Header"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ratelimit-limit")),(0,r.kt)("td",null,"How many requests the client can make")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ratelimit-remaining")),(0,r.kt)("td",null,"How many requests remain to the client in the timewindow")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ratelimit-reset")),(0,r.kt)("td",null,"How many seconds must pass before the rate limit resets")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"retry-after")),(0,r.kt)("td",null,"Contains the same value in time as ",(0,r.kt)("code",null,"ratelimit-reset"))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information on Rate limit headers, please\nconsult the ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/graph-api/overview/rate-limiting/"},"Meta article about rate limiters"),".")),(0,r.kt)("h2",{id:"disabling-rate-limiting"},"Disabling rate limiting"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpKernel")," class will automatically disable the\nplugin registration if the package does not exist, so\nto disable rate-limiting in Athenna you need to remove the\n",(0,r.kt)("inlineCode",{parentName:"p"},"@fastify/rate-limit")," package from your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm remove @fastify/rate-limit\n")),(0,r.kt)("p",null,"You can also disable by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"http.rateLimit.enabled")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",title:"\"Path.config('http.ts')\""},"export default {\n  rateLimit: {\n    enabled: false\n  }\n}\n")))}m.isMDXComponent=!0}}]);