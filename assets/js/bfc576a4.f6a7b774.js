"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[1401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,m=c["".concat(l,".").concat(d)]||c[d]||g[d]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},211:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Swagger Documentation",sidebar_position:9,description:"See how to create the Swagger documentation for Athenna REST API application."},i="Swagger",s={unversionedId:"rest-api-application/swagger-documentation",id:"rest-api-application/swagger-documentation",title:"Swagger Documentation",description:"See how to create the Swagger documentation for Athenna REST API application.",source:"@site/docs/rest-api-application/swagger-documentation.mdx",sourceDirName:"rest-api-application",slug:"/rest-api-application/swagger-documentation",permalink:"/docs/rest-api-application/swagger-documentation",draft:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/rest-api-application/swagger-documentation.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Swagger Documentation",sidebar_position:9,description:"See how to create the Swagger documentation for Athenna REST API application."},sidebar:"tutorialSidebar",previous:{title:"Security with Helmet",permalink:"/docs/rest-api-application/security-with-helmet"},next:{title:"CLI Application",permalink:"/docs/cli-application"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Usage in route groups",id:"usage-in-route-groups",level:3},{value:"Usage in route resources",id:"usage-in-route-resources",level:3},{value:"Disabling Swagger",id:"disabling-swagger",level:2}],u={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"swagger"},"Swagger"),(0,a.kt)("p",null,"See how to create the Swagger documentation for Athenna REST API application."),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Swagger allows you to describe the structure of\nyour APIs so that machines can read them. The\nability of APIs to describe their own structure\nis the root of all awesomeness in Swagger."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Athenna uses the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-swagger"},(0,a.kt)("inlineCode",{parentName:"a"},"@fastify/swagger")),"\nand ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-swagger-ui"},(0,a.kt)("inlineCode",{parentName:"a"},"@fastify/swagger-ui")),"\nplugins inside ",(0,a.kt)("inlineCode",{parentName:"p"},"HttpKernel"),". All the configurations that ",(0,a.kt)("inlineCode",{parentName:"p"},"@fastify/swagger"),"\nsupports can be set inside ",(0,a.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"swagger.configurations"),"\nobject. And all the configurations that ",(0,a.kt)("inlineCode",{parentName:"p"},"@fastify/swagger-ui"),"\nsupports can be set inside ",(0,a.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"swagger.ui")," object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.config('http.ts')\"",title:"\"Path.config('http.ts')\""},"export default {\n  swagger: {\n    ui: {\n      staticCSP: true,\n      routePrefix: '/documentation'\n    },\n    configurations: {\n      mode: 'dynamic',\n      swagger: {\n        basePath: '/',\n        consumes: ['application/json'],\n        produces: ['application/json'],\n        info: {\n          title: Config.get('app.name'),\n          version: Config.get('app.version'),\n          description: Config.get('app.description')\n        },\n        externalDocs: {\n          url: 'https://athenna.io',\n          description: 'Find more info about Athenna here'\n        },\n      },\n    },\n  }\n}\n")),(0,a.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,a.kt)("p",null,"You can set your Swagger configurations using\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"Route")," facade in ",(0,a.kt)("inlineCode",{parentName:"p"},"routes/http.ts")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route.get('/hello', 'WelcomeController.show')\n    .summary('Hello route')\n    .tags('hello', 'world')\n    .description('Hello route used to say hello to the user')\n    .queryString('name', 'string', 'Name to say hello')\n    .response(200, {\n        description: 'Successful response',\n        schema: {\n            type: 'object',\n            properties: {\n                name: { type: 'string' }\n            },\n        }\n    })\n")),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"swagger()")," method and use\nthe same configurations of ",(0,a.kt)("inlineCode",{parentName:"p"},"@fastify/swagger")," plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route.get('/hello', 'WelcomeController.show').swagger({\n    summary: 'Hello route',\n    tags: ['hello', 'world'],\n    description: 'Hello route used to say hello to the user',\n    querystring: {\n      type: 'object',\n      properties: {\n        name: {\n          type: 'string',\n          description: 'Name to say hello'\n        }\n      }\n    },\n    response: {\n        200: {\n            description: 'Successful response',\n            properties: {\n                name: { type: 'string' }\n            }\n        }\n    }\n})\n")),(0,a.kt)("h3",{id:"usage-in-route-groups"},"Usage in route groups"),(0,a.kt)("p",null,"You can also use all the swagger methods in route groups.\nThis will set the same configuration for all routes inside\nthe group:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route.group(() => {\n    Route.get('/hello', 'WelcomeController.show').summary('Hello route')\n}).swagger({...})\n")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},'The swagger methods of route groups will never subscribe\nthe already set methods of routes. Use them to create "defaults"\nconfigurations for all routes such as ',(0,a.kt)("inlineCode",{parentName:"p"},"security"),".")),(0,a.kt)("h3",{id:"usage-in-route-resources"},"Usage in route resources"),(0,a.kt)("p",null,"Same behavior as route groups, but for resources:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"// Set the same configurations for all routes of resource\nRoute.resource('/tests', 'WelcomeController').swagger({...})\n\n// Set configuration only for that specific action of resource\nRoute.resource('/tests', 'WelcomeController').swagger('index', {...})\nRoute.resource('/tests', 'WelcomeController').swagger('store', {...})\n")),(0,a.kt)("h2",{id:"disabling-swagger"},"Disabling Swagger"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"HttpKernel")," class will automatically disable the\nplugin registration if the package does not exist, so\nto disable Swagger in Athenna you need to remove the\n",(0,a.kt)("inlineCode",{parentName:"p"},"@fastify/swagger")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"@fastify/swagger-ui")," packages from your\napplication:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm remove @fastify/swagger @fastify/swagger-ui\n")))}g.isMDXComponent=!0}}]);