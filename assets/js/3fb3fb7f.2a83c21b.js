"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[8794],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||o;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7462),r=n(7294),o=n(2389),i=n(9548),s=n(6010),l="tabItem_LplD";function c(e){var t,n,o,c=e.lazy,d=e.block,u=e.defaultValue,p=e.values,h=e.groupId,m=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=p?p:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,i.lx)(g,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===u?u:null!=(t=null!=u?u:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,i.UB)(),y=b.tabGroupChoices,w=b.setTabGroupChoices,N=(0,r.useState)(k),A=N[0],C=N[1],j=[],O=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var x=y[h];null!=x&&x!==A&&g.some((function(e){return e.value===x}))&&C(x)}var F=function(e){var t=e.currentTarget,n=j.indexOf(t),a=g[n].value;a!==A&&(O(t),C(a),null!=h&&w(h,a))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=j.indexOf(e.currentTarget)+1;n=j[a]||j[0];break;case"ArrowLeft":var r=j.indexOf(e.currentTarget)-1;n=j[r]||j[j.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},m)},g.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:A===t?0:-1,"aria-selected":A===t,key:t,ref:function(e){return j.push(e)},onKeyDown:S,onFocus:F,onClick:F},o,{className:(0,s.Z)("tabs__item",l,null==o?void 0:o.className,{"tabs__item--active":A===t})}),null!=n?n:t)}))),c?(0,r.cloneElement)(f.filter((function(e){return e.props.value===A}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==A})}))))}function d(e){var t=(0,o.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},5286:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=(n(9877),n(8215),["components"]),s={sidebar_position:4,id:"facades",title:"Facades",hide_title:!0,hide_table_of_contents:!0,tags:["Getting Started","Architecture Concepts"]},l=void 0,c={unversionedId:"architecture-concepts/facades",id:"architecture-concepts/facades",title:"Facades",description:"\ud83c\udfe0",source:"@site/docs/architecture-concepts/facades.mdx",sourceDirName:"architecture-concepts",slug:"/architecture-concepts/facades",permalink:"/docs/architecture-concepts/facades",editUrl:"https://github.com/AthennaIO/Docs/docs/architecture-concepts/facades.mdx",tags:[{label:"Getting Started",permalink:"/docs/tags/getting-started"},{label:"Architecture Concepts",permalink:"/docs/tags/architecture-concepts"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,id:"facades",title:"Facades",hide_title:!0,hide_table_of_contents:!0,tags:["Getting Started","Architecture Concepts"]},sidebar:"tutorialSidebar",previous:{title:"Service Providers",permalink:"/docs/architecture-concepts/providers"},next:{title:"Routing",permalink:"/docs/the-basics/http/routing"}},d=[{value:"Introduction",id:"id-introduction",children:[{value:"Helper functions",id:"helper-functions",children:[],level:3}],level:2},{value:"When to use facades",id:"id-when-to-use-facades",children:[],level:2},{value:"How facades work",id:"id-how-facades-work",children:[],level:2},{value:"Facade class reference",id:"id-facade-class-reference",children:[],level:2},{value:"Writing facades",id:"id-writing-facades",children:[],level:2}],u={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("nav",{"aria-label":"breadcrumbs"},(0,o.kt)("ul",{class:"breadcrumbs"},(0,o.kt)("li",{class:"breadcrumbs__item"},(0,o.kt)("a",{class:"breadcrumbs__link",href:"/"},"\ud83c\udfe0")),(0,o.kt)("li",{class:"breadcrumbs__item"},(0,o.kt)("a",{class:"breadcrumbs__link"},"Architecture Concepts")),(0,o.kt)("li",{class:"breadcrumbs__item"},(0,o.kt)("a",{class:"breadcrumbs__link",href:"/docs/architecture-concepts/facades"},"Facades")))),(0,o.kt)("span",{class:"badge badge--secondary margin-top-bot"},"version 1.0.0"),(0,o.kt)("h1",{id:"facades"},"Facades"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"introduction"},(0,o.kt)("a",{parentName:"h4",href:"#id-introduction"},"Introduction"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"when-to-use-facades"},(0,o.kt)("a",{parentName:"h4",href:"#id-when-to-use-facades"},"When to use facades"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"how-facades-work"},(0,o.kt)("a",{parentName:"h4",href:"#id-how-facades-work"},"How facades work"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"facade-class-reference"},(0,o.kt)("a",{parentName:"h4",href:"#id-facade-class-reference"},"Facade class reference"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"writing-facades"},(0,o.kt)("a",{parentName:"h4",href:"#id-writing-facades"},"Writing facades")))),(0,o.kt)("h2",{id:"id-introduction"},"Introduction"),(0,o.kt)("p",null,'Throughout the Athenna documentation, you will see examples of code that interacts with Athenna features via "facades".\nFacades provide a "static" interface to class that are available in the application\'s ',(0,o.kt)("a",{parentName:"p",href:"/docs/architecture-concepts/container"},(0,o.kt)("inlineCode",{parentName:"a"},"service container")),".\nAthenna ships with many facades which provide access to almost all of Athenna features."),(0,o.kt)("p",null,"Athenna facades serve as \"static proxies\" to underlying classes in the service container, providing the benefit of a terse,\nexpressive syntax while maintaining more testability and flexibility than traditional static methods. It's perfectly fine\nif you don't totally understand how facades work under the hood - just go with the flow and continue learning about Athenna."),(0,o.kt)("p",null,"All of Athenna facades are defined in their own packages. So, we can easily access a facade like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Log } from '@athenna/logger' // Log Facade\nimport { Route } from '@athenna/http' // Route Facade\n\nRoute.get('/welcome', function ({ response }) {\n    Log.channel('simple').success('New request received \ud83d\ude1d')\n\n    return response.status(200).send({ hello: 'world' })\n})\n")),(0,o.kt)("p",null,"Throughout the Athenna documentation, many of the examples will use facades to demonstrate various features of the framework."),(0,o.kt)("h3",{id:"helper-functions"},"Helper functions"),(0,o.kt)("p",null,'To complement facades, Athenna offers a variety of global "helper functions" that make it even easier to interact with\ncommon Athenna features. Some common helper functions you may interact with are ',(0,o.kt)("inlineCode",{parentName:"p"},"Env"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Config"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Path"),", and more. Each\nhelper function offered by Athenna is documented with their corresponding feature; however, a complete list is available\nwithin the dedicated ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting-started/installation"},(0,o.kt)("inlineCode",{parentName:"a"},"helper documentation")),"."),(0,o.kt)("h2",{id:"id-when-to-use-facades"},"When to use facades"),(0,o.kt)("p",null,"Facades have many benefits. They provide a terse, memorable syntax that allows you to use Athenna features without\nremembering long class names that must be injected or configured manually."),(0,o.kt)("p",null,'However, some care must be taken when using facades. The primary danger of facades is class "scope creep". Since facades\nare so easy to use and do not require injection, it can be easy to let your classes continue to grow and use many facades\nin a single class. Using dependency injection, this potential is mitigated by the visual feedback a large constructor\ngives you that your class is growing too large. So, when using facades, pay special attention to the size of your class\nso that its scope of responsibility stays narrow. If your class is getting too large, consider splitting it into multiple\nsmaller classes.'),(0,o.kt)("h2",{id:"id-how-facades-work"},"How facades work"),(0,o.kt)("p",null,"In an Athenna application, a facade is a class that provides access to an object from the container. The machinery that\nmakes this work is in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Facade")," class. Athenna facades, and any custom facades you create, will extend the base\n",(0,o.kt)("inlineCode",{parentName:"p"},"Facade")," class."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Facade")," base class makes use of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Proxy API")," to defer calls from your facade to an object resolved from the\ncontainer. In the example below, a call is made to the Athenna log system. By glancing at this code, one might assume\nthat the static ",(0,o.kt)("inlineCode",{parentName:"p"},"success")," method is being called on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Log")," class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Log } from '@athenna/logger'\n\nexport class WelcomeController {\n  /**\n   * Show the welcome payload.\n   *\n   * @param {import('@athenna/http').ContextContract} ctx\n   * @return any\n   */\n  async show({ response }) {\n    Log.success('Welcome to Athenna \ud83d\ude1d')\n\n    return response.status(200).send({ hello: 'world' })\n  }\n}\n")),(0,o.kt)("p",null,"Notice that near the top of the file we are importing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Log")," facade. This facade serves as a proxy for accessing the\nunderlying implementation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Logger")," class from Athenna service container. Any calls we make using the facade will\nbe passed to the underlying instance of Athenna logger class."),(0,o.kt)("p",null,"If we look at that ",(0,o.kt)("inlineCode",{parentName:"p"},"Log"),", you'll see that ",(0,o.kt)("inlineCode",{parentName:"p"},"Log")," is just a constant that points to the alias ",(0,o.kt)("inlineCode",{parentName:"p"},"Athenna/Core/Logger")," that is\nregistered inside the service container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Facade } from '@athenna/ioc'\n\n/** @type {Facade & import('#src/index').Logger} **/\nexport const Log = Facade.createFor('Athenna/Core/Logger')\n")),(0,o.kt)("p",null,"This method's job is to return the name of a service container binding. When a user references any static method on the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Log")," facade, Athenna resolves the ",(0,o.kt)("inlineCode",{parentName:"p"},"Athenna/Core/Logger")," binding from the ",(0,o.kt)("a",{parentName:"p",href:"/docs/architecture-concepts/container"},(0,o.kt)("inlineCode",{parentName:"a"},"service container")),"\nand runs the requested method (in this case, ",(0,o.kt)("inlineCode",{parentName:"p"},"success"),") against that object."),(0,o.kt)("h2",{id:"id-facade-class-reference"},"Facade class reference"),(0,o.kt)("p",null,"Below you will find every facade and its underlying class. This is a useful tool for quickly digging into the API\ndocumentation for a given facade root. The service container binding key is also included where applicable."),(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Facade"),(0,o.kt)("th",null,"Reference class"),(0,o.kt)("th",null,"Service container binding alias"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Logger/blob/develop/src/Facades/Log.js"},"Log")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Logger/blob/develop/src/index.js"},"Logger")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Logger/blob/develop/src/Providers/LoggerProvider.js"},"Athenna/Core/Logger"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/Facades/Server.js"},"Server")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/index.js"},"Http")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/Providers/HttpServerProvider.js"},"Athenna/Core/HttpServer"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/Facades/Route.js"},"Route")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/Router/Router.js"},"Router")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Http/blob/develop/src/Providers/HttpRouteProvider.js"},"Athenna/Core/HttpRoute"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Artisan/blob/develop/src/Facades/Artisan.js"},"Artisan")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Artisan/blob/develop/src/index.js"},"Artisan")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Artisan/blob/develop/src/Providers/ArtisanProvider.js"},"Athenna/Core/Artisan"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Database/blob/develop/src/Facades/Database.js"},"Database")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Database/blob/develop/src/index.js"},"Database")),(0,o.kt)("td",null,(0,o.kt)("a",{href:"https://github.com/AthennaIO/Database/blob/develop/src/Providers/DatabaseProvider.js"},"Athenna/Core/Database"))))),(0,o.kt)("h2",{id:"id-writing-facades"},"Writing facades"),(0,o.kt)("p",null,"First you need to create a new ",(0,o.kt)("a",{parentName:"p",href:"/docs/architecture-concepts/providers#id-writing-service-providers"},(0,o.kt)("inlineCode",{parentName:"a"},"service provider")),"\nto resolve your dependency inside the ",(0,o.kt)("a",{parentName:"p",href:"/docs/architecture-concepts/container"},(0,o.kt)("inlineCode",{parentName:"a"},"service container")),". Just run\n",(0,o.kt)("inlineCode",{parentName:"p"},"node artisan make:provider HelperProvider")," and register your binding:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { String } from '#app/Helpers/String'\nimport { ServiceProvider } from '@athenna/ioc'\n\nexport class HelperProvider extends ServiceProvider {\n  /**\n   * Register any application services.\n   *\n   * @return {void}\n   */\n  register() {}\n\n  /**\n   * Bootstrap any application services.\n   *\n   * @return {void}\n   */\n  boot() {\n    this.container.bind('App/Helpers/String', String)\n  }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you have not used ",(0,o.kt)("inlineCode",{parentName:"p"},"node artisan make:provider")," command, you will need to register your ",(0,o.kt)("inlineCode",{parentName:"p"},"HelperProvider")," inside ",(0,o.kt)("inlineCode",{parentName:"p"},"config/app.js"),"\nfile inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"providers")," array."))),(0,o.kt)("p",null,"The Artisan can generate a new Facade via the ",(0,o.kt)("inlineCode",{parentName:"p"},"make:facade")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"node artisan make:facade String\n")),(0,o.kt)("p",null,"The Facade file will be generated inside ",(0,o.kt)("inlineCode",{parentName:"p"},"providers/Facades")," folder. Open this file and change the alias to your\nprovider alias:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Facade } from '@athenna/ioc'\n\n/** @type {Facade & import('#app/Helpers/String').String} */\nexport const String = Facade.createFor('App/Helpers/String')\n")),(0,o.kt)("p",null,"Now we can start using our brand new ",(0,o.kt)("inlineCode",{parentName:"p"},"String")," facade:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Route } from '@athenna/http' // Route Facade\nimport { String } from '#providers/Facades/String' // String Facade\n\nRoute.get('/welcome', function ({ response }) {\n    return response.status(200).send({ hello: String.toPascalCase('world') })\n})\n")))}p.isMDXComponent=!0}}]);