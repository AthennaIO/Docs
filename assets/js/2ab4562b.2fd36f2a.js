"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[3699],{9818:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"getting-started/directory-structure","title":"Directory Structure","description":"Understand the directory structure of your project.","source":"@site/docs/getting-started/directory-structure.mdx","sourceDirName":"getting-started","slug":"/getting-started/directory-structure","permalink":"/docs/getting-started/directory-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/AthennaIO/Docs/tree/main/docs/getting-started/directory-structure.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Directory Structure","sidebar_position":5,"description":"Understand the directory structure of your project."},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/getting-started/configuration"},"next":{"title":"Application Lifecycle","permalink":"/docs/architecture-concepts/application-lifecycle"}}');var o=t(4848),i=t(8453),s=t(7049);const a={title:"Directory Structure",sidebar_position:5,description:"Understand the directory structure of your project."},c="Directory Structure",d={},l=[{value:"Default structure",id:"default-structure",level:2},{value:"The app directory",id:"the-app-directory",level:3},{value:"The bootstrap directory",id:"the-bootstrap-directory",level:3},{value:"The config directory",id:"the-config-directory",level:3},{value:"The database directory",id:"the-database-directory",level:3},{value:"The providers directory",id:"the-providers-directory",level:3},{value:"The routes directory",id:"the-routes-directory",level:3},{value:"The storage directory",id:"the-storage-directory",level:3},{value:"The tests directory",id:"the-tests-directory",level:3},{value:"Do your own structure",id:"do-your-own-structure",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"directory-structure",children:"Directory Structure"})}),"\n",(0,o.jsx)(r.p,{children:"Understand the directory structure of your project."}),"\n",(0,o.jsx)(r.admonition,{type:"important",children:(0,o.jsxs)(r.p,{children:["We highly recommend you to use the ",(0,o.jsx)(r.code,{children:"node artisan make"}),"\ncommand to generate the files of your application. If\nusing this command, it will automatically generate the\nfile and register it wherever it is needed. Take as an example\nthe ",(0,o.jsx)(r.code,{children:"node artisan make:command command"}),". First it will\ngenerate the file and then will register the command inside\nthe ",(0,o.jsx)(r.code,{children:"commands"})," map property of ",(0,o.jsx)(r.code,{children:".athennarc.json"})," file."]})}),"\n",(0,o.jsx)(r.h2,{id:"default-structure",children:"Default structure"}),"\n",(0,o.jsx)(r.h3,{id:"the-app-directory",children:"The app directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"app"})," directory contains the core code of your application.\nWe'll explore this directory in more detail soon. Almost all\nthe classes in your application will be in this directory."]}),"\n",(0,o.jsx)(r.h3,{id:"the-bootstrap-directory",children:"The bootstrap directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"bootstrap"})," directory contains all of your application's\nbootstrap files. It's here that Athenna holds the ",(0,o.jsx)(r.code,{children:"main.ts"}),"\nfile that bootstrap the application using the ",(0,o.jsx)(r.code,{children:"Ignite"})," class."]}),"\n",(0,o.jsx)(r.h3,{id:"the-config-directory",children:"The config directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"config"})," directory contains all of your application's\nconfiguration files. It's a great idea to read through all\nof these files and familiarize yourself with all the options\navailable to you."]}),"\n",(0,o.jsx)(r.h3,{id:"the-database-directory",children:"The database directory"}),"\n",(0,o.jsx)(r.p,{children:"This directory does not exist by default, but will be created\nfor you if you execute the following command:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# To install the library and configure it\nnode artisan install @athenna/database\n\n# To just configure the library\nnode artisan configure @athenna/database\n"})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"database"})," directory contains your database migrations,\nmodel factories, and seeds. If you wish, you may also use\nthis directory to hold an SQLite database."]}),"\n",(0,o.jsx)(r.h3,{id:"the-providers-directory",children:"The providers directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"providers"})," directory contains all the service providers\nfor your application. Service providers bootstrap your\napplication by binding services in the service container,\nregistering events, or performing any other tasks to prepare\nyour application to run."]}),"\n",(0,o.jsx)(r.h3,{id:"the-routes-directory",children:"The routes directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"routes"})," directory contains all the route definitions\nfor your application. By default, several route files are\nincluded with Athenna:"]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(r.code,{children:"http.ts"})," file is where you will define the entry\npoint of your api using the Route facade that is provided\nby the HttpRouteProvider."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(r.code,{children:"console.ts"})," file is where you will define the entry\npoint of your commands using the Artisan facade that is\nprovided by the ArtisanProvider."]}),"\n"]}),"\n",(0,o.jsxs)(r.admonition,{type:"important",children:[(0,o.jsxs)(r.p,{children:["As you may have noticed your project does not have the\n",(0,o.jsx)(r.code,{children:"console.ts"})," file. We only recommend using this file when\nyou don't want to use TypeScript in your application or\nwhen you want to add some personalized option of ",(0,o.jsx)(r.a,{href:"https://www.npmjs.com/package/commander",children:"commander"}),"\nto your command. Check the example:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"import { Artisan } from '@athenna/artisan'\n\nArtisan.route('hello', function (helloArg: string, options: { hello: string }) {\n    console.log(helloArg)\n    console.log(options.hello)\n}) // \ud83d\udc48 Artisan.route return an instance of Commander\n.argument('<hello>', 'Description for hello argument.')\n.option('--hello', 'Description for hello flag.')\n"})})]}),"\n",(0,o.jsx)(r.h3,{id:"the-storage-directory",children:"The storage directory"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"storage"})," directory contains your logs, file caches,\nfiles uploaded locally and other files generated by the\nframework. This directory is segregated into the following\ndirectories:"]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(r.code,{children:"app"})," directory may be used to store any files\ngenerated by your application."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(r.code,{children:"framework"})," directory is used to store framework\ngenerated files and caches."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(r.code,{children:"logs"})," directory contains your application's log\nfiles."]}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"the-tests-directory",children:"The tests directory"}),"\n",(0,o.jsxs)(r.p,{children:["You can create a test executing the ",(0,o.jsx)(r.code,{children:"node artisan make:test"}),"\ncommand. The ",(0,o.jsx)(r.code,{children:"tests"})," directory contains your unitary and E2E\ntests. Each test file name should always end with the word\nTest at the end. You may run your tests using the ",(0,o.jsx)(r.code,{children:"node artisan test"}),"\ncommand."]}),"\n",(0,o.jsx)(r.admonition,{type:"warning",children:(0,o.jsxs)(r.p,{children:["If your test file name does not end with ",(0,o.jsx)(r.code,{children:"Test"}),", it will\nbe ignored and the test class will not run. But, you can\ncustomize this behavior in the configure function of ",(0,o.jsx)(r.a,{href:"https://japa.dev/docs",children:"Japa"}),"\ninside your ",(0,o.jsx)(s.A,{father:"bin",child:"test.ts"})," file."]})}),"\n",(0,o.jsx)(r.h2,{id:"do-your-own-structure",children:"Do your own structure"}),"\n",(0,o.jsx)(r.p,{children:"There are some files in your project that are crucial to\nkeep in certain places. Let's analyze some of them:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(s.A,{father:"bin",child:"main.ts"})," file is the entry point of the\n",(0,o.jsx)(r.code,{children:"node artisan serve"})," command. Every time that you run this\ncommand, Athenna will use this file to run your application."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(s.A,{father:"bin",child:"artisan.ts"})," file is the entry point of the\n",(0,o.jsx)(r.code,{children:"artisan.js"})," script."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(s.A,{father:"config"})," path is where you are going to set up your\nconfiguration files. You can learn more about configuration\nfiles at ",(0,o.jsx)(r.a,{href:"https://athenna.io/docs/getting-started/configuration",children:"the configuration documentation section"}),"."]}),"\n",(0,o.jsxs)(r.li,{children:["The ",(0,o.jsx)(s.A,{father:"routes",child:"http.ts"})," file is where you are going to register\nyour Http server routes."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Athenna is a framework with a lot of opinions, with predefined\nproject structures; it was built that way to make your life easier.\nBut speaking from developer to developer, we know how fun is to be\nable to have control over everything in your application,\nespecially the structure of your project \ud83d\ude0e."}),"\n",(0,o.jsx)(r.p,{children:"With that in mind, Athenna was built in a fully configurable\nway. You can create your files and folders anywhere, even the\none that is crucial to keep in certain places."})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},7049:(e,r,t)=>{t.d(r,{A:()=>i});t(6540);const n={hoverCardContainer:"hoverCardContainer_jqUQ",hoverCardLink:"hoverCardLink_oDZU",hoverCard:"hoverCard_qTDS"};var o=t(4848);function i(e){let r=e.father;switch(e.father){case"storage":r="src/storage";break;case"logs":r="src/storage/logs";break;case"views":r="src/resources/views";break;case"locales":r="src/resources/locales";break;case"static":r="src/resources/static";break;case"config":r="src/config";break;case"database":r="src/database";break;case"seeders":r="src/database/seeders";break;case"migrations":r="src/database/migrations";break;case"console":r="src/console";break;case"commands":r="src/console/commands";break;case"cron":r="src/cron";break;case"schedulers":r="src/cron/schedulers";break;case"models":r="src/models";break;case"services":r="src/services";break;case"repositories":r="src/repositories";break;case"http":r="src/http";break;case"controllers":r="src/http/controllers";break;case"middlewares":r="src/http/middlewares";break;case"interceptors":r="src/http/interceptors";break;case"terminators":r="src/http/terminators";break;case"stubs":r="tests/stubs";break;case"fixtures":r="tests/fixtures";break;case"providers":r="src/providers";break;case"facades":r="src/facades";break;case"routes":r="src/routes";break;case"validators":r="src/validators"}return(0,o.jsxs)("div",{className:n.hoverCardContainer,children:[(0,o.jsx)("a",{className:n.hoverCardLink,href:`/docs/the-basics/helpers#path${e.father}`,children:(0,o.jsxs)("code",{children:["Path.",e.father,"(",e.child?`'${e.child}'`:"",")"]})}),(0,o.jsx)("div",{className:n.hoverCard,children:(0,o.jsxs)("p",{style:{margin:0},children:["./",r,e.child?`/${e.child}`:""]})})]})}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>a});var n=t(6540);const o={},i=n.createContext(o);function s(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);