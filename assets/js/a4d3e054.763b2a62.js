"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[755],{3696:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>l});var r=a(4848),n=a(8453),t=a(7049);const d={title:"Seeding",sidebar_position:4,description:"See how to create and run database seeders."},c="Database: Seeding",i={id:"database/seeding",title:"Seeding",description:"See how to create and run database seeders.",source:"@site/docs/database/seeding.mdx",sourceDirName:"database",slug:"/database/seeding",permalink:"/docs/database/seeding",draft:!1,unlisted:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/database/seeding.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Seeding",sidebar_position:4,description:"See how to create and run database seeders."},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/docs/database/migrations"},next:{title:"Getting Started",permalink:"/docs/orm/getting-started"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Writing seeders",id:"writing-seeders",level:2},{value:"Running seeders",id:"running-seeders",level:2},{value:"Setting the seeder connection",id:"setting-the-seeder-connection",level:3}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"database-seeding",children:"Database: Seeding"})}),"\n",(0,r.jsx)(s.p,{children:"See how to create and run database seeders."}),"\n",(0,r.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(s.p,{children:["Athenna includes the ability to seed your database with data using\nseed classes. All seed classes are stored in the ",(0,r.jsx)(t.A,{father:"seeders"}),"\ndirectory."]}),"\n",(0,r.jsx)(s.h2,{id:"writing-seeders",children:"Writing seeders"}),"\n",(0,r.jsxs)(s.p,{children:["To generate a seeder, execute the ",(0,r.jsx)(s.code,{children:"make:seeder"})," Artisan command. All\nseeders generated by the framework will be placed in the  ",(0,r.jsx)(t.A,{father:"seeders"}),"\ndirectory:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"node artisan make:seeder UserSeeder\n"})}),"\n",(0,r.jsxs)(s.p,{children:["A seeder class only contains one method by default: ",(0,r.jsx)(s.code,{children:"run()"}),". This method\nis called when the ",(0,r.jsx)(s.code,{children:"db:seed"})," Artisan command is executed. Within the\n",(0,r.jsx)(s.code,{children:"run()"})," method, you may insert data into your database however you wish.\nYou may use the query builder to manually insert data, or you may use\n",(0,r.jsx)(s.a,{href:"/docs/orm/getting-started",children:"the model factories"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import { User } from '#src/models/user'\nimport { BaseSeeder, type DatabaseImpl } from '@athenna/database'\n\nexport class UserSeeder extends BaseSeeder { \n  public async run(db: DatabaseImpl) {\n    await db.table('users').createMany([/*.....*/])\n\n    await User.factory().count(20).create()\n  }\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"running-seeders",children:"Running seeders"}),"\n",(0,r.jsxs)(s.p,{children:["You may execute the ",(0,r.jsx)(s.code,{children:"db:seed"})," Artisan command to seed your database.\nBy default, the ",(0,r.jsx)(s.code,{children:"db:seed"})," command will run all the seeders\ninside the  ",(0,r.jsx)(t.A,{father:"seeders"}),"  folder, but you can run only one seeder\nusing the ",(0,r.jsx)(s.code,{children:"--classes"})," argument:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"node artisan db:seed\n\nnode artisan db:seed --classes=UserSeeder\n"})}),"\n",(0,r.jsx)(s.h3,{id:"setting-the-seeder-connection",children:"Setting the seeder connection"}),"\n",(0,r.jsxs)(s.p,{children:["If your seeder will be interacting with a database connection other\nthan your application's default database connection, you should set\nthe static method ",(0,r.jsx)(s.code,{children:"connection()"})," in your seeder:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import { BaseSeeder, type DatabaseImpl } from '@athenna/database'\n\nexport class UserSeeder extends BaseSeeder { \n  public static connection() {\n    return 'postgres'\n  }\n\n  public async run(db: DatabaseImpl) {\n    await Database.table('users').createMany([/*.....*/])\n\n    await User.factory().count(20).create()\n  }\n}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7049:(e,s,a)=>{a.d(s,{A:()=>t});a(6540);const r={hoverCardContainer:"hoverCardContainer_jqUQ",hoverCardLink:"hoverCardLink_oDZU",hoverCard:"hoverCard_qTDS"};var n=a(4848);function t(e){let s=e.father;switch(e.father){case"storage":s="src/storage";break;case"logs":s="src/storage/logs";break;case"views":s="src/resources/views";break;case"locales":s="src/resources/locales";break;case"static":s="src/resources/static";break;case"config":s="src/config";break;case"database":s="src/database";break;case"seeders":s="src/database/seeders";break;case"migrations":s="src/database/migrations";break;case"console":s="src/console";break;case"commands":s="src/console/commands";break;case"cron":s="src/cron";break;case"schedulers":s="src/cron/schedulers";break;case"models":s="src/models";break;case"services":s="src/services";break;case"repositories":s="src/repositories";break;case"http":s="src/http";break;case"controllers":s="src/http/controllers";break;case"middlewares":s="src/http/middlewares";break;case"interceptors":s="src/http/interceptors";break;case"terminators":s="src/http/terminators";break;case"stubs":s="tests/stubs";break;case"fixtures":s="tests/fixtures";break;case"providers":s="src/providers";break;case"facades":s="src/facades";break;case"routes":s="src/routes"}return(0,n.jsxs)("div",{className:r.hoverCardContainer,children:[(0,n.jsx)("a",{className:r.hoverCardLink,href:`/docs/the-basics/helpers#path${e.father}`,children:(0,n.jsxs)("code",{children:["Path.",e.father,"(",e.child?`'${e.child}'`:"",")"]})}),(0,n.jsx)("div",{className:r.hoverCard,children:(0,n.jsxs)("p",{style:{margin:0},children:["./",s,e.child?`/${e.child}`:""]})})]})}},8453:(e,s,a)=>{a.d(s,{R:()=>d,x:()=>c});var r=a(6540);const n={},t=r.createContext(n);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);