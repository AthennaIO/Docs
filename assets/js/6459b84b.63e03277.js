"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[7868],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Installation",sidebar_position:1,description:"How to install and set up your first Athenna project."},o="Installation",l={unversionedId:"getting-started/installation",id:"getting-started/installation",title:"Installation",description:"How to install and set up your first Athenna project.",source:"@site/docs/getting-started/installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/docs/getting-started/installation",draft:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/getting-started/installation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Installation",sidebar_position:1,description:"How to install and set up your first Athenna project."},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"AthennaRC File",permalink:"/docs/getting-started/athennarc-file"}},s={},p=[{value:"Your first Athenna project",id:"your-first-athenna-project",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installing via package manager",id:"installing-via-package-manager",level:3},{value:"Application type",id:"application-type",level:4},{value:"Project structure",id:"project-structure",level:4},{value:"Running your application",id:"running-your-application",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"How to install and set up your first Athenna project."),(0,r.kt)("h2",{id:"your-first-athenna-project"},"Your first Athenna project"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"First, you need to install ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js"),".\nWe recommend using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm"},"nvm")," to do that."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm#installing-and-updating"},"Click here to install nvm and get npm and Node.js\nrunning on your machine."))),(0,r.kt)("p",null,"After you install ",(0,r.kt)("inlineCode",{parentName:"p"},"nvm"),", we recommend you to install\nNode.js v20.x or above, this is the current version that\nthe project is being developed, but you can still use\nNode.js v16.x and above. Install Node.js v20.x by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"nvm install 20\n")),(0,r.kt)("p",null,"We recommend setting Node.js v20.x as the default version, to do\nso with ",(0,r.kt)("inlineCode",{parentName:"p"},"nvm")," run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"nvm alias default 20.8.1\n")),(0,r.kt)("h3",{id:"installing-via-package-manager"},"Installing via package manager"),(0,r.kt)("p",null,"We want it to be as easy as possible to get started with\nAthenna. With that in mind, we developed a CLI to assist\nin the creation of a new project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @athenna/cli\n")),(0,r.kt)("p",null,"Then you can run this command to generate your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"athenna new my-project-name\n")),(0,r.kt)("p",null,"The installation process prompts for the following selections:"),(0,r.kt)("h4",{id:"application-type"},"Application type"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REST Api")," application is ideal for creating a Http server\nusing REST architecture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CLI")," application is ideal for creating global CLI's to publish\nin some registry like npm.")),(0,r.kt)("h4",{id:"project-structure"},"Project structure"),(0,r.kt)("p",null,"The installation process will ask if you want to create your\nproject with a ",(0,r.kt)("inlineCode",{parentName:"p"},"slim")," project structure. All the Athenna\npackages implementation assumes that you are using the default\nproject structure, but you will always be able to use your own\nand configure the packages to work with it."),(0,r.kt)("h2",{id:"running-your-application"},"Running your application"),(0,r.kt)("p",null,"To run your application in development mode,\nrun the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"node artisan serve --watch\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"serve")," command will look up for your ",(0,r.kt)("inlineCode",{parentName:"li"},"Path.bootstrap('main.ts')"),"\nfile to bootstrap your application with predefined configurations."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"watch")," flag is meant to watch the file system for\nchanges and restart your application automatically when\ndoing some change on it.")))}d.isMDXComponent=!0}}]);