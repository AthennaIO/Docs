"use strict";(self.webpackChunk_athenna_docs=self.webpackChunk_athenna_docs||[]).push([[9022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||o;return n?i.createElement(d,a(a({ref:t},c),{},{components:n})):i.createElement(d,a({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const o={title:"Security with Helmet",sidebar_position:8,description:"See how to improve the security of your REST API with Helmet in Athenna.",tags:["REST API Application","Security with Helmet"]},a="Security with Helmet",l={unversionedId:"rest-api-application/security-with-helmet",id:"rest-api-application/security-with-helmet",title:"Security with Helmet",description:"See how to improve the security of your REST API with Helmet in Athenna.",source:"@site/docs/rest-api-application/security-with-helmet.mdx",sourceDirName:"rest-api-application",slug:"/rest-api-application/security-with-helmet",permalink:"/docs/rest-api-application/security-with-helmet",draft:!1,editUrl:"https://github.com/AthennaIO/Docs/tree/main/docs/rest-api-application/security-with-helmet.mdx",tags:[{label:"REST API Application",permalink:"/docs/tags/rest-api-application"},{label:"Security with Helmet",permalink:"/docs/tags/security-with-helmet"}],version:"current",sidebarPosition:8,frontMatter:{title:"Security with Helmet",sidebar_position:8,description:"See how to improve the security of your REST API with Helmet in Athenna.",tags:["REST API Application","Security with Helmet"]},sidebar:"tutorialSidebar",previous:{title:"Tracing Requests",permalink:"/docs/rest-api-application/tracing-requests"},next:{title:"Swagger Documentation",permalink:"/docs/rest-api-application/swagger-documentation"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Configuring for specific routes",id:"configuring-for-specific-routes",level:2},{value:"Usage in route groups",id:"usage-in-route-groups",level:3},{value:"Usage in route resources",id:"usage-in-route-resources",level:3},{value:"Disabling helmet",id:"disabling-helmet",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"security-with-helmet"},"Security with Helmet"),(0,r.kt)("p",null,"See how to improve the security of your REST API with Helmet in Athenna."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/helmet"},(0,r.kt)("inlineCode",{parentName:"a"},"Helmet"))," helps secure\napplications by setting HTTP response headers. By default,\nHelmet sets the following headers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Content-Security-Policy"),": A powerful allow-list of what can\nhappen on your page which mitigates many attacks."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cross-Origin-Opener-Policy"),": Helps process-isolate your\npage."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cross-Origin-Resource-Policy"),": Blocks others from loading\nyour resources cross-origin."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Origin-Agent-Cluster"),": Changes process isolation to be\norigin-based."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Referrer-Policy"),": Controls the Referer header."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Strict-Transport-Security"),": Tells browsers to prefer\nHTTPS."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-Content-Type-Options"),": Avoids MIME sniffing."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-DNS-Prefetch-Control"),": Controls DNS prefetching."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-Download-Options"),": Forces downloads to be saved\n(Internet Explorer only)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-Frame-Options"),": Legacy header that mitigates clickjacking\nattacks."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-Permitted-Cross-Domain-Policies"),": Controls cross-domain\nbehavior for Adobe products, like Acrobat."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-Powered-By"),": Info about the web server. Removed because\nit could be used in simple attacks."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X-XSS-Protection"),": Legacy header that tries to mitigate XSS\nattacks, but makes things worse, so Helmet disables it.")),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"Athenna uses the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/helmet"},(0,r.kt)("inlineCode",{parentName:"a"},"@fastify/helmet")),"\nplugin inside ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpKernel"),". All the configurations that\n",(0,r.kt)("inlineCode",{parentName:"p"},"@fastify/helmet")," supports can be set inside ",(0,r.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')"),"\nfile in the ",(0,r.kt)("inlineCode",{parentName:"p"},"helmet")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export default {\n  helmet: {\n    global: true\n  }\n}\n")),(0,r.kt)("h2",{id:"configuring-for-specific-routes"},"Configuring for specific routes"),(0,r.kt)("p",null,"In Athenna you can set specific options of helmet\nfor specific routes. You can also disable the ",(0,r.kt)("inlineCode",{parentName:"p"},"global"),"\noption of your ",(0,r.kt)("inlineCode",{parentName:"p"},"helmet")," configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"Path.config('http.ts')"),"\nand set different rules in your routes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route\n  .get('/hello', 'WelcomeController.show')\n  .helmet({ frameguard: { action: 'foo' } }) \ud83d\udc48\n")),(0,r.kt)("h3",{id:"usage-in-route-groups"},"Usage in route groups"),(0,r.kt)("p",null,"You can also use the ",(0,r.kt)("inlineCode",{parentName:"p"},"helmet()")," method in route groups.\nThis will set the same configuration for all routes inside\nthe group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"Route.group(() => {\n    Route.get('/hello', 'WelcomeController.show')\n}).helmet({ frameguard: { action: 'foo' } }) \ud83d\udc48\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"helmet()"),' method of route groups will never\nsubscribe the already set methods of routes. Use it\nto create "defaults" configurations for all routes.')),(0,r.kt)("h3",{id:"usage-in-route-resources"},"Usage in route resources"),(0,r.kt)("p",null,"Same behavior as route groups, but for resources:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=\"Path.route('http.ts')\"",title:"\"Path.route('http.ts')\""},"// Set the same configurations for all routes of resource\nRoute.resource('/tests', 'WelcomeController').helmet({...})\n\n// Set configuration only for that specific action of resource\nRoute.resource('/tests', 'WelcomeController').helmet('index', {...})\nRoute.resource('/tests', 'WelcomeController').helmet('store', {...})\n")),(0,r.kt)("h2",{id:"disabling-helmet"},"Disabling helmet"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpKernel")," class will automatically disable the\nplugin registration if the package does not exist, so\nto disable helmet in Athenna you need to\nremove the ",(0,r.kt)("inlineCode",{parentName:"p"},"@fastify/helmet")," package from your\napplication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm remove @fastify/helmet\n")))}m.isMDXComponent=!0}}]);